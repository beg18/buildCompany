@import "../../bower_components/fancybox/jquery.fancybox.css";@import "../../bower_components/owl-carousel/owl.carousel.css";@import "../../bower_components/countdown/jquery.countdown.css";@import "../../bower_components/font-awesome-4.2.0/css/font-awesome.min.css";@import "../../bower_components/corenav/dist/coreNavigation-1.1.3.min.css";@import "../../bower_components/animate/animate-min.css";blockquote,body,code,dd,div,dl,dt,fieldset,form,h1,h2,h3,h4,h5,h6,input,li,p,pre,td,textarea,th,ul{margin:0;padding:0}table{border-collapse:collapse;border-spacing:0}abbr,fieldset,img{border:0}address,caption,cite,code,dfn,em,strong,th,var{font-style:normal;font-weight:400}ul li{list-style:none}caption,th{text-align:left}h1,h2,h3,h4,h5,h6{font-size:100%;font-weight:400}sup{vertical-align:text-top}sub{vertical-align:text-bottom}input,select,textarea{font-family:inherit;font-size:inherit;font-weight:inherit}legend{color:#000}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}img{max-width:100%;height:auto}.cover{background-size:cover}.wrapper{max-width:1150px;max-width:1190px;margin:0 auto;padding-left:30px;padding-right:30px}.container-wrap{min-width:300px;min-width:18.75rem;max-width:1950px;max-width:121.875rem;padding:0 15px;padding:0 .9375rem;box-sizing:border-box;margin:0 auto}*{transition:.5s;transition:all .5s ease-out}::-webkit-input-placeholder{color:#666;opacity:1}:-moz-placeholder,::-moz-placeholder{color:#666;opacity:1}:-ms-input-placeholder{color:#666;opacity:1}body{font-family:Arial,Helvetica,sans-serif;color:#000;overflow-x:hidden}ol,ul{list-style:none;padding:0}h1,h2,h3,h4,h5,h6,ol,ul{margin:0}a:focus{outline:none}fieldset{border:0;margin:0;padding:0}*,:after,:before{box-sizing:border-box}body,html{height:100%}body{min-width:300px;min-width:18.75rem;position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}footer,header{-ms-flex:0 0 auto;flex:0 0 auto}main{-ms-flex:1 0 auto;flex:1 0 auto}html{box-sizing:border-box;font-size:16px}h1{font-size:2.25rem}h2{font-size:1.875rem}h3{font-size:1.5rem}h4{font-size:1.125rem}h5{font-size:.875rem}h6{font-size:.75rem}@media screen and (max-width:1300px){.wrapper{padding-left:15px;padding-right:15px}}@media screen and (max-width:992px){.wrapper{padding-left:15px;padding-right:15px}}@media screen and (max-width:768px){html{font-size:15px}}@media screen and (max-width:576px){html{font-size:14px}}@media screen and (max-width:380px){html{font-size:13px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlcy1wZXJjZW50YWdlLmNzcyIsInN0eWxlcy1wZXJjZW50YWdlLmxlc3MiLCJsaWJzL3NtYXJ0LWdyaWQtcGVyY2VudGFnZS5sZXNzIiwibGlicy9zbWFydC1ncmlkLmxlc3MiLCJsaWJzL215RnJhbWV3b3Jrcy9zdXBlckxlc3MubGVzcyIsIl9lbGVtZW50cy5sZXNzIiwiLi4vLi4vYm93ZXJfY29tcG9uZW50cy9sZXNzaGF0L2xlc3NoYXQubGVzcyIsIi4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvTEVTUyBlbGVtZW50cyBtaXhpbnMvbGVzc2VsZW1lbnRzLmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ0JBLDhEQ0FRLEFDNlJKLCtEQUFBLEFBQVMsZ0VBQUEsQUFBTSw2RUFBQSxBQUFNLDJFQUFBLEFBQU0seURBQUEsQUZuSy9CLG1HQXVCRSxTQUFVLEFHMFFMLFNBQUEsQ0h4UU4sQUcyUUcsTUFBUSx5QkFBQSxBQUNKLGdCQUFBLENIdlFQLEFHeVFNLGtCQUFTLFFBQUEsQ0FBRyxBSGpRbkIsK0NHMlFVLGtCQUFBLEFBQVMsZUFBQSxDSGhRbEIsQUFFRCxNQUNFLGVBQWlCLENHa1FmLEFIL1BKLFdHa1FZLGVBQUEsQ0FBTSxBQUFtQixrQkFBcUMsZUFBQSxBQUFRLGVBQUEsQ0hyUGpGLEFHd1BHLElBQ0ksdUJBQUEsQ0hyUFAsQUFFRCxJQUNFLDBCQUE0QixDQUM3QixBQUVELHNCQUdFLG9CQUFxQixBQUNyQixrQkFBbUIsQUFDbkIsbUJBQXFCLENBQ3RCLEFBRUQsT0FDRSxVQUFZLENBQ2IsQUFFRCxtRkFZRSxhQUFlLENBQ2hCLEFBRUQsSUFDRSxlQUFnQixBQUNoQixXQUFhLENBQ2QsQUE0QkQsT0FHRSxxQkFBdUIsQ0FDeEIsQUEwRUQsU0lrRUUsaUJBQUEsQUFDQSxpQkFBQSxBQUNBLGNBQUEsQUFDQSxrQkFBQSxBSmhFQSxrQkFBb0IsQ0t0VXRCLEFMeVVBLGdCTXlhRSxnQkFBQSxBQUNBLG1CQUFBLEFDbnFCQSxpQkFBQSxBQUNBLHFCQUFBLEFBQ0EsZUFBQSxBQUNBLG1CQUFBLEFQNlBBLHNCQUF1QixBQUN2QixhQUFlLENBQ2hCLEFBRUQsRUFJRSxlQUFpQixBQUlqQiwyQkFBOEIsQ0szVS9CLEFMb1ZELDRCQUNFLFdBQVksQUFDWixTQUFXLENBQ1osQUFPRCxxQ0tyVEksV0FBQSxBTHVURixTQUFXLENLcFRiLEFMdVRBLHVCS3JUSSxXQUFBLEFBQ0EsU0FBQSxDTHVUSCxBQWFELEtLclRJLHVDQUFBLEFBQ0EsV0FBQSxBTHVURixpQkFBbUIsQ0twVHJCLEFBQ0EsTUFDSSxnQkFBQSxBQUdKLFNBQUEsQ0FDQSxBTHdUQSx3QkFKRSxRQUFVLENBV1gsQUtuVEQsUUFDSSxZQUFBLENMc1RILEFBRUQsU0FDRSxTQUFVLEFLalRaLFNBQUEsQUFDSSxTQUFBLENMbVRILEFFcE1HLGlCRjBNRixxQkFBdUIsQ0c3R3JCLEFIZ0hKLFVBRUUsV0FBYSxDRW5NWCxBRnNNSixLQUNFLGdCQUFpQixBQUNqQixtQkFBb0IsQUczR2xCLGtCQUF3QyxBQW9JM0Msb0JBQUEsYUFBQSxBSHRCQywwQkk3Y0UsQUo2Y0YscUJJN2NFLENKOGNILEFFaE1HLGNGb01GLGtCSWxkRSxBSmtkRixhSWxkRSxDSm1kSCxBR3hHRyxLQXdISCxrQkFBQSxhQUFBLENIWkEsQUFFRCxLS3pUQSxzQkFBQSxBRDFKSSxjQUFBLENKc2RILEFBRUQsR0FDRSxpQkFBbUIsQ0t0VHJCLEFMeVRBLEdLclRBLGtCQUFBLENMdVRDLEFLblRELEdEM0tJLGdCQUFBLENKa2VILEFBRUQsR0FDRSxrQkFBb0IsQ0FDckIsQUFFRCxHQUNFLGlCQUFvQixDQUNyQixBQUVELEdBQ0UsZ0JBQW1CLENBQ3BCLEFBS0QscUNBTUUsU0FDRSxrQkFBbUIsQUFDbkIsa0JBQW9CLENBQ3JCLENBQ0YsQUFFRCxvQ0FvQ0UsU0FDRSxrQkFBbUIsQUFDbkIsa0JBQW9CLENBQ3JCLENBQ0YsQUFFRCxvQ0FLRSxLQUNFLGNBQWdCLENBQ2pCLENBQ0YsQUFFRCxvQ0FLRSxLQUNFLGNBQWdCLENBQ2pCLENBQ0YsQUFFRCxvQ0FLRSxLQUNFLGNBQWdCLENBQ2pCLENBQ0YiLCJmaWxlIjoic3R5bGVzLXBlcmNlbnRhZ2UuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblNJWkVcbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuXG4vKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuQ09MT1JTXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cblxuLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbkZPUiAgUFJPSkVDVCBCSU5PXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cblxuLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbkZPTlQtRkFNSUxZXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cblxuQGltcG9ydCBcIi4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvZmFuY3lib3gvanF1ZXJ5LmZhbmN5Ym94LmNzc1wiO1xuXG5AaW1wb3J0IFwiLi4vLi4vYm93ZXJfY29tcG9uZW50cy9vd2wtY2Fyb3VzZWwvb3dsLmNhcm91c2VsLmNzc1wiO1xuXG5AaW1wb3J0IFwiLi4vLi4vYm93ZXJfY29tcG9uZW50cy9jb3VudGRvd24vanF1ZXJ5LmNvdW50ZG93bi5jc3NcIjtcblxuQGltcG9ydCBcIi4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvZm9udC1hd2Vzb21lLTQuMi4wL2Nzcy9mb250LWF3ZXNvbWUubWluLmNzc1wiO1xuXG5AaW1wb3J0IFwiLi4vLi4vYm93ZXJfY29tcG9uZW50cy9jb3JlbmF2L2Rpc3QvY29yZU5hdmlnYXRpb24tMS4xLjMubWluLmNzc1wiO1xuXG5AaW1wb3J0IFwiLi4vLi4vYm93ZXJfY29tcG9uZW50cy9hbmltYXRlL2FuaW1hdGUtbWluLmNzc1wiO1xuXG5ib2R5LFxuZGl2LFxuZGwsXG5kdCxcbmRkLFxudWwsXG5saSxcbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNixcbnByZSxcbmNvZGUsXG5mb3JtLFxuZmllbGRzZXQsXG5pbnB1dCxcbnRleHRhcmVhLFxucCxcbmJsb2NrcXVvdGUsXG50aCxcbnRkIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG5maWVsZHNldCxcbmltZyxcbmFiYnIge1xuICBib3JkZXI6IDA7XG59XG5cbmFkZHJlc3MsXG5jYXB0aW9uLFxuY2l0ZSxcbmNvZGUsXG5kZm4sXG5lbSxcbnN0cm9uZyxcbnRoLFxudmFyIHtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xufVxuXG51bCBsaSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbmNhcHRpb24sXG50aCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbn1cblxuc3VwIHtcbiAgdmVydGljYWwtYWxpZ246IHRleHQtdG9wO1xufVxuXG5zdWIge1xuICB2ZXJ0aWNhbC1hbGlnbjogdGV4dC1ib3R0b207XG59XG5cbmlucHV0LFxudGV4dGFyZWEsXG5zZWxlY3Qge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxubGVnZW5kIHtcbiAgY29sb3I6ICMwMDA7XG59XG5cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbmltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG5ib2R5LFxuZGl2LFxuZGwsXG5kdCxcbmRkLFxudWwsXG5saSxcbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNixcbnByZSxcbmNvZGUsXG5mb3JtLFxuZmllbGRzZXQsXG5pbnB1dCxcbnRleHRhcmVhLFxucCxcbmJsb2NrcXVvdGUsXG50aCxcbnRkIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG5maWVsZHNldCxcbmltZyxcbmFiYnIge1xuICBib3JkZXI6IDA7XG59XG5cbmFkZHJlc3MsXG5jYXB0aW9uLFxuY2l0ZSxcbmNvZGUsXG5kZm4sXG5lbSxcbnN0cm9uZyxcbnRoLFxudmFyIHtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xufVxuXG51bCBsaSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbmNhcHRpb24sXG50aCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbn1cblxuc3VwIHtcbiAgdmVydGljYWwtYWxpZ246IHRleHQtdG9wO1xufVxuXG5zdWIge1xuICB2ZXJ0aWNhbC1hbGlnbjogdGV4dC1ib3R0b207XG59XG5cbmlucHV0LFxudGV4dGFyZWEsXG5zZWxlY3Qge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxubGVnZW5kIHtcbiAgY29sb3I6ICMwMDA7XG59XG5cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbmltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKiBCb3dlciBjb21wb25lbnRzIGltcG9ydFxuaHR0cHM6Ly9jb3JlbmF2LmNvbS9pbmRleC5odG1sXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuXG4vKiBWZW5kb3IgbGlicyBpbXBvcnRcbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgTEVTUyBFbGVtZW50cyAwLjlcbiAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgQSBzZXQgb2YgdXNlZnVsIExFU1MgbWl4aW5zXG4gICAgTW9yZSBpbmZvIGF0OiBodHRwOi8vbGVzc2VsZW1lbnRzLmNvbVxuICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4vKlxuXG4gINCf0L7QtNC60LvRjtGH0LjRgtGMINGN0YLQvtGCINGE0LDQudC7INCyINC90LDRh9Cw0LvQviBDU1MvTEVTUyDRhNCw0LnQu9CwXG4gIFxuICDQktC+0YIg0YLQsNC6OlxuICBcbiAgQGltcG9ydCBcImxlc3NlbGVtZW50cy5sZXNzXCI7XG5cbiovXG5cbi8qIE1ZIE1JWElOUyAqL1xuXG4uY292ZXIge1xuICAtd2Via2l0LWJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIC1vLWJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbi8qIEJhZGdlcyAqL1xuXG4vKiBUYWdzICovXG5cbi8qIDZkcCBlbGV2YXRpb24gbW9kaWZpZWQqL1xuXG4vKiAxMmRwIGVsZXZhdGlvbiBtb2RpZmllZCovXG5cbi8qIDE2ZHAgZWxldmF0aW9uICovXG5cbi8qIDI0ZHAgZWxldmF0aW9uICovXG5cbi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cblxuLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuXG4vKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cblxuLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG5cbi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuXG4vKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cblxuLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG5cbi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuXG4vKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cblxuLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG5cbi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuXG4vKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cblxuLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG5cbi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuXG4vKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cblxuLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG5cbi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuXG4vKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cblxuLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG5cbi8qIFByb2plY3QgRWxlbWVudHNcbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG5cbi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09XG5UYWJsZSBvZiBDb250ZW50XG5cbjEuIFdyYXBwZXJzXG4yLiBCdXR0b25zXG4zLiBGb3JtIGVsZW1lbnRzXG40LiBGb250IGZhbWlseVxuNS4gVHlwb2dyYXBoeVxuPT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cblxuLyogMS4gV3JhcHBlcnNcbj09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG5cbi8qXG4uZGVidWcge1xuICAgIC5kZWJ1ZyhyZ2JhKDAsIDAsIDAsIDAuNSksIDFweCBzb2xpZCAjZmYwKTtcbn1cbiovXG5cbi53cmFwcGVyIHtcbiAgbWF4LXdpZHRoOiAxMTUwcHg7XG4gIG1heC13aWR0aDogMTE5MHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZy1sZWZ0OiAzMHB4O1xuICBwYWRkaW5nLXJpZ2h0OiAzMHB4O1xufVxuXG4uY29udGFpbmVyLXdyYXAge1xuICBtaW4td2lkdGg6IDMwMHB4O1xuICBtaW4td2lkdGg6IDE4Ljc1cmVtO1xuICBtYXgtd2lkdGg6IDE5NTBweDtcbiAgbWF4LXdpZHRoOiAxMjEuODc1cmVtO1xuICBwYWRkaW5nOiAwIDE1cHg7XG4gIHBhZGRpbmc6IDAgMC45Mzc1cmVtO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxuKiB7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogMC41cztcbiAgLW1vei10cmFuc2l0aW9uOiAwLjVzO1xuICAtby10cmFuc2l0aW9uOiAwLjVzO1xuICB0cmFuc2l0aW9uOiAwLjVzO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2Utb3V0O1xuICAtbW96LXRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2Utb3V0O1xuICAtby10cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlLW91dDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZS1vdXQ7XG59XG5cbi8qIDIuIEJ1dHRvbnNcbj09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG5cbi8qIDMuIEZvcm0gZWxlbWVudHNcbj09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG5cbio6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogIzY2NjtcbiAgb3BhY2l0eTogMTtcbn1cblxuKjotbW96LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICM2NjY7XG4gIG9wYWNpdHk6IDE7XG59XG5cbio6Oi1tb3otcGxhY2Vob2xkZXIge1xuICBjb2xvcjogIzY2NjtcbiAgb3BhY2l0eTogMTtcbn1cblxuKjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogIzY2NjtcbiAgb3BhY2l0eTogMTtcbn1cblxuLyo0LiBGb250IGZhbWlseVxuPT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cblxuLyo1LiBUeXBvZ3JhcGh5XG49PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuXG5odG1sLFxuYm9keSB7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICBjb2xvcjogIzAwMDtcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xufVxuXG51bCxcbm9sIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuICBtYXJnaW46IDA7XG59XG5cbmE6Zm9jdXMge1xuICBvdXRsaW5lOiBub25lO1xufVxuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4qLFxuKjpiZWZvcmUsXG4qLFxuKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmh0bWwsXG5ib2R5IHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG5ib2R5IHtcbiAgbWluLXdpZHRoOiAzMDBweDtcbiAgbWluLXdpZHRoOiAxOC43NXJlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG5oZWFkZXIsXG5mb290ZXIge1xuICBmbGV4OiAwIDAgYXV0bztcbn1cblxubWFpbiB7XG4gIGZsZXg6IDEgMCBhdXRvO1xufVxuXG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMi4yNXJlbTtcbn1cblxuaDIge1xuICBmb250LXNpemU6IDEuODc1cmVtO1xufVxuXG5oMyB7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xufVxuXG5oNCB7XG4gIGZvbnQtc2l6ZTogMS4xMjVyZW07XG59XG5cbmg1IHtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbn1cblxuaDYge1xuICBmb250LXNpemU6IDAuNzVyZW07XG59XG5cbi8qIFBhZ2VzIGltcG9ydFxuPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTMwMHB4KSB7XG4gIC53cmFwcGVyIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gICAgcGFkZGluZy1yaWdodDogMTVweDtcbiAgfVxuXG4gIC53cmFwcGVyIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gICAgcGFkZGluZy1yaWdodDogMTVweDtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTJweCkge1xuICAud3JhcHBlciB7XG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG4gIH1cblxuICAud3JhcHBlciB7XG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG4gIH1cblxuICAud3JhcHBlciB7XG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG4gIH1cblxuICAud3JhcHBlciB7XG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG4gIH1cblxuICAud3JhcHBlciB7XG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG4gIH1cblxuICAud3JhcHBlciB7XG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG4gIH1cblxuICAud3JhcHBlciB7XG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG4gIH1cblxuICAud3JhcHBlciB7XG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICB9XG5cbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gIGh0bWwge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgfVxuXG4gIGh0bWwge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzODBweCkge1xuICBodG1sIHtcbiAgICBmb250LXNpemU6IDEzcHg7XG4gIH1cblxuICBodG1sIHtcbiAgICBmb250LXNpemU6IDEzcHg7XG4gIH1cbn0iLCJAaW1wb3J0IFwibGlicy9zbWFydC1ncmlkLXBlcmNlbnRhZ2UubGVzc1wiO1xuQGltcG9ydCBcIl92YXJpYWJsZXNcIjtcbkBpbXBvcnQgXCJfaGVscGVyc1wiO1xuXG5cbi5yZXNldCgpO1xuXG4vKiBCb3dlciBjb21wb25lbnRzIGltcG9ydFxuaHR0cHM6Ly9jb3JlbmF2LmNvbS9pbmRleC5odG1sXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuQGltcG9ydCBcIi4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvbGVzc2hhdC9sZXNzL3NoYXBlXCI7XG5AaW1wb3J0IFwiLi4vLi4vYm93ZXJfY29tcG9uZW50cy9sZXNzaGF0L2xlc3NoYXQubGVzc1wiO1xuQGltcG9ydCBcIi4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvZmFuY3lib3gvanF1ZXJ5LmZhbmN5Ym94LmNzc1wiO1xuQGltcG9ydCBcIi4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvb3dsLWNhcm91c2VsL293bC5jYXJvdXNlbC5jc3NcIjtcbkBpbXBvcnQgXCIuLi8uLi9ib3dlcl9jb21wb25lbnRzL2NvdW50ZG93bi9qcXVlcnkuY291bnRkb3duLmNzc1wiO1xuQGltcG9ydCBcIi4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvZm9udC1hd2Vzb21lLTQuMi4wL2Nzcy9mb250LWF3ZXNvbWUubWluLmNzc1wiO1xuQGltcG9ydCBcIi4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvY29yZW5hdi9kaXN0L2NvcmVOYXZpZ2F0aW9uLTEuMS4zLm1pbi5jc3NcIjtcbkBpbXBvcnQgXCIuLi8uLi9ib3dlcl9jb21wb25lbnRzL2FuaW1hdGUvYW5pbWF0ZS1taW4uY3NzXCI7XG5cbi8qIFZlbmRvciBsaWJzIGltcG9ydFxuPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbkBpbXBvcnQgXCJsaWJzL215RnJhbWV3b3Jrcy9fZW50eXBvXCI7XG5AaW1wb3J0IFwibGlicy9teUZyYW1ld29ya3Mvc3VwZXJMZXNzXCI7XG5AaW1wb3J0IFwibGlicy9zbWFydC1ncmlkXCI7XG5cbi8qIFByb2plY3QgRWxlbWVudHNcbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG5AaW1wb3J0IFwiX2VsZW1lbnRzXCI7XG5cbi8qIFBhZ2VzIGltcG9ydFxuPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbkBpbXBvcnQgXCJwYWdlcy9ob21lXCI7XG5cblxuXG5cblxuIiwiQGNvbHVtbnM6IDEyO1xuQGF0b206ICgxMDAlIC8gQGNvbHVtbnMpO1xuXG5AYnJlYWtfbWQ6IDk5MnB4O1xuQGJyZWFrX3NtOiA3MjBweDtcbkBicmVha194czogNTc2cHg7XG5AYnJlYWtfeHhzOiAzODBweDtcblxuQG9mZnNldDogMi41JTtcbkBvZmZzZXRfbWQ6IEBvZmZzZXQ7XG5Ab2Zmc2V0X3NtOiBAb2Zmc2V0O1xuQG9mZnNldF94czogQG9mZnNldDtcbkBvZmZzZXRfeHhzOiBAb2Zmc2V0O1xuXG5Ab2Zmc2V0X29uZV9zaWRlOiAoQG9mZnNldCAvIDIpO1xuQG9mZnNldF9tZF9vbmVfc2lkZTogKEBvZmZzZXRfbWQgLyAyKTtcbkBvZmZzZXRfc21fb25lX3NpZGU6IChAb2Zmc2V0X3NtIC8gMik7XG5Ab2Zmc2V0X3hzX29uZV9zaWRlOiAoQG9mZnNldF94cyAvIDIpO1xuQG9mZnNldF94eHNfb25lX3NpZGU6IChAb2Zmc2V0X3h4cyAvIDIpO1xuXG5AZmllbGRzOiAzMHB4O1xuQGZpZWxkc19tZDogMTVweDtcblxuLndyYXBwZXItZnVsbCgpe1xuICAgIHBhZGRpbmctbGVmdDogQGZpZWxkcztcbiAgICBwYWRkaW5nLXJpZ2h0OiBAZmllbGRzO1xuXG4gICAgLm1kLWJsb2NrKHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiBAZmllbGRzX21kO1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiBAZmllbGRzX21kO1xuICAgIH0pO1xufVxuXG4ucm93LW9mZnNldHMoKXtcbiAgICBtYXJnaW4tbGVmdDogKEBvZmZzZXRfb25lX3NpZGUgKiAtMSk7XG4gICAgbWFyZ2luLXJpZ2h0OiAoQG9mZnNldF9vbmVfc2lkZSAqIC0xKTtcbn1cblxuLmNvbC1vZmZzZXRzKEB0eXBlKXtcbiAgICBAe3R5cGV9LWxlZnQ6IEBvZmZzZXRfb25lX3NpZGU7XG4gICAgQHt0eXBlfS1yaWdodDogQG9mZnNldF9vbmVfc2lkZTtcbn1cblxuLndyYXBwZXIoKXtcbiAgICBtYXgtd2lkdGg6IDExNTBweDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICAud3JhcHBlci1mdWxsKCk7XG59XG5cbi5yb3ctZmxleCgpe1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIC5yb3ctb2Zmc2V0cygpO1xufVxuXG4ucm93LWZsb2F0KCl7XG4gICAgLnJvdy1vZmZzZXRzKCk7XG4gICAgLmNsZWFyZml4KCk7XG59XG5cbi5yb3ctaWIoKXtcbiAgICAucm93LW9mZnNldHMoKTtcbn1cblxuLmNvbCgpe1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICAgIC5jb2wtb2Zmc2V0cyhtYXJnaW4pO1xufVxuXG4uY29sLWZsb2F0KCl7XG4gICAgZmxvYXQ6IGxlZnQ7XG59XG5cbi5jb2wtaWIoKXtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cblxuLmNvbC1wYWRkaW5nKCl7XG4gICAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICAgIC5jb2wtb2Zmc2V0cyhwYWRkaW5nKTtcbn1cblxuLnNpemUoQG4pe1xuICAgIHdpZHRoOiBAYXRvbSAqIEBuIC0gQG9mZnNldDtcbn1cblxuLnNpemUtbWQoQG4pe1xuICAgIC5tZCh3aWR0aCwgQGF0b20gKiBAbiAtIEBvZmZzZXRfbWQpO1xufVxuXG4uc2l6ZS1zbShAbil7XG4gICAgLnNtKHdpZHRoLCBAYXRvbSAqIEBuIC0gQG9mZnNldF9zbSk7XG59XG5cbi5zaXplLXhzKEBuKXtcbiAgICAueHMod2lkdGgsIEBhdG9tICogQG4gLSBAb2Zmc2V0X3hzKTtcbn1cblxuLnNpemUteHhzKEBuKXtcbiAgICAueHhzKHdpZHRoLCBAYXRvbSAqIEBuIC0gQG9mZnNldF94eHMpO1xufVxuXG4uc2hpZnQoQG4pe1xuICAgIG1hcmdpbi1sZWZ0OiBAYXRvbSAqIEBuICsgQG9mZnNldF9vbmVfc2lkZTtcbiAgICBtYXJnaW4tcmlnaHQ6IEBhdG9tICogQG4gKyBAb2Zmc2V0X29uZV9zaWRlO1xufVxuXG4uc2hpZnQtbGVmdChAbil7XG4gICAgbWFyZ2luLWxlZnQ6IEBhdG9tICogQG4gKyBAb2Zmc2V0X29uZV9zaWRlO1xufVxuXG4uc2hpZnQtcmlnaHQoQG4pe1xuICAgIG1hcmdpbi1yaWdodDogQGF0b20gKiBAbiArIEBvZmZzZXRfb25lX3NpZGU7XG59XG5cbi5zaGlmdC1wYWRkaW5nKEBuKXtcbiAgICBwYWRkaW5nLWxlZnQ6IEBhdG9tICogQG4gKyBAb2Zmc2V0X29uZV9zaWRlO1xuICAgIHBhZGRpbmctcmlnaHQ6IEBhdG9tICogQG4gKyBAb2Zmc2V0X29uZV9zaWRlO1xufVxuXG4uc2hpZnQtcGFkZGluZy1sZWZ0KEBuKXtcbiAgICBwYWRkaW5nLWxlZnQ6IEBhdG9tICogQG4gKyBAb2Zmc2V0X29uZV9zaWRlO1xufVxuXG4uc2hpZnQtcGFkZGluZy1yaWdodChAbil7XG4gICAgcGFkZGluZy1yaWdodDogQGF0b20gKiBAbiArIEBvZmZzZXRfb25lX3NpZGU7XG59XG5cbi5zaGlmdC1tZChAbil7XG4gICAgLm1kKG1hcmdpbi1sZWZ0LCBAYXRvbSAqIEBuICsgQG9mZnNldF9tZF9vbmVfc2lkZSk7XG4gICAgLm1kKG1hcmdpbi1yaWdodCwgQGF0b20gKiBAbiArIEBvZmZzZXRfbWRfb25lX3NpZGUpO1xufVxuXG4uc2hpZnQtbWQtbGVmdChAbil7XG4gICAgLm1kKG1hcmdpbi1sZWZ0LCBAYXRvbSAqIEBuICsgQG9mZnNldF9tZF9vbmVfc2lkZSk7XG59XG5cbi5zaGlmdC1tZC1yaWdodChAbil7XG4gICAgLm1kKG1hcmdpbi1yaWdodCwgQGF0b20gKiBAbiArIEBvZmZzZXRfbWRfb25lX3NpZGUpO1xufVxuXG4uc2hpZnQtbWQtcGFkZGluZyhAbil7XG4gICAgLm1kKHBhZGRpbmctbGVmdCwgQGF0b20gKiBAbiArIEBvZmZzZXRfbWRfb25lX3NpZGUpO1xuICAgIC5tZChwYWRkaW5nLXJpZ2h0LCBAYXRvbSAqIEBuICsgQG9mZnNldF9tZF9vbmVfc2lkZSk7XG59XG5cbi5zaGlmdC1tZC1wYWRkaW5nLWxlZnQoQG4pe1xuICAgIC5tZChwYWRkaW5nLWxlZnQsIEBhdG9tICogQG4gKyBAb2Zmc2V0X21kX29uZV9zaWRlKTtcbn1cblxuLnNoaWZ0LW1kLXBhZGRpbmctcmlnaHQoQG4pe1xuICAgIC5tZChwYWRkaW5nLXJpZ2h0LCBAYXRvbSAqIEBuICsgQG9mZnNldF9tZF9vbmVfc2lkZSk7XG59XG5cbi5zaGlmdC1zbShAbil7XG4gICAgLnNtKG1hcmdpbi1sZWZ0LCBAYXRvbSAqIEBuICsgQG9mZnNldF9zbV9vbmVfc2lkZSk7XG4gICAgLnNtKG1hcmdpbi1yaWdodCwgQGF0b20gKiBAbiArIEBvZmZzZXRfc21fb25lX3NpZGUpO1xufVxuXG4uc2hpZnQtc20tbGVmdChAbil7XG4gICAgLnNtKG1hcmdpbi1sZWZ0LCBAYXRvbSAqIEBuICsgQG9mZnNldF9zbV9vbmVfc2lkZSk7XG59XG5cbi5zaGlmdC1zbS1yaWdodChAbil7XG4gICAgLnNtKG1hcmdpbi1yaWdodCwgQGF0b20gKiBAbiArIEBvZmZzZXRfc21fb25lX3NpZGUpO1xufVxuXG4uc2hpZnQtc20tcGFkZGluZyhAbil7XG4gICAgLnNtKHBhZGRpbmctbGVmdCwgQGF0b20gKiBAbiArIEBvZmZzZXRfc21fb25lX3NpZGUpO1xuICAgIC5zbShwYWRkaW5nLXJpZ2h0LCBAYXRvbSAqIEBuICsgQG9mZnNldF9zbV9vbmVfc2lkZSk7XG59XG5cbi5zaGlmdC1zbS1wYWRkaW5nLWxlZnQoQG4pe1xuICAgIC5zbShwYWRkaW5nLWxlZnQsIEBhdG9tICogQG4gKyBAb2Zmc2V0X3NtX29uZV9zaWRlKTtcbn1cblxuLnNoaWZ0LXNtLXBhZGRpbmctcmlnaHQoQG4pe1xuICAgIC5zbShwYWRkaW5nLXJpZ2h0LCBAYXRvbSAqIEBuICsgQG9mZnNldF9zbV9vbmVfc2lkZSk7XG59XG5cbi5zaGlmdC14cyhAbil7XG4gICAgLnhzKG1hcmdpbi1sZWZ0LCBAYXRvbSAqIEBuICsgQG9mZnNldF94c19vbmVfc2lkZSk7XG4gICAgLnhzKG1hcmdpbi1yaWdodCwgQGF0b20gKiBAbiArIEBvZmZzZXRfeHNfb25lX3NpZGUpO1xufVxuXG4uc2hpZnQteHMtbGVmdChAbil7XG4gICAgLnhzKG1hcmdpbi1sZWZ0LCBAYXRvbSAqIEBuICsgQG9mZnNldF94c19vbmVfc2lkZSk7XG59XG5cbi5zaGlmdC14cy1yaWdodChAbil7XG4gICAgLnhzKG1hcmdpbi1yaWdodCwgQGF0b20gKiBAbiArIEBvZmZzZXRfeHNfb25lX3NpZGUpO1xufVxuXG4uc2hpZnQteHMtcGFkZGluZyhAbil7XG4gICAgLnhzKHBhZGRpbmctbGVmdCwgQGF0b20gKiBAbiArIEBvZmZzZXRfeHNfb25lX3NpZGUpO1xuICAgIC54cyhwYWRkaW5nLXJpZ2h0LCBAYXRvbSAqIEBuICsgQG9mZnNldF94c19vbmVfc2lkZSk7XG59XG5cbi5zaGlmdC14cy1wYWRkaW5nLWxlZnQoQG4pe1xuICAgIC54cyhwYWRkaW5nLWxlZnQsIEBhdG9tICogQG4gKyBAb2Zmc2V0X3hzX29uZV9zaWRlKTtcbn1cblxuLnNoaWZ0LXhzLXBhZGRpbmctcmlnaHQoQG4pe1xuICAgIC54cyhwYWRkaW5nLXJpZ2h0LCBAYXRvbSAqIEBuICsgQG9mZnNldF94c19vbmVfc2lkZSk7XG59XG5cbi5zaGlmdC14eHMoQG4pe1xuICAgIC54eHMobWFyZ2luLWxlZnQsIEBhdG9tICogQG4gKyBAb2Zmc2V0X3h4c19vbmVfc2lkZSk7XG4gICAgLnh4cyhtYXJnaW4tcmlnaHQsIEBhdG9tICogQG4gKyBAb2Zmc2V0X3h4c19vbmVfc2lkZSk7XG59XG5cbi5zaGlmdC14eHMtbGVmdChAbil7XG4gICAgLnh4cyhtYXJnaW4tbGVmdCwgQGF0b20gKiBAbiArIEBvZmZzZXRfeHhzX29uZV9zaWRlKTtcbn1cblxuLnNoaWZ0LXh4cy1yaWdodChAbil7XG4gICAgLnh4cyhtYXJnaW4tcmlnaHQsIEBhdG9tICogQG4gKyBAb2Zmc2V0X3h4c19vbmVfc2lkZSk7XG59XG5cbi5zaGlmdC14eHMtcGFkZGluZyhAbil7XG4gICAgLnh4cyhwYWRkaW5nLWxlZnQsIEBhdG9tICogQG4gKyBAb2Zmc2V0X3h4c19vbmVfc2lkZSk7XG4gICAgLnh4cyhwYWRkaW5nLXJpZ2h0LCBAYXRvbSAqIEBuICsgQG9mZnNldF94eHNfb25lX3NpZGUpO1xufVxuXG4uc2hpZnQteHhzLXBhZGRpbmctbGVmdChAbil7XG4gICAgLnh4cyhwYWRkaW5nLWxlZnQsIEBhdG9tICogQG4gKyBAb2Zmc2V0X3h4c19vbmVfc2lkZSk7XG59XG5cbi5zaGlmdC14eHMtcGFkZGluZy1yaWdodChAbil7XG4gICAgLnh4cyhwYWRkaW5nLXJpZ2h0LCBAYXRvbSAqIEBuICsgQG9mZnNldF94eHNfb25lX3NpZGUpO1xufVxuXG4ubWQoQG5hbWUsIEB2YWx1ZSl7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX21kKXtcbiAgICAgICAgQHtuYW1lfTogQHZhbHVlO1xuICAgIH1cbn1cblxuLm1kLWJsb2NrKEBjb250ZW50KXtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xuICAgICAgICBAY29udGVudCgpO1xuICAgIH1cbn1cblxuLnNtKEBuYW1lLCBAdmFsdWUpe1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XG4gICAgICAgIEB7bmFtZX06IEB2YWx1ZTtcbiAgICB9XG59XG5cbi5zbS1ibG9jayhAY29udGVudCl7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3NtKXtcbiAgICAgICAgQGNvbnRlbnQoKTtcbiAgICB9XG59XG5cbi54cyhAbmFtZSwgQHZhbHVlKXtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfeHMpe1xuICAgICAgICBAe25hbWV9OiBAdmFsdWU7XG4gICAgfVxufVxuXG4ueHMtYmxvY2soQGNvbnRlbnQpe1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha194cyl7XG4gICAgICAgIEBjb250ZW50KCk7XG4gICAgfVxufVxuXG4ueHhzKEBuYW1lLCBAdmFsdWUpe1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha194eHMpe1xuICAgICAgICBAe25hbWV9OiBAdmFsdWU7XG4gICAgfVxufVxuXG4ueHhzLWJsb2NrKEBjb250ZW50KXtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfeHhzKXtcbiAgICAgICAgQGNvbnRlbnQoKTtcbiAgICB9XG59XG5cbi5mcm9tKEBtaW5fd2lkdGgsIEBjb250ZW50KXtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiBAbWluX3dpZHRoKXtcbiAgICAgICAgQGNvbnRlbnQoKTtcbiAgICB9XG59XG5cbi50byhAbWF4X3dpZHRoLCBAY29udGVudCl7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQG1heF93aWR0aCl7XG4gICAgICAgIEBjb250ZW50KCk7XG4gICAgfVxufVxuXG4uZnJvbS10byhAbWluX3dpZHRoLCBAbWF4X3dpZHRoLCBAY29udGVudCl7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogQG1pbl93aWR0aCkgYW5kIChtYXgtd2lkdGg6IEBtYXhfd2lkdGgpe1xuICAgICAgICBAY29udGVudCgpO1xuICAgIH1cbn1cblxuLnJlc2V0KCl7XG4gICAgYm9keSxkaXYsZGwsZHQsZGQsdWwsbGksaDEsaDIsaDMsaDQsaDUsaDYscHJlLGNvZGUsZm9ybSxmaWVsZHNldCxpbnB1dCx0ZXh0YXJlYSxwLGJsb2NrcXVvdGUsdGgsdGR7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICB9XG4gICAgdGFibGV7XG4gICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gICAgICAgIGJvcmRlci1zcGFjaW5nOiAwO1xuICAgIH1cbiAgICBmaWVsZHNldCxpbWcsYWJicntcbiAgICAgICAgYm9yZGVyOiAwO1xuICAgIH1cbiAgICBhZGRyZXNzLGNhcHRpb24sY2l0ZSxjb2RlLGRmbixlbSxzdHJvbmcsdGgsdmFye1xuICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgfVxuICAgIHVsIGxpe1xuICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIH1cbiAgICBjYXB0aW9uLHRoe1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIH1cbiAgICBoMSxoMixoMyxoNCxoNSxoNntcbiAgICAgICAgZm9udC1zaXplOiAxMDAlO1xuICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIH1cbiAgICBzdXB7XG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiB0ZXh0LXRvcDtcbiAgICB9XG4gICAgc3Vie1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogdGV4dC1ib3R0b207XG4gICAgfVxuICAgIGlucHV0LHRleHRhcmVhLHNlbGVjdHtcbiAgICAgICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG4gICAgfVxuICAgIGxlZ2VuZHtcbiAgICAgICAgY29sb3I6ICMwMDA7XG4gICAgfVxuICAgIGFydGljbGUsYXNpZGUsZGV0YWlscyxmaWdjYXB0aW9uLGZpZ3VyZSxmb290ZXIsaGVhZGVyLGhncm91cCxtZW51LG5hdixzZWN0aW9uLG1haW57XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cbiAgICBpbWd7XG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgIH1cbn1cblxuLmRlYnVnKEBiYWNrZ3JvdW5kLCBAb3V0bGluZSl7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgXG4gICAgPiBkaXZ7XG4gICAgICAgIGhlaWdodDogaW5oZXJpdDtcbiAgICAgICAgLndyYXBwZXIoKTtcbiAgICAgICAgXG4gICAgICAgID4gZGl2e1xuICAgICAgICAgICAgaGVpZ2h0OiBpbmhlcml0O1xuICAgICAgICAgICAgLnJvdy1mbGV4KCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgID4gZGl2e1xuICAgICAgICAgICAgICAgIC5jb2woKTtcbiAgICAgICAgICAgICAgICAuc2l6ZSgxKTtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IGluaGVyaXQ7XG4gICAgICAgICAgICAgICAgb3V0bGluZTogQG91dGxpbmU7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogQGJhY2tncm91bmQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5jbGVhcmZpeCgpe1xuICAgICY6OmFmdGVye1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgY2xlYXI6IGJvdGg7XG4gICAgfVxufSIsIkBjb2x1bW5zOiAxMjtcbkBhdG9tOiAoMTAwJSAvIEBjb2x1bW5zKTtcblxuQGJyZWFrX2xnOiAxMzAwcHg7XG5AYnJlYWtfbWQ6IDk5MnB4O1xuQGJyZWFrX3NtOiA3NjhweDtcbkBicmVha194czogNTc2cHg7XG5AYnJlYWtfeHhzOiAzODBweDtcblxuQG9mZnNldDogMzBweDtcbkBvZmZzZXRfbGc6IEBvZmZzZXQ7XG5Ab2Zmc2V0X21kOiBAb2Zmc2V0O1xuQG9mZnNldF9zbTogQG9mZnNldDtcbkBvZmZzZXRfeHM6IEBvZmZzZXQ7XG5Ab2Zmc2V0X3h4czogQG9mZnNldDtcblxuQG9mZnNldF9vbmVfc2lkZTogKEBvZmZzZXQgLyAyKTtcbkBvZmZzZXRfbGdfb25lX3NpZGU6IChAb2Zmc2V0X2xnIC8gMik7XG5Ab2Zmc2V0X21kX29uZV9zaWRlOiAoQG9mZnNldF9tZCAvIDIpO1xuQG9mZnNldF9zbV9vbmVfc2lkZTogKEBvZmZzZXRfc20gLyAyKTtcbkBvZmZzZXRfeHNfb25lX3NpZGU6IChAb2Zmc2V0X3hzIC8gMik7XG5Ab2Zmc2V0X3h4c19vbmVfc2lkZTogKEBvZmZzZXRfeHhzIC8gMik7XG5cbkBmaWVsZHM6IDMwcHg7XG5AZmllbGRzX2xnOiAxNXB4O1xuQGZpZWxkc19tZDogMTVweDtcblxuLndyYXBwZXItZnVsbCgpe1xuICAgIHBhZGRpbmctbGVmdDogQGZpZWxkcztcbiAgICBwYWRkaW5nLXJpZ2h0OiBAZmllbGRzO1xuXG4gICAgLmxnLWJsb2NrKHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiBAZmllbGRzX2xnO1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiBAZmllbGRzX2xnO1xuICAgIH0pO1xuXG4gICAgLm1kLWJsb2NrKHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiBAZmllbGRzX21kO1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiBAZmllbGRzX21kO1xuICAgIH0pO1xufVxuXG4ucm93LW9mZnNldHMoKXtcbiAgICBtYXJnaW4tbGVmdDogKEBvZmZzZXRfb25lX3NpZGUgKiAtMSk7XG4gICAgbWFyZ2luLXJpZ2h0OiAoQG9mZnNldF9vbmVfc2lkZSAqIC0xKTtcbn1cblxuLmNvbC1vZmZzZXRzKEB0eXBlKXtcbiAgICBAe3R5cGV9LWxlZnQ6IEBvZmZzZXRfb25lX3NpZGU7XG4gICAgQHt0eXBlfS1yaWdodDogQG9mZnNldF9vbmVfc2lkZTtcbn1cblxuLndyYXBwZXIoKXtcbiAgICBtYXgtd2lkdGg6IDExOTBweDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICAud3JhcHBlci1mdWxsKCk7XG59XG5cbi5yb3ctZmxleCgpe1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIC5yb3ctb2Zmc2V0cygpO1xufVxuXG4ucm93LWZsb2F0KCl7XG4gICAgLnJvdy1vZmZzZXRzKCk7XG4gICAgLmNsZWFyZml4KCk7XG59XG5cbi5yb3ctaWIoKXtcbiAgICAucm93LW9mZnNldHMoKTtcbn1cblxuLmNvbCgpe1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICAgIC5jb2wtb2Zmc2V0cyhtYXJnaW4pO1xufVxuXG4uY29sLWZsb2F0KCl7XG4gICAgZmxvYXQ6IGxlZnQ7XG59XG5cbi5jb2wtaWIoKXtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cblxuLmNvbC1wYWRkaW5nKCl7XG4gICAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICAgIC5jb2wtb2Zmc2V0cyhwYWRkaW5nKTtcbn1cblxuLmJlYW0oQG4pe1xuICAgIEB2YWw6IDEwMCUgLyBAY29sdW1ucyAqIEBuO1xuICAgIHdpZHRoOiB+XCJjYWxjKEB7dmFsfSAtIEB7b2Zmc2V0fSlcIjtcbn1cblxuLmJlYW0tbGcoQG4pe1xuICAgIEB2YWw6IDEwMCUgLyBAY29sdW1ucyAqIEBuO1xuICAgIC5sZyh3aWR0aCwgflwiY2FsYyhAe3ZhbH0gLSBAe29mZnNldF9sZ30pXCIpO1xufVxuXG4uYmVhbS1tZChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLm1kKHdpZHRoLCB+XCJjYWxjKEB7dmFsfSAtIEB7b2Zmc2V0X21kfSlcIik7XG59XG5cbi5iZWFtLXNtKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAuc20od2lkdGgsIH5cImNhbGMoQHt2YWx9IC0gQHtvZmZzZXRfc219KVwiKTtcbn1cblxuLmJlYW0teHMoQG4pe1xuICAgIEB2YWw6IDEwMCUgLyBAY29sdW1ucyAqIEBuO1xuICAgIC54cyh3aWR0aCwgflwiY2FsYyhAe3ZhbH0gLSBAe29mZnNldF94c30pXCIpO1xufVxuXG4uYmVhbS14eHMoQG4pe1xuICAgIEB2YWw6IDEwMCUgLyBAY29sdW1ucyAqIEBuO1xuICAgIC54eHMod2lkdGgsIH5cImNhbGMoQHt2YWx9IC0gQHtvZmZzZXRfeHhzfSlcIik7XG59XG5cbi5zaGlmdChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgbWFyZ2luLWxlZnQ6IH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfb25lX3NpZGV9KVwiO1xuICAgIG1hcmdpbi1yaWdodDogflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF9vbmVfc2lkZX0pXCI7XG59XG5cbi5zaGlmdC1sZWZ0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICBtYXJnaW4tbGVmdDogflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF9vbmVfc2lkZX0pXCI7XG59XG5cbi5zaGlmdC1yaWdodChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgbWFyZ2luLXJpZ2h0OiB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcbn1cblxuLnNoaWZ0LXBhZGRpbmcoQG4pe1xuICAgIEB2YWw6IDEwMCUgLyBAY29sdW1ucyAqIEBuO1xuICAgIHBhZGRpbmctbGVmdDogflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF9vbmVfc2lkZX0pXCI7XG4gICAgcGFkZGluZy1yaWdodDogflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF9vbmVfc2lkZX0pXCI7XG59XG5cbi5zaGlmdC1wYWRkaW5nLWxlZnQoQG4pe1xuICAgIEB2YWw6IDEwMCUgLyBAY29sdW1ucyAqIEBuO1xuICAgIHBhZGRpbmctbGVmdDogflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF9vbmVfc2lkZX0pXCI7XG59XG5cbi5zaGlmdC1wYWRkaW5nLXJpZ2h0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICBwYWRkaW5nLXJpZ2h0OiB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcbn1cblxuLnNoaWZ0LWxnKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubGcobWFyZ2luLWxlZnQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfbGdfb25lX3NpZGV9KVwiKTtcbiAgICAubGcobWFyZ2luLXJpZ2h0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X2xnX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC1sZy1sZWZ0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubGcobWFyZ2luLWxlZnQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfbGdfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LWxnLXJpZ2h0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubGcobWFyZ2luLXJpZ2h0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X2xnX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC1sZy1wYWRkaW5nKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubGcocGFkZGluZy1sZWZ0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X2xnX29uZV9zaWRlfSlcIik7XG4gICAgLmxnKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfbGdfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LWxnLXBhZGRpbmctbGVmdChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLmxnKHBhZGRpbmctbGVmdCwgflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF9sZ19vbmVfc2lkZX0pXCIpO1xufVxuXG4uc2hpZnQtbGctcGFkZGluZy1yaWdodChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLmxnKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfbGdfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LW1kKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubWQobWFyZ2luLWxlZnQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfbWRfb25lX3NpZGV9KVwiKTtcbiAgICAubWQobWFyZ2luLXJpZ2h0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X21kX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC1tZC1sZWZ0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubWQobWFyZ2luLWxlZnQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfbWRfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LW1kLXJpZ2h0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubWQobWFyZ2luLXJpZ2h0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X21kX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC1tZC1wYWRkaW5nKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubWQocGFkZGluZy1sZWZ0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X21kX29uZV9zaWRlfSlcIik7XG4gICAgLm1kKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfbWRfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LW1kLXBhZGRpbmctbGVmdChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLm1kKHBhZGRpbmctbGVmdCwgflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF9tZF9vbmVfc2lkZX0pXCIpO1xufVxuXG4uc2hpZnQtbWQtcGFkZGluZy1yaWdodChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLm1kKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfbWRfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LXNtKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAuc20obWFyZ2luLWxlZnQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfc21fb25lX3NpZGV9KVwiKTtcbiAgICAuc20obWFyZ2luLXJpZ2h0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X3NtX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC1zbS1sZWZ0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAuc20obWFyZ2luLWxlZnQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfc21fb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LXNtLXJpZ2h0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAuc20obWFyZ2luLXJpZ2h0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X3NtX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC1zbS1wYWRkaW5nKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAuc20ocGFkZGluZy1sZWZ0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X3NtX29uZV9zaWRlfSlcIik7XG4gICAgLnNtKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfc21fb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LXNtLXBhZGRpbmctbGVmdChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLnNtKHBhZGRpbmctbGVmdCwgflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF9zbV9vbmVfc2lkZX0pXCIpO1xufVxuXG4uc2hpZnQtc20tcGFkZGluZy1yaWdodChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLnNtKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfc21fb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LXhzKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAueHMobWFyZ2luLWxlZnQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfeHNfb25lX3NpZGV9KVwiKTtcbiAgICAueHMobWFyZ2luLXJpZ2h0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X3hzX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC14cy1sZWZ0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAueHMobWFyZ2luLWxlZnQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfeHNfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LXhzLXJpZ2h0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAueHMobWFyZ2luLXJpZ2h0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X3hzX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC14cy1wYWRkaW5nKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAueHMocGFkZGluZy1sZWZ0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X3hzX29uZV9zaWRlfSlcIik7XG4gICAgLnhzKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfeHNfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LXhzLXBhZGRpbmctbGVmdChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLnhzKHBhZGRpbmctbGVmdCwgflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF94c19vbmVfc2lkZX0pXCIpO1xufVxuXG4uc2hpZnQteHMtcGFkZGluZy1yaWdodChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLnhzKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfeHNfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LXh4cyhAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLnh4cyhtYXJnaW4tbGVmdCwgflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF94eHNfb25lX3NpZGV9KVwiKTtcbiAgICAueHhzKG1hcmdpbi1yaWdodCwgflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF94eHNfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LXh4cy1sZWZ0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAueHhzKG1hcmdpbi1sZWZ0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X3h4c19vbmVfc2lkZX0pXCIpO1xufVxuXG4uc2hpZnQteHhzLXJpZ2h0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAueHhzKG1hcmdpbi1yaWdodCwgflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF94eHNfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LXh4cy1wYWRkaW5nKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAueHhzKHBhZGRpbmctbGVmdCwgflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF94eHNfb25lX3NpZGV9KVwiKTtcbiAgICAueHhzKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfeHhzX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC14eHMtcGFkZGluZy1sZWZ0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAueHhzKHBhZGRpbmctbGVmdCwgflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF94eHNfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LXh4cy1wYWRkaW5nLXJpZ2h0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAueHhzKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfeHhzX29uZV9zaWRlfSlcIik7XG59XG5cbi5sZyhAbmFtZSwgQHZhbHVlKXtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbGcpe1xuICAgICAgICBAe25hbWV9OiBAdmFsdWU7XG4gICAgfVxufVxuXG4ubGctYmxvY2soQGNvbnRlbnQpe1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19sZyl7XG4gICAgICAgIEBjb250ZW50KCk7XG4gICAgfVxufVxuXG4ubWQoQG5hbWUsIEB2YWx1ZSl7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX21kKXtcbiAgICAgICAgQHtuYW1lfTogQHZhbHVlO1xuICAgIH1cbn1cblxuLm1kLWJsb2NrKEBjb250ZW50KXtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xuICAgICAgICBAY29udGVudCgpO1xuICAgIH1cbn1cblxuLnNtKEBuYW1lLCBAdmFsdWUpe1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XG4gICAgICAgIEB7bmFtZX06IEB2YWx1ZTtcbiAgICB9XG59XG5cbi5zbS1ibG9jayhAY29udGVudCl7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3NtKXtcbiAgICAgICAgQGNvbnRlbnQoKTtcbiAgICB9XG59XG5cbi54cyhAbmFtZSwgQHZhbHVlKXtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfeHMpe1xuICAgICAgICBAe25hbWV9OiBAdmFsdWU7XG4gICAgfVxufVxuXG4ueHMtYmxvY2soQGNvbnRlbnQpe1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha194cyl7XG4gICAgICAgIEBjb250ZW50KCk7XG4gICAgfVxufVxuXG4ueHhzKEBuYW1lLCBAdmFsdWUpe1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha194eHMpe1xuICAgICAgICBAe25hbWV9OiBAdmFsdWU7XG4gICAgfVxufVxuXG4ueHhzLWJsb2NrKEBjb250ZW50KXtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfeHhzKXtcbiAgICAgICAgQGNvbnRlbnQoKTtcbiAgICB9XG59XG5cbi5mcm9tKEBtaW5fd2lkdGgsIEBjb250ZW50KXtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiBAbWluX3dpZHRoKXtcbiAgICAgICAgQGNvbnRlbnQoKTtcbiAgICB9XG59XG5cbi50byhAbWF4X3dpZHRoLCBAY29udGVudCl7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQG1heF93aWR0aCl7XG4gICAgICAgIEBjb250ZW50KCk7XG4gICAgfVxufVxuXG4uZnJvbS10byhAbWluX3dpZHRoLCBAbWF4X3dpZHRoLCBAY29udGVudCl7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogQG1pbl93aWR0aCkgYW5kIChtYXgtd2lkdGg6IEBtYXhfd2lkdGgpe1xuICAgICAgICBAY29udGVudCgpO1xuICAgIH1cbn1cblxuLnUtcm93LWZsZXgoQG9mZnNldCl7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgbWFyZ2luLWxlZnQ6IChAb2Zmc2V0IC8gLTIpO1xuICAgIG1hcmdpbi1yaWdodDogKEBvZmZzZXQgLyAtMik7XG59XG5cbi51LWNvbChAb2Zmc2V0KXtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgICBtYXJnaW4tbGVmdDogKEBvZmZzZXQgLyAyKTtcbiAgICBtYXJnaW4tcmlnaHQ6IChAb2Zmc2V0IC8gMik7XG59XG5cbi51LXNpemUoQG4sIEBjb2x1bW5zLCBAb2Zmc2V0KXtcbiAgICB3aWR0aDogflwiY2FsYygxMDAlIC8gQHtjb2x1bW5zfSAqIEB7bn0gLSBAe29mZnNldH0pXCI7XG59XG5cbi5yZXNldCgpe1xuICAgIGJvZHksZGl2LGRsLGR0LGRkLHVsLGxpLGgxLGgyLGgzLGg0LGg1LGg2LHByZSxjb2RlLGZvcm0sZmllbGRzZXQsaW5wdXQsdGV4dGFyZWEscCxibG9ja3F1b3RlLHRoLHRke1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgfVxuICAgIHRhYmxle1xuICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAgICAgICBib3JkZXItc3BhY2luZzogMDtcbiAgICB9XG4gICAgZmllbGRzZXQsaW1nLGFiYnJ7XG4gICAgICAgIGJvcmRlcjogMDtcbiAgICB9XG4gICAgYWRkcmVzcyxjYXB0aW9uLGNpdGUsY29kZSxkZm4sZW0sc3Ryb25nLHRoLHZhcntcbiAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIH1cbiAgICB1bCBsaXtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICB9XG4gICAgY2FwdGlvbix0aHtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICB9XG4gICAgaDEsaDIsaDMsaDQsaDUsaDZ7XG4gICAgICAgIGZvbnQtc2l6ZTogMTAwJTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICB9XG4gICAgc3Vwe1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogdGV4dC10b3A7XG4gICAgfVxuICAgIHN1YntcbiAgICAgICAgdmVydGljYWwtYWxpZ246IHRleHQtYm90dG9tO1xuICAgIH1cbiAgICBpbnB1dCx0ZXh0YXJlYSxzZWxlY3R7XG4gICAgICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgICAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xuICAgIH1cbiAgICBsZWdlbmR7XG4gICAgICAgIGNvbG9yOiAjMDAwO1xuICAgIH1cbiAgICBhcnRpY2xlLGFzaWRlLGRldGFpbHMsZmlnY2FwdGlvbixmaWd1cmUsZm9vdGVyLGhlYWRlcixoZ3JvdXAsbWVudSxuYXYsc2VjdGlvbixtYWlue1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG4gICAgaW1ne1xuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogYXV0bztcbiAgICB9XG59XG5cbi5kZWJ1ZyhAYmFja2dyb3VuZCwgQG91dGxpbmUpe1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIFxuICAgID4gZGl2e1xuICAgICAgICBoZWlnaHQ6IGluaGVyaXQ7XG4gICAgICAgIC53cmFwcGVyKCk7XG4gICAgICAgIFxuICAgICAgICA+IGRpdntcbiAgICAgICAgICAgIGhlaWdodDogaW5oZXJpdDtcbiAgICAgICAgICAgIC5yb3ctZmxleCgpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICA+IGRpdntcbiAgICAgICAgICAgICAgICAuY29sKCk7XG4gICAgICAgICAgICAgICAgLmJlYW0oMSk7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiBpbmhlcml0O1xuICAgICAgICAgICAgICAgIG91dGxpbmU6IEBvdXRsaW5lO1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IEBiYWNrZ3JvdW5kO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4uY2xlYXJmaXgoKXtcbiAgICAmOjphZnRlcntcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGNsZWFyOiBib3RoO1xuICAgIH1cbn0iLCJAaW1wb3J0IFwiLi4vLi4vX3ZhcmlhYmxlcy5sZXNzXCI7XHJcbkBpbXBvcnQgXCIuLi8uLi8uLi8uLi9ib3dlcl9jb21wb25lbnRzL2xlc3NoYXQvbGVzc2hhdC5sZXNzXCI7XHJcbkBpbXBvcnQgXCIuLi8uLi8uLi8uLi9ib3dlcl9jb21wb25lbnRzL0xFU1MgZWxlbWVudHMgbWl4aW5zL2xlc3NlbGVtZW50c1wiO1xyXG5cclxuLmh0bWwtZnooQHNpemVWYWx1ZSkge1xyXG4gICAgQHJlbVZhbHVlOiAoQHNpemVWYWx1ZS9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHNpemVWYWx1ZTtcclxuICAgIGZvbnQtc2l6ZTogflwiQHtweFZhbHVlfXB4XCI7XHJcbn1cclxuXHJcblxyXG4ucmVtLXNpemUoQHNpemVWYWx1ZSkge1xyXG4gICAgQHJlbVZhbHVlOiAoQHNpemVWYWx1ZS9AZm9udEJhc2VQeCk7XHJcbiAgICBmb250LXNpemU6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxuXHJcbi8vcmVtIGNhbGN1bGF0b3JcclxuLnJlbS1zaXplLW1iKEBzaXplVmFsdWUpIHtcclxuICAgIEByZW1WYWx1ZTogKEBzaXplVmFsdWUvQGZvbnRCYXNlUHgpO1xyXG4gICAgZm9udC1zaXplOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgQG1hcmdpbkJvdHRvbTooQGZvbnRCYXNlUHgqMC42OSk7XHJcbiAgICBtYXJnaW4tYm90dG9tOn5cIkB7bWFyZ2luQm90dG9tfXB4XCI7XHJcbiAgICBtYXJnaW4tYm90dG9tOjAuNjlyZW07XHJcbn1cclxuXHJcbi5yZW0oQHB4KXtcclxuICAgIGZvbnQtc2l6ZTogQHB4L0Bmb250QmFzZVB4ICsgMHJlbTtcclxufVxyXG5cclxuIC5oMS1yZW0gKEBzaXplVmFsdWUpIHtcclxuICAgIEByZW1WYWx1ZTogKEBzaXplVmFsdWUvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBzaXplVmFsdWU7XHJcbiAgICBmb250LXNpemU6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgZm9udC1zaXplOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEzMCU7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBAbWFyZ2luQm90dG9tOihAZm9udEJhc2VQeCowLjY5KTtcclxuICAgIG1hcmdpbi1ib3R0b206flwiQHttYXJnaW5Cb3R0b219cHhcIjtcclxuICAgIG1hcmdpbi1ib3R0b206MC42OXJlbTtcclxufVxyXG5cclxuLmgxLXJlbS10dHUgKEBzaXplVmFsdWUpIHtcclxuICAgIEByZW1WYWx1ZTogKEBzaXplVmFsdWUvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBzaXplVmFsdWU7XHJcbiAgICBmb250LXNpemU6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgZm9udC1zaXplOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEzMCU7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBAbWFyZ2luQm90dG9tOihAZm9udEJhc2VQeCowLjY5KTtcclxuICAgIG1hcmdpbi1ib3R0b206flwiQHttYXJnaW5Cb3R0b219cHhcIjtcclxuICAgIG1hcmdpbi1ib3R0b206MC42OXJlbTtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbn1cclxuXHJcbi5oMi1yZW0gKEBzaXplVmFsdWUpIHtcclxuICAgIEByZW1WYWx1ZTogKEBzaXplVmFsdWUvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBzaXplVmFsdWU7XHJcbiAgICBmb250LXNpemU6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgZm9udC1zaXplOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEzMCU7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBAbWFyZ2luQm90dG9tOihAZm9udEJhc2VQeCowLjY5KTtcclxuICAgIG1hcmdpbi1ib3R0b206flwiQHttYXJnaW5Cb3R0b219cHhcIjtcclxuICAgIG1hcmdpbi1ib3R0b206MC42OXJlbTtcclxufVxyXG5cclxuLmgyLXJlbS10dHUgKEBzaXplVmFsdWUpIHtcclxuICAgIEByZW1WYWx1ZTogKEBzaXplVmFsdWUvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBzaXplVmFsdWU7XHJcbiAgICBmb250LXNpemU6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgZm9udC1zaXplOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEzMCU7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBAbWFyZ2luQm90dG9tOihAZm9udEJhc2VQeCowLjY5KTtcclxuICAgIG1hcmdpbi1ib3R0b206flwiQHttYXJnaW5Cb3R0b219cHhcIjtcclxuICAgIG1hcmdpbi1ib3R0b206MC42OXJlbTtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbn1cclxuXHJcbi5oMy1yZW0gKEBzaXplVmFsdWUpIHtcclxuICAgIEByZW1WYWx1ZTogKEBzaXplVmFsdWUvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBzaXplVmFsdWU7XHJcbiAgICBmb250LXNpemU6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgZm9udC1zaXplOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgZm9udC1zaXplOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEzMCU7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBAbWFyZ2luQm90dG9tOihAZm9udEJhc2VQeCowLjY5KTtcclxuICAgIG1hcmdpbi1ib3R0b206flwiQHttYXJnaW5Cb3R0b219cHhcIjtcclxuICAgIG1hcmdpbi1ib3R0b206MC42OXJlbTtcclxufVxyXG5cclxuLmgzLXJlbS10dHUgKEBzaXplVmFsdWUpIHtcclxuICAgIEByZW1WYWx1ZTogKEBzaXplVmFsdWUvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBzaXplVmFsdWU7XHJcbiAgICBmb250LXNpemU6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgZm9udC1zaXplOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEzMCU7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBAbWFyZ2luQm90dG9tOihAZm9udEJhc2VQeCowLjY5KTtcclxuICAgIG1hcmdpbi1ib3R0b206flwiQHttYXJnaW5Cb3R0b219cHhcIjtcclxuICAgIG1hcmdpbi1ib3R0b206MC42OXJlbTtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbn1cclxuXHJcblxyXG4uaDQtcmVtIChAc2l6ZVZhbHVlKSB7XHJcbiAgICBAcmVtVmFsdWU6IChAc2l6ZVZhbHVlL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAc2l6ZVZhbHVlO1xyXG4gICAgZm9udC1zaXplOiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIGZvbnQtc2l6ZTogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxuICAgIGxpbmUtaGVpZ2h0OiAxMzAlO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgQG1hcmdpbkJvdHRvbTooQGZvbnRCYXNlUHgqMC42OSk7XHJcbiAgICBtYXJnaW4tYm90dG9tOn5cIkB7bWFyZ2luQm90dG9tfXB4XCI7XHJcbiAgICBtYXJnaW4tYm90dG9tOjAuNjlyZW07XHJcbn1cclxuXHJcbi5oNC1yZW0tdHR1IChAc2l6ZVZhbHVlKSB7XHJcbiAgICBAcmVtVmFsdWU6IChAc2l6ZVZhbHVlL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAc2l6ZVZhbHVlO1xyXG4gICAgZm9udC1zaXplOiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIGZvbnQtc2l6ZTogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxuICAgIGxpbmUtaGVpZ2h0OiAxMzAlO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgQG1hcmdpbkJvdHRvbTooQGZvbnRCYXNlUHgqMC42OSk7XHJcbiAgICBtYXJnaW4tYm90dG9tOn5cIkB7bWFyZ2luQm90dG9tfXB4XCI7XHJcbiAgICBtYXJnaW4tYm90dG9tOjAuNjlyZW07XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG59XHJcblxyXG5cclxuLmg1LXJlbSAoQHNpemVWYWx1ZSkge1xyXG4gICAgQHJlbVZhbHVlOiAoQHNpemVWYWx1ZS9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHNpemVWYWx1ZTtcclxuICAgIGZvbnQtc2l6ZTogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBmb250LXNpemU6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgICBsaW5lLWhlaWdodDogMTMwJTtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIEBtYXJnaW5Cb3R0b206KEBmb250QmFzZVB4KjAuNjkpO1xyXG4gICAgbWFyZ2luLWJvdHRvbTp+XCJAe21hcmdpbkJvdHRvbX1weFwiO1xyXG4gICAgbWFyZ2luLWJvdHRvbTowLjY5cmVtO1xyXG59XHJcblxyXG4uaDUtcmVtLXR0dSAoQHNpemVWYWx1ZSkge1xyXG4gICAgQHJlbVZhbHVlOiAoQHNpemVWYWx1ZS9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHNpemVWYWx1ZTtcclxuICAgIGZvbnQtc2l6ZTogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBmb250LXNpemU6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgICBsaW5lLWhlaWdodDogMTMwJTtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIEBtYXJnaW5Cb3R0b206KEBmb250QmFzZVB4KjAuNjkpO1xyXG4gICAgbWFyZ2luLWJvdHRvbTp+XCJAe21hcmdpbkJvdHRvbX1weFwiO1xyXG4gICAgbWFyZ2luLWJvdHRvbTowLjY5cmVtO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxufVxyXG5cclxuXHJcbi5oNi1yZW0gKEBzaXplVmFsdWUpIHtcclxuICAgIEByZW1WYWx1ZTogKEBzaXplVmFsdWUvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBzaXplVmFsdWU7XHJcbiAgICBmb250LXNpemU6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgZm9udC1zaXplOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEzMCU7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBAbWFyZ2luQm90dG9tOihAZm9udEJhc2VQeCowLjY5KTtcclxuICAgIG1hcmdpbi1ib3R0b206flwiQHttYXJnaW5Cb3R0b219cHhcIjtcclxuICAgIG1hcmdpbi1ib3R0b206MC42OXJlbTtcclxufVxyXG5cclxuLmg2LXJlbS10dHUgKEBzaXplVmFsdWUpIHtcclxuICAgIEByZW1WYWx1ZTogKEBzaXplVmFsdWUvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBzaXplVmFsdWU7XHJcbiAgICBmb250LXNpemU6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgZm9udC1zaXplOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEzMCU7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBAbWFyZ2luQm90dG9tOihAZm9udEJhc2VQeCowLjY5KTtcclxuICAgIG1hcmdpbi1ib3R0b206flwiQHttYXJnaW5Cb3R0b219cHhcIjtcclxuICAgIG1hcmdpbi1ib3R0b206MC42OXJlbTtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbn1cclxuXHJcblxyXG5cclxuLmxpbmUtaGVpZ2h0LXJlbShAc3RyaW5nKSB7XHJcbiAgICBAcmVtVmFsdWU6IChAc3RyaW5nL0Bmb250QmFzZVB4KTtcclxuICAgIEB2YWx1ZTogQHN0cmluZztcclxuICAgIGxpbmUtaGVpZ2h0OiB+XCJAe3ZhbHVlfXB4XCI7XHJcbiAgICBsaW5lLWhlaWdodDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG5cclxuLnRleHQtYm9sZCgpIHtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxufVxyXG5cclxuLndpZGUoKSB7fVxyXG5cclxuLndpZGUoQGZvbnQtc2l6ZTogMTQsIEBsczogODApIHtcclxuICAgIEByZW1WYWx1ZTogKChAZm9udC1zaXplKkBscykvQGZvbnRCYXNlUHgpLzEwMDA7XHJcbiAgICBAdmFsdWU6ICAgIChAZm9udC1zaXplKkBscykvMTAwMDtcclxuICAgIGxldHRlci1zcGFjaW5nOiB+XCJAe3ZhbHVlfXB4XCI7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG5cclxuXHJcbi5sZWZ0LWFsaWduKCkge1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdCA7XHJcbn1cclxuXHJcbi5yaWdodC1hbGlnbigpIHtcclxuICAgIHRleHQtYWxpZ246IHJpZ2h0IDtcclxufVxyXG5cclxuLmp1c3RpZnktYWxpZ24oKSB7XHJcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5IDtcclxufVxyXG5cclxuLmNlbnRlci1hbGlnbigpIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlciA7XHJcbn1cclxuXHJcblxyXG4vKiBCYWRnZXMgKi9cclxuLmJhZGdlKEB2YWwuLi4pIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IEBibGFjaztcclxuICAgIGNvbG9yOiBAd2hpdGU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDhweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDhweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxufVxyXG5cclxuLyogVGFncyAqL1xyXG5cclxuLnRhZyhAdmFsLi4uKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBAYmxhY2s7XHJcbiAgICBjb2xvcjogQHdoaXRlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgcGFkZGluZy1sZWZ0OiA4cHg7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiA4cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcblxyXG4udGFnLWJsYWNrKCkge1xyXG4gICAgY29sb3I6IEB3aGl0ZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IEBibGFjaztcclxufVxyXG5cclxuLnRhZy1ibHVlKCkge1xyXG4gICAgY29sb3I6IEB3aGl0ZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IEBibHVlO1xyXG59XHJcblxyXG4udGFnLWdyZWVuKCkge1xyXG4gICAgY29sb3I6IEB3aGl0ZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IEBncmVlbjtcclxufVxyXG5cclxuLnRhZy1vcmFuZ2UoKSB7XHJcbiAgICBjb2xvcjogQHdoaXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogQG9yYW5nZTtcclxufVxyXG5cclxuLnRhZy1yZWQoKSB7XHJcbiAgICBjb2xvcjogQHdoaXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogQHJlZDtcclxufVxyXG5cclxuLnRhZy1wdXJwbGUoKSB7XHJcbiAgICBjb2xvcjogQHdoaXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogQHB1cnBsZTtcclxufVxyXG5cclxuLnRhZy1saW1lKCkge1xyXG4gICAgY29sb3I6IEB3aGl0ZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IEBsaW1lO1xyXG59XHJcblxyXG4udGFnLWRyYWdvbmZydWl0KCkge1xyXG4gICAgY29sb3I6IEB3aGl0ZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IEBkcmFnb25mcnVpdDtcclxufVxyXG5cclxuLnRhZy1jb3NtaWMoKSB7XHJcbiAgICBjb2xvcjogQHdoaXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogQGNvc21pYztcclxufVxyXG5cclxuLmJyZWFkY3J1bWIoKSB7XHJcbiAgZm9udC1zaXplOiAxOHB4O1xyXG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNyk7XHJcblxyXG4gIGl7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICB9XHJcblxyXG4gIFtjbGFzc149XCJtZGktXCJde1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgfVxyXG5cclxuICBbY2xhc3MqPVwibWRpLVwiXXtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICBmbG9hdDogbGVmdDtcclxuICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gIH1cclxuXHJcbmkubWF0ZXJpYWwtaWNvbnMge1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICB9XHJcblxyXG4mOmJlZm9yZSB7XHJcbiAgY29udGVudDogJ1xcRTVDQyc7XHJcbiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC43KTtcclxuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBmb250LWZhbWlseTogJ01hdGVyaWFsIEljb25zJztcclxuICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICBmb250LXNpemU6IDI1cHg7XHJcbiAgbWFyZ2luOiAwIDEwcHggMCA4cHg7XHJcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XHJcbn1cclxuXHJcbiY6Zmlyc3QtY2hpbGQ6YmVmb3JlIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcbiY6bGFzdC1jaGlsZCB7XHJcbiAgY29sb3I6ICNmZmY7XHJcbn1cclxufVxyXG5cclxuLmNvZGUoQG10OjE2LEBtYjoxNikge1xyXG4gICAgQG1hclRvcFJlbTooQG10L0Bmb250QmFzZVB4KTtcclxuICAgIEBtYXJCb3RSZW06KEBtYi9AZm9udEJhc2VQeCk7XHJcbiAgICBAbWFyVG9wUHg6QG10O1xyXG4gICAgQG1hckJvdFB4OkBtYjtcclxuICAgIG1hcmdpbi10b3A6IFwiQHt9cmVtXCI7XHJcbiAgICBtYXJnaW4tdG9wOiBcIkB7fXB4XCI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiBcIkB7fXJlbVwiIDtcclxuICAgIG1hcmdpbi1ib3R0b206IFwiQHt9cHhcIiA7XHJcbn1cclxuXHJcbi5yb3VuZChAcjogMykge1xyXG4gICAgYm9yZGVyLXJhZGl1czogflwiQHtyfXB4XCI7XHJcbn1cclxuXHJcbi5yb3VuZC1zbWFsbChAcjogMikge1xyXG4gICAgYm9yZGVyLXJhZGl1czogflwiQHtyfXB4XCI7XHJcbn1cclxuXHJcbi5yb3VuZC1tZWRpdW0oQHI6IDQpIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IH5cIkB7cn1weFwiO1xyXG59XHJcblxyXG4ucm91bmQtbGFyZ2UoQHI6IDgpIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IH5cIkB7cn1weFwiO1xyXG59XHJcblxyXG4ucm91bmQteGxhcmdlKEByOiAxNikge1xyXG4gICAgYm9yZGVyLXJhZGl1czogflwiQHtyfXB4XCI7XHJcbn1cclxuXHJcbi5yb3VuZC14eGxhcmdlKEByOiAzMikge1xyXG4gICAgYm9yZGVyLXJhZGl1czogflwiQHtyfXB4XCI7XHJcbn1cclxuXHJcbi5jb2RlKCkge1xyXG4gICAgZm9udC1mYW1pbHk6IENvbnNvbGFzLCBcImNvdXJpZXIgbmV3XCI7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbn1cclxuXHJcbi5jb2Rlc3BhbigpIHtcclxuICAgIGZvbnQtZmFtaWx5OiBDb25zb2xhcywgXCJjb3VyaWVyIG5ld1wiO1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG59XHJcblxyXG4uY29kZSgpIHtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogQHdoaXRlO1xyXG4gICAgcGFkZGluZzogOHB4IDEycHg7XHJcbiAgICBib3JkZXItbGVmdDogNHB4IHNvbGlkIEBncmVlbjtcclxuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcclxufVxyXG5cclxuLmNvZGVzcGFuKCkge1xyXG4gICAgY29sb3I6IGNyaW1zb247XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBAbGlnaHQtZ3JleTtcclxuICAgIHBhZGRpbmctbGVmdDogNHB4O1xyXG4gICAgcGFkZGluZy1yaWdodDogNHB4O1xyXG4gICAgZm9udC1zaXplOiAxMTAlO1xyXG59XHJcblxyXG5cclxuXHJcbi5taW4tbWF4KCkge31cclxuXHJcbi5taW4tbWF4KEBtaW4td2lkdGgsIEBtYXgtd2lkdGgsIEBwYWRkaW5nKSB7XHJcbiBAcmVtVmFsdWU6IChAcGFkZGluZy9AZm9udEJhc2VQeCk7XHJcbiBAcHhWYWx1ZTogQHBhZGRpbmc7XHJcbiBAcHhNYXhXaWR0aDogQG1heC13aWR0aDtcclxuIEBweE1pbldpZHRoOiBAbWluLXdpZHRoO1xyXG4gQHJlbVZhbHVlTWluOiAoQG1pbi13aWR0aC9AZm9udEJhc2VQeCk7XHJcbiBAcmVtVmFsdWVNYXg6IChAbWF4LXdpZHRoL0Bmb250QmFzZVB4KTtcclxuXHJcbiAgbWluLXdpZHRoOiB+XCJAe3B4TWluV2lkdGh9cHhcIjtcclxuICBtaW4td2lkdGg6IH5cIkB7cmVtVmFsdWVNaW59cmVtXCI7XHJcbiAgbWF4LXdpZHRoOiB+XCJAe3B4TWF4V2lkdGh9cHhcIjtcclxuICBtYXgtd2lkdGg6IH5cIkB7cmVtVmFsdWVNYXh9cmVtXCI7XHJcbiAgcGFkZGluZzogMCB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICBwYWRkaW5nOiAwIH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuLm1pbi1tYXgtcGVyKEBtaW4td2lkdGgsIEBtYXgtd2lkdGgsIEBwYWRkaW5nKSB7XHJcbiBAcmVtVmFsdWU6IChAcGFkZGluZy9AZm9udEJhc2VQeCk7XHJcbiBAcHhWYWx1ZTogQHBhZGRpbmc7XHJcbiBAcGVyTWF4V2lkdGg6IEBtYXgtd2lkdGg7XHJcbiBAcHhNaW5XaWR0aDogQG1pbi13aWR0aDtcclxuIEByZW1WYWx1ZU1pbjogKEBtaW4td2lkdGgvQGZvbnRCYXNlUHgpO1xyXG5cclxuICBtaW4td2lkdGg6IH5cIkB7cHhNaW5XaWR0aH1weFwiO1xyXG4gIG1pbi13aWR0aDogflwiQHtyZW1WYWx1ZU1pbn1yZW1cIjtcclxuICBtYXgtd2lkdGg6IH5cIkB7cGVyTWF4V2lkdGh9JVwiO1xyXG5cclxuICBwYWRkaW5nOiAwIH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gIHBhZGRpbmc6IDAgflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG59XHJcblxyXG5cclxuXHJcbi5oZWlnaHQoKXt9XHJcblxyXG4uaGVpZ2h0KEBweCl7XHJcbiAgICBAcmVtVmFsdWU6IChAcHgvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBweDtcclxuICAgIGhlaWdodDogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBoZWlnaHQ6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxuXHJcbi5oZWlnaHQtcGVyKEBweCl7XHJcbiAgICBAcGVyVmFsdWU6IEBweDtcclxuICAgIGhlaWdodDogflwiQHtwZXJWYWx1ZX0lXCI7XHJcbn1cclxuXHJcbi5tYXgtaGVpZ2h0KCl7fVxyXG5cclxuLm1heC1oZWlnaHQoQHB4KXtcclxuICAgIEByZW1WYWx1ZTogKEBweC9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHB4O1xyXG4gICAgbWF4LWhlaWdodDogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBtYXgtaGVpZ2h0OiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcblxyXG4ubWF4LWhlaWdodC1wZXIoQHB4KXtcclxuICAgIEBwZXJWYWx1ZTogQHB4O1xyXG4gICAgbWF4LWhlaWdodDogflwiQHtwZXJWYWx1ZX0lXCI7XHJcbn1cclxuXHJcbi5taW4taGVpZ2h0KEBweCl7XHJcbiAgICBAcmVtVmFsdWU6IChAcHgvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBweDtcclxuICAgIG1pbi1oZWlnaHQ6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgbWluLWhlaWdodDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG5cclxuLm1pbi1oZWlnaHQtcGVyKEBweCl7XHJcbiAgICBAcGVyVmFsdWU6IEBweDtcclxuICAgIG1pbi1oZWlnaHQ6IH5cIkB7cGVyVmFsdWV9JVwiO1xyXG59XHJcblxyXG4ubWluLXdpZHRoKEBweCl7XHJcbiAgICBAcmVtVmFsdWU6IChAcHgvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBweDtcclxuICAgIG1pbi13aWR0aDogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBtaW4td2lkdGg6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxuXHJcbi5taW4td2lkdGgtcGVyKEBweCl7XHJcbiAgICBAcGVyVmFsdWU6IEBweDtcclxuICAgIG1pbi13aWR0aDogflwiQHtwZXJWYWx1ZX0lXCI7XHJcbn1cclxuXHJcbi53aWR0aChAcHgpe1xyXG4gICAgQHJlbVZhbHVlOiAoQHB4L0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAcHg7XHJcbiAgICB3aWR0aDogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICB3aWR0aDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG5cclxuLndpZHRoLWNhbGMtcGVyKEBweCwgQGJhc2Upe1xyXG4gICAgQHBlclZhbHVlOiAoQHB4L0BiYXNlKSoxMDA7XHJcbiAgICBAcGVyOmNlaWwoQHBlclZhbHVlKTtcclxuICAgIHdpZHRoOiB+XCJAe3Blcn0lXCI7XHJcbn1cclxuXHJcbi53aWR0aC1wZXIoIEBweCl7XHJcbiAgICBAcGVyVmFsdWU6IEBweDtcclxuICAgIHdpZHRoOiB+XCJAe3BlclZhbHVlfSVcIjtcclxufVxyXG5cclxuLm1heC13aWR0aChAcHgpe1xyXG4gICAgQHJlbVZhbHVlOiAoQHB4L0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAcHg7XHJcbiAgICBtYXgtd2lkdGg6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgbWF4LXdpZHRoOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcbi5tYXgtd2lkdGgtcGVyKEBweCl7XHJcbiAgICBAcGVyVmFsdWU6IEBweDtcclxuICAgIG1heC13aWR0aDogflwiQHtwZXJWYWx1ZX0lXCI7XHJcbn1cclxuXHJcbi5tYXgtd2lkdGgtY2FsYy1wZXIoQHB4LCBAYnJlYWspe1xyXG4gICAgQHBlclZhbHVlOiAoQHB4L0BicmVhaykqMTAwO1xyXG4gICAgbWF4LXdpZHRoOiB+XCJAe3BlclZhbHVlfSVcIjtcclxufVxyXG5cclxuLmRpYi1taWQoKXtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbn1cclxuXHJcbi5kaWItdG9wKCl7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG59XHJcblxyXG4uc3F1YXJlKCkge31cclxuXHJcbi5zcXVhcmUoQHM6NTAsIEBiZ2M6I2NjYykge1xyXG4gICAgQHJlbVZhbHVlOiAoQHMvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBzO1xyXG4gICAgd2lkdGg6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgd2lkdGg6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgICBoZWlnaHQ6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgaGVpZ2h0OiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogQGJnYztcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcbi50cmlhbmdsZSgpe31cclxuXHJcbi50cmlhbmdsZS11cChAd2lkdGgsIEBjb2xvcjogQGNvbG9yKSB7XHJcbiAgICBAcmVtVmFsdWU6IChAd2lkdGgvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEB3aWR0aDtcclxuICAgIEB3aWR0aERldjogKEBweFZhbHVlLzIpO1xyXG4gICAgLyouc3F1YXJlKDApOyAqL1xyXG4gICAgYm9yZGVyLWxlZnQ6ICAgflwiQHt3aWR0aERldn1weFwiIHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyLWxlZnQ6ICAgflwiQHtyZW1WYWx1ZX1yZW1cIiBzb2xpZCB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlci1yaWdodDogIH5cIkB7d2lkdGhEZXZ9cHhcIiBzb2xpZCB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlci1yaWdodDogIH5cIkB7cmVtVmFsdWV9cmVtXCIgc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXItYm90dG9tOiB+XCJAe3B4VmFsdWV9cHhcIiBzb2xpZCBAY29sb3I7XHJcbiAgICBib3JkZXItYm90dG9tOiB+XCJAe3JlbVZhbHVlfXJlbVwiIHNvbGlkIEBjb2xvcjtcclxufVxyXG5cclxuLnRyaWFuZ2xlLWRvd24oQHdpZHRoLCBAY29sb3I6IEBjb2xvcikge1xyXG4gICAgQHJlbVZhbHVlOiAoQHdpZHRoL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAd2lkdGg7XHJcbiAgICBAd2lkdGhEZXY6IChAcHhWYWx1ZS8yKTtcclxuXHJcbiAgICAvKi5zcXVhcmUoMCk7Ki9cclxuICAgIGJvcmRlci1sZWZ0OiB+XCJAe3dpZHRoRGV2fXB4XCIgc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXItbGVmdDogflwiQHtyZW1WYWx1ZX1yZW1cIiBzb2xpZCB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlci1yaWdodDp+XCJAe3dpZHRoRGV2fXB4XCIgc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXItcmlnaHQ6flwiQHtyZW1WYWx1ZX1yZW1cIiBzb2xpZCB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlci10b3A6ICB+XCJAe3B4VmFsdWV9cHhcIiBzb2xpZCBAY29sb3I7XHJcbiAgICBib3JkZXItdG9wOiAgflwiQHtyZW1WYWx1ZX1yZW1cIiBzb2xpZCBAY29sb3I7XHJcbn1cclxuXHJcbi50cmlhbmdsZS1sZWZ0KEB3aWR0aCwgQGNvbG9yOiBAY29sb3IpIHtcclxuICAgIEByZW1WYWx1ZTogKEB3aWR0aC9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHdpZHRoO1xyXG4gICAgQHdpZHRoRGV2OiAoQHB4VmFsdWUvMik7XHJcblxyXG4gICAgLyouc3F1YXJlKDApOyovXHJcbiAgYm9yZGVyLXRvcDogICAgICAgflwiQHt3aWR0aERldn1weFwiIHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gIGJvcmRlci10b3A6ICAgICAgIH5cIkB7cmVtVmFsdWV9cmVtXCIgc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgYm9yZGVyLXJpZ2h0OiAgICAgflwiQHtweFZhbHVlfXB4XCIgc29saWQgQGNvbG9yO1xyXG4gIGJvcmRlci1yaWdodDogICAgIH5cIkB7cmVtVmFsdWV9cmVtXCIgc29saWQgQGNvbG9yO1xyXG4gIGJvcmRlci1ib3R0b206ICAgIH5cIkB7d2lkdGhEZXZ9cHhcIiBzb2xpZCB0cmFuc3BhcmVudDtcclxuICBib3JkZXItYm90dG9tOiAgICB+XCJAe3JlbVZhbHVlfXJlbVwiIHNvbGlkIHRyYW5zcGFyZW50O1xyXG59XHJcblxyXG4udHJpYW5nbGUtcmlnaHQoQHdpZHRoLCBAY29sb3I6IEBjb2xvcikge1xyXG4gICAgQHJlbVZhbHVlOiAoQHdpZHRoL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAd2lkdGg7XHJcbiAgICBAd2lkdGhEZXY6IChAcHhWYWx1ZS8yKTtcclxuXHJcbiAgICAvKi5zcXVhcmUoMCk7Ki9cclxuICBib3JkZXItdG9wOiAgICAgICB+XCJAe3dpZHRoRGV2fXB4XCIgc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgYm9yZGVyLXRvcDogICAgICAgflwiQHtyZW1WYWx1ZX1yZW1cIiBzb2xpZCB0cmFuc3BhcmVudDtcclxuICBib3JkZXItbGVmdDogICAgICB+XCJAe3B4VmFsdWV9cHhcIiBzb2xpZCBAY29sb3I7XHJcbiAgYm9yZGVyLWxlZnQ6ICAgICAgflwiQHtyZW1WYWx1ZX1yZW1cIiBzb2xpZCBAY29sb3I7XHJcbiAgYm9yZGVyLWJvdHRvbTogICAgflwiQHt3aWR0aERldn1weFwiIHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gIGJvcmRlci1ib3R0b206ICAgIH5cIkB7cmVtVmFsdWV9cmVtXCIgc29saWQgdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbi50cmlhbmdsZS10b3AtbGVmdChAd2lkdGgsIEBjb2xvcjogQGNvbG9yKSB7XHJcbiAgICBAcmVtVmFsdWU6IChAd2lkdGgvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEB3aWR0aDtcclxuICAgIEB3aWR0aERldjogKEBweFZhbHVlLzIpO1xyXG4gICAgQHdpZHRoUmVtOiAoQHdpZHRoRGV2L0Bmb250QmFzZVB4KTtcclxuICAgIC8qLnNxdWFyZSgwKTsgKi9cclxuICBib3JkZXItdG9wOiAgIH5cIkB7cHhWYWx1ZX1weFwiIHNvbGlkIEBjb2xvcjtcclxuICBib3JkZXItdG9wOiAgIH5cIkB7cmVtVmFsdWV9cmVtXCIgc29saWQgQGNvbG9yO1xyXG4gIGJvcmRlci1yaWdodDogflwiQHtweFZhbHVlfXB4XCIgc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgYm9yZGVyLXJpZ2h0OiB+XCJAe3JlbVZhbHVlfXJlbVwiIHNvbGlkIHRyYW5zcGFyZW50O1xyXG59XHJcblxyXG4udHJpYW5nbGUtdG9wLXJpZ2h0KEB3aWR0aCwgQGNvbG9yOiBAY29sb3IpIHtcclxuICAgIEByZW1WYWx1ZTogKEB3aWR0aC9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHdpZHRoO1xyXG4gICAgLyouc3F1YXJlKDApOyovXHJcbiAgYm9yZGVyLXRvcDogIH5cIkB7cHhWYWx1ZX1weFwiIHNvbGlkIEBjb2xvcjtcclxuICBib3JkZXItdG9wOiAgflwiQHtyZW1WYWx1ZX1yZW1cIiBzb2xpZCBAY29sb3I7XHJcbiAgYm9yZGVyLWxlZnQ6IH5cIkB7cHhWYWx1ZX1weFwiIHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gIGJvcmRlci1sZWZ0OiB+XCJAe3JlbVZhbHVlfXJlbVwiIHNvbGlkIHRyYW5zcGFyZW50O1xyXG59XHJcblxyXG4udHJpYW5nbGUtYm90dG9tLWxlZnQoQHdpZHRoLCBAY29sb3I6IEBjb2xvcikge1xyXG4gICAgQHJlbVZhbHVlOiAoQHdpZHRoL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAd2lkdGg7XHJcbiAgICAvKi5zcXVhcmUoMCk7Ki9cclxuICBib3JkZXItYm90dG9tOiB+XCJAe3B4VmFsdWV9cHhcIiBzb2xpZCBAY29sb3I7XHJcbiAgYm9yZGVyLWJvdHRvbTogflwiQHtyZW1WYWx1ZX1yZW1cIiBzb2xpZCBAY29sb3I7XHJcbiAgYm9yZGVyLXJpZ2h0OiB+XCJAe3B4VmFsdWV9cHhcIiBzb2xpZCB0cmFuc3BhcmVudDtcclxuICBib3JkZXItcmlnaHQ6IH5cIkB7cmVtVmFsdWV9cmVtXCIgc29saWQgdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbi50cmlhbmdsZS1ib3R0b20tcmlnaHQoQHdpZHRoLCBAY29sb3I6IEBjb2xvcikge1xyXG4gICAgQHJlbVZhbHVlOiAoQHdpZHRoL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAd2lkdGg7XHJcbiAgICAvKi5zcXVhcmUoMCk7Ki9cclxuICBib3JkZXItYm90dG9tOiB+XCJAe3B4VmFsdWV9cHhcIiBzb2xpZCBAY29sb3I7XHJcbiAgYm9yZGVyLWJvdHRvbTogflwiQHtyZW1WYWx1ZX1yZW1cIiBzb2xpZCBAY29sb3I7XHJcbiAgYm9yZGVyLWxlZnQ6IH5cIkB7cHhWYWx1ZX1weFwiIHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gIGJvcmRlci1sZWZ0OiB+XCJAe3JlbVZhbHVlfXJlbVwiIHNvbGlkIHRyYW5zcGFyZW50O1xyXG59XHJcblxyXG4ucm9tYihAYm9yZGVyLWxlZnQ6IDE4MDsgQGJvcmRlci1ib3R0b206MTAwKXtcclxuICBAdmFsVmg6IEBib3JkZXItbGVmdDtcclxuICBAdmFsUHg6IEBib3JkZXItYm90dG9tO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICAmOjpiZWZvcmUsICY6OmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgd2lkdGg6IDA7XHJcbiAgICBoZWlnaHQ6IDA7XHJcbiAgICBib3JkZXItbGVmdDogflwiQHt2YWxWaH12aFwiIHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyLWJvdHRvbTogflwiQHt2YWxQeH1weFwic29saWQgI2ZmZmZmZjtcclxuICB9XHJcblxyXG4gICY6OmJlZm9yZSB7XHJcbiAgICB0b3A6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XHJcbiAgfVxyXG59XHJcblxyXG4uY2lyY2xlLWltZy13cmFwKCl7fVxyXG5cclxuLmNpcmNsZS1pbWctd3JhcChAczo1MCl7XHJcbiAgICBAcmVtVmFsdWU6IChAcy9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHM7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICB3aWR0aDogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICB3aWR0aDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxuICAgIGhlaWdodDogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBoZWlnaHQ6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCUgNTAlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcbi50YWJsZS1hbGwoKSB7IH1cclxuLnRhYmxlLWFsbChAdmFsdWU6IDFweCkge1xyXG4gIHRyIHtcclxuICAgIGJvcmRlci1ib3R0b206IEB2YWx1ZSBzb2xpZCAjZGRkO1xyXG4gIH1cclxufVxyXG5cclxuLnN0cmlwZWQoQGxpZ2h0LWdyZXkpIHtcclxuICB0Ym9keSB0cjpudGgtY2hpbGQoZXZlbikge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogQGxpZ2h0LWdyZXk7XHJcbiAgfVxyXG59XHJcblxyXG4udGFibGUtYWxsKEB3aGl0ZSkge1xyXG4gIHRyOm50aC1jaGlsZChvZGQpIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IEB3aGl0ZTtcclxuICB9XHJcbn1cclxuXHJcbi50YWJsZS1hbGwoQGxpZ2h0LWdyZXkpIHtcclxuICB0cjpudGgtY2hpbGQoZXZlbikge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogQGxpZ2h0LWdyZXk7XHJcbiAgfVxyXG59XHJcblxyXG4uY2VudGVyZWQoKSB7XHJcbiAgdHIgdGgge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxufVxyXG5cclxuLmNlbnRlcmVkKCkge1xyXG4gIHRyIHRkIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcbn1cclxuXHJcbi50YWJsZSgpIHtcclxuICB0ZCB7XHJcbiAgICBwYWRkaW5nOiA4cHggOHB4O1xyXG4gICAgZGlzcGxheTogdGFibGUtY2VsbDtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gIH1cclxufVxyXG5cclxuLnRhYmxlKCkge1xyXG4gIHRoIHtcclxuICAgIHBhZGRpbmc6IDhweCA4cHg7XHJcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgfVxyXG59XHJcblxyXG4udGFibGUtYWxsKCkge1xyXG4gIHRkIHtcclxuICAgIHBhZGRpbmc6IDhweCA4cHg7XHJcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgfVxyXG59XHJcblxyXG4udGFibGUtYWxsKCkge1xyXG4gIHRoIHtcclxuICAgIHBhZGRpbmc6IDhweCA4cHg7XHJcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgfVxyXG59XHJcblxyXG4udGFibGUoKSB7XHJcbiAgdGg6Zmlyc3QtY2hpbGQge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxNnB4O1xyXG4gIH1cclxufVxyXG5cclxuXHJcbi50YWJsZSgpIHtcclxuICB0ZDpmaXJzdC1jaGlsZCB7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDE2cHg7XHJcbiAgfVxyXG59XHJcblxyXG4udGFibGUtYWxsKCkge1xyXG4gIHRoOmZpcnN0LWNoaWxkIHtcclxuICAgIHBhZGRpbmctbGVmdDogMTZweDtcclxuICB9XHJcbn1cclxuXHJcbi50YWJsZS1hbGwoKSB7XHJcbiAgdGQ6Zmlyc3QtY2hpbGQge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxNnB4O1xyXG4gIH1cclxufVxyXG5cclxuLmJ1dHRvbigpe1xyXG5cclxufVxyXG5cclxuLmJ1dHRvbiAoQGxpbmUtaGVpZ2h0OjMwOyBAcGFkZGluZzogMTY7IEBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjazsgQGNvbG9yOiB3aGl0ZTsgQGNvbnRlbnQpIHtcclxuICBAcmVtbGluZTogKEBsaW5lLWhlaWdodC9AZm9udEJhc2VQeCk7XHJcbiAgQGJnYzogQGJhY2tncm91bmQtY29sb3I7XHJcbiAgQGM6ICBAY29sb3I7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIG91dGxpbmU6IG5vbmUgIWltcG9ydGFudDtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gIGhlaWdodDogflwiQHtsaW5lLWhlaWdodH1weFwiO1xyXG4gIGhlaWdodDogflwiQHtyZW1saW5lfXJlbVwiO1xyXG4gIGxpbmUtaGVpZ2h0OiB+XCJAe2xpbmUtaGVpZ2h0fXB4XCI7XHJcbiAgbGluZS1oZWlnaHQ6IH5cIkB7cmVtbGluZX1yZW1cIjtcclxuICBwYWRkaW5nOiAwIH5cIkB7cGFkZGluZ31weFwiO1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgY29sb3I6IEBjO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IEBiZ2M7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBAY29udGVudCgpO1xyXG5cclxuICAmOmhvdmVyIHtcclxuICAgIC5iZ2MoZGFyaywgQGJnYyk7XHJcbiAgICAuYyhsaWdodCwgQGMpO1xyXG4gIH1cclxuXHJcbiAgJjpmb2N1cyB7XHJcbiAgICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICAgIC5iZ2MobGlnaHQsIEBiZ2MpO1xyXG4gICAgICAuYyhkYXJrLCBAYyk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5idXR0b24td2lkdGgoQHdpZHRoOiAyMDAgOyBAbGluZS1oZWlnaHQ6MzA7IEBwYWRkaW5nOiAxNjsgQGJhY2tncm91bmQtY29sb3I6IGJsYWNrOyBAY29sb3I6IHdoaXRlOyBAY29udGVudCkge1xyXG4gIEByZW1saW5lOiAoQGxpbmUtaGVpZ2h0L0Bmb250QmFzZVB4KTtcclxuICBAYmdjOiBAYmFja2dyb3VuZC1jb2xvcjtcclxuICBAYzogIEBjb2xvcjtcclxuICBAcHhXaWR0aDogQHdpZHRoO1xyXG4gIEByZW1XaWR0aDogKEB3aWR0aC9AZm9udEJhc2VQeCk7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIG91dGxpbmU6ICBub25lICFpbXBvcnRhbnQ7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICB3aWR0aDogflwiQHtweFdpZHRofXB4XCI7XHJcbiAgbWF4LXdpZHRoOiB+XCJAe3JlbVdpZHRofXJlbVwiO1xyXG4gIGhlaWdodDogflwiQHtsaW5lLWhlaWdodH1weFwiO1xyXG4gIGhlaWdodDogflwiQHtyZW1saW5lfXJlbVwiO1xyXG4gIGxpbmUtaGVpZ2h0OiB+XCJAe2xpbmUtaGVpZ2h0fXB4XCI7XHJcbiAgbGluZS1oZWlnaHQ6IH5cIkB7cmVtbGluZX1yZW1cIjtcclxuICBwYWRkaW5nOiAwIH5cIkB7cGFkZGluZ31weFwiO1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgY29sb3I6IEBjO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IEBiZ2M7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBAY29udGVudCgpO1xyXG5cclxuICAmOmhvdmVyIHtcclxuICAgIC5iZ2MobGlnaHQsIEBiZ2MpO1xyXG4gICAgLmMobGlnaHQsIEBjKTtcclxuICB9XHJcblxyXG4gICY6Zm9jdXMge1xyXG4gICAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgICAuYmdjKGxpZ2h0LCBAYmdjKTtcclxuICAgICAgLmMoZGFyaywgQGMpO1xyXG4gICAgfVxyXG59XHJcbi5idG4gKEBsaW5lLWhlaWdodDozMDsgQHBhZGRpbmc6IDE2OyBAYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7IEBjb2xvcjogd2hpdGU7IEBjb250ZW50KSB7XHJcbiAgICAgIEByZW1saW5lOiAoQGxpbmUtaGVpZ2h0L0Bmb250QmFzZVB4KTtcclxuICAgICAgQGJnYzogQGJhY2tncm91bmQtY29sb3I7XHJcbiAgICAgIEBjOiAgQGNvbG9yO1xyXG4gICY6ZXh0ZW5kKC5idXR0b24pO1xyXG4gIEBjb250ZW50KCk7XHJcblxyXG4gICY6aG92ZXIge1xyXG4gICAgYm94LXNoYWRvdzogMCA4cHggMTZweCAwIHJnYmEoMCwgMCwgMCwgMC4yKSwgMCA2cHggMjBweCAwIHJnYmEoMCwgMCwgMCwgMC4xOSk7XHJcbiAgfVxyXG5cclxuICAmOmZvY3VzIHtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgfVxyXG5cclxufVxyXG5cclxuXHJcblxyXG4udGV4dC1zaGFkb3coKXtcclxuICAgIHRleHQtc2hhZG93OjFweCAxcHggMCBAdGV4dC1zaGFkb3c7XHJcbn1cclxuXHJcbi50ZXh0LXNoYWRvdy1sZXR0ZXJwcmVzcyhAYmFja2dyb3VuZDogI0Y5Qzk0MTsgQGNvbG9yOiAjRjlDOTQxKXtcclxuICAgIGJhY2tncm91bmQ6IEBiYWNrZ3JvdW5kO1xyXG4gICAgY29sb3I6IEBjb2xvcjtcclxuICAgIGxldHRlci1zcGFjaW5nOiAycHg7XHJcbiAgICB0ZXh0LXNoYWRvdzogMXB4IDFweCBAYmFja2dyb3VuZCwgLTFweCAtMXB4IEBiYWNrZ3JvdW5kO1xyXG59XHJcblxyXG4uc2hhZG93LXRleHQgKCBAaG9yLXZlcnQtcmFkLWNvbG9yOiAwcHggMXB4IDBweCBibHVlICkge1xyXG4gIHRleHQtc2hhZG93OiBAaG9yLXZlcnQtcmFkLWNvbG9yO1xyXG59XHJcblxyXG5cclxuLnNoYWRvdy1kcm9wKEB4LWF4aXM6IDAsIEB5LWF4aXM6IDFweCwgQGJsdXI6IDJweCwgQGFscGhhOiAwLjEpIHtcclxuICBib3gtc2hhZG93OiBAeC1heGlzIEB5LWF4aXMgQGJsdXIgcmdiYSgwLCAwLCAwLCBAYWxwaGEpO1xyXG59XHJcblxyXG4uc2hhZG93LWlubmVyKEBob3Jpem9udGFsOjAsIEB2ZXJ0aWNhbDoxcHgsIEBibHVyOjJweCwgQGFscGhhOiAwLjQpIHtcclxuICBib3gtc2hhZG93OiBpbnNldCBAaG9yaXpvbnRhbCBAdmVydGljYWwgQGJsdXIgcmdiYSgwLCAwLCAwLCBAYWxwaGEpO1xyXG59XHJcblxyXG4uc2hhZG93LWJveChAYXJndW1lbnRzKSB7XHJcbiAgYm94LXNoYWRvdzogQGFyZ3VtZW50cztcclxufVxyXG5cclxuLmJveC1zaGFkb3coKXtcclxuICAgICBib3gtc2hhZG93OiAwIDhweCAxNnB4IDAgcmdiYSgwLDAsMCwwLjIpLCAwIDZweCAyMHB4IDAgcmdiYSgwLDAsMCwwLjE5KTtcclxuICAgICB0cmFuc2l0aW9uOiBhbGwgLjVzIGVhc2UtaW4tb3V0O1xyXG4gICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmNvbC1ncm93KCkge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB3aWR0aDogMTAwJTtcclxuICBmbGV4LWJhc2lzOiAwO1xyXG4gIGZsZXgtZ3JvdzogMTtcclxuICAuY29sLW9mZnNldHMocGFkZGluZyk7XHJcbn1cclxuXHJcbi5jb2wtZ3Jvdy1sZygpe1xyXG4gIC5sZy1ibG9jayh7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgICAgZmxleC1iYXNpczogMDtcclxuICAgICAgZmxleC1ncm93OiAxO1xyXG4gICAgICAuY29sLW9mZnNldHMocGFkZGluZyk7XHJcbiAgfSk7XHJcbn1cclxuXHJcbi5jb2wtZ3Jvdy1tZCgpe1xyXG4gIC5tZC1ibG9jayh7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgICAgZmxleC1iYXNpczogMDtcclxuICAgICAgZmxleC1ncm93OiAxO1xyXG4gICAgICAuY29sLW9mZnNldHMocGFkZGluZyk7XHJcbiAgfSk7XHJcbn1cclxuXHJcbi5jb2wtZ3Jvdy1zbSgpe1xyXG4gIC5zbS1ibG9jayh7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgICAgZmxleC1iYXNpczogMDtcclxuICAgICAgZmxleC1ncm93OiAxO1xyXG4gICAgICAuY29sLW9mZnNldHMocGFkZGluZyk7XHJcbiAgfSk7XHJcbn1cclxuXHJcbi5jb2wtZ3Jvdy14cygpe1xyXG4gIC54cy1ibG9jayh7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgICAgZmxleC1iYXNpczogMDtcclxuICAgICAgZmxleC1ncm93OiAxO1xyXG4gICAgICAuY29sLW9mZnNldHMocGFkZGluZyk7XHJcbiAgfSk7XHJcbn1cclxuXHJcbi5jb2wtZ3Jvdy14eHMoKXtcclxuICAueHhzLWJsb2NrKHtcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICAgIGZsZXgtYmFzaXM6IDA7XHJcbiAgICAgIGZsZXgtZ3JvdzogMTtcclxuICAgICAgLmNvbC1vZmZzZXRzKHBhZGRpbmcpO1xyXG4gIH0pO1xyXG59XHJcblxyXG5cclxuXHJcbi5mYihAbikge1xyXG4gICAgZmxleC1iYXNpczogQGF0b20gKiBAbjtcclxufVxyXG5cclxuLmZiLWxnKEBuKSB7XHJcbiAgIC5sZyhmbGV4LWJhc2lzLCBAYXRvbSAqIEBuKTtcclxufVxyXG5cclxuLmZiLW1kKEBuKSB7XHJcbiAgIC5tZChmbGV4LWJhc2lzLCBAYXRvbSAqIEBuKTtcclxufVxyXG5cclxuLmZiLXNtKEBuKSB7XHJcbiAgIC5zbShmbGV4LWJhc2lzLCBAYXRvbSAqIEBuKTtcclxufVxyXG5cclxuLmZiLXhzKEBuKSB7XHJcbiAgIC54cyhmbGV4LWJhc2lzLCBAYXRvbSAqIEBuKTtcclxufVxyXG5cclxuLmZiLXh4cyhAbikge1xyXG4gICAueHhzKGZsZXgtYmFzaXMsIEBhdG9tICogQG4pO1xyXG59XHJcblxyXG4uc2l6ZS1ncm93KEBuKXtcclxuICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcclxuICBmbGV4OjAgMCB+XCJjYWxjKEB7dmFsfSAtIEB7b2Zmc2V0fSlcIjtcclxuICBtYXgtd2lkdGg6IH5cImNhbGMoQHt2YWx9IC0gQHtvZmZzZXR9KVwiO1xyXG59XHJcblxyXG4uc2l6ZS1ncm93LWxnKEBuKXtcclxuICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcclxuICAubGcoZmxleCwwIDAgflwiY2FsYyhAe3ZhbH0gLSBAe29mZnNldF9tZH0pXCIpO1xyXG4gIC5sZyhtYXgtd2lkdGgsIH5cImNhbGMoQHt2YWx9IC0gQHtvZmZzZXRfbWR9KVwiKTtcclxuXHJcbn1cclxuLnNpemUtZ3Jvdy1tZChAbil7XHJcbiAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XHJcbiAgLm1kKGZsZXgsMCAwIH5cImNhbGMoQHt2YWx9IC0gQHtvZmZzZXRfbWR9KVwiKTtcclxuICAubWQobWF4LXdpZHRoLCB+XCJjYWxjKEB7dmFsfSAtIEB7b2Zmc2V0X21kfSlcIik7XHJcblxyXG59XHJcblxyXG4uc2l6ZS1ncm93LXNtKEBuKXtcclxuICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcclxuICAuc20oZmxleCwwIDAgflwiY2FsYyhAe3ZhbH0gLSBAe29mZnNldF9zbX0pXCIpO1xyXG4gIC5zbShtYXgtd2lkdGgsIH5cImNhbGMoQHt2YWx9IC0gQHtvZmZzZXRfc219KVwiKTtcclxuXHJcbn1cclxuXHJcbi5zaXplLWdyb3cteHMoQG4pe1xyXG4gIEB2YWw6IDEwMCUgLyBAY29sdW1ucyAqIEBuO1xyXG4gIC54cyhmbGV4LDAgMCB+XCJjYWxjKEB7dmFsfSAtIEB7b2Zmc2V0X3hzfSlcIik7XHJcbiAgLnhzKG1heC13aWR0aCwgflwiY2FsYyhAe3ZhbH0gLSBAe29mZnNldF94c30pXCIpO1xyXG5cclxufVxyXG5cclxuLnNpemUtZ3Jvdy14eHMoQG4pe1xyXG4gIEB2YWw6IDEwMCUgLyBAY29sdW1ucyAqIEBuO1xyXG4gIC54eHMoZmxleCwwIDAgflwiY2FsYyhAe3ZhbH0gLSBAe29mZnNldF94eHN9KVwiKTtcclxuICAueHhzKG1heC13aWR0aCwgflwiY2FsYyhAe3ZhbH0gLSBAe29mZnNldF94eHN9KVwiKTtcclxufVxyXG5cclxuLm9yZGVyKCl7fVxyXG5cclxuLm9yZGVyKEBuKXtcclxuICAgb3JkZXI6IEBuO1xyXG59XHJcblxyXG5cclxuLnZhbGlnbi1jb2woKSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGZsZXgtd3JhcDogd3JhcDtcclxufVxyXG5cclxuLnZhbGlnbi1jb2wtbGcoKXtcclxuICAgIC5sZy1ibG9jayh7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIH0pO1xyXG59XHJcblxyXG4udmFsaWduLWNvbC1tZCgpe1xyXG4gICAgLm1kLWJsb2NrKHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi52YWxpZ24tY29sLXNtKCl7XHJcbiAgICAuc20tYmxvY2soe1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLnZhbGlnbi1jb2wteHMoKXtcclxuICAgIC54cy1ibG9jayh7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIH0pO1xyXG59XHJcblxyXG4udmFsaWduLWNvbC14eHMoKXtcclxuICAgIC54cy1ibG9jayh7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIH0pO1xyXG59XHJcblxyXG5cclxuLnZhbGlnbi1yb3coKSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gIGZsZXgtd3JhcDogd3JhcDtcclxufVxyXG5cclxuLnZhbGlnbi1yb3ctbGcoKSB7XHJcbiAgICAubGctYmxvY2soe1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLnZhbGlnbi1yb3ctbWQoKSB7XHJcbiAgICAubWQtYmxvY2soe1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLnZhbGlnbi1yb3ctc20oKSB7XHJcbiAgICAuc20tYmxvY2soe1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLnZhbGlnbi1yb3cteHMoKSB7XHJcbiAgICAueHMtYmxvY2soe1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLnZhbGlnbi1yb3cteHhzKCkge1xyXG4gICAgLnh4cy1ibG9jayh7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIH0pO1xyXG59XHJcblxyXG4udmFsaWduLWJldCgpIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbn1cclxuXHJcbi52YWxpZ24tYmV0LWxnKCkge1xyXG4gICAgLmxnLWJsb2NrKHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLnZhbGlnbi1iZXQtbWQoKSB7XHJcbiAgICAubWQtYmxvY2soe1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIH0pO1xyXG59XHJcblxyXG4udmFsaWduLXNtLWJldCgpIHtcclxuICAgIC5zbS1ibG9jayh7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi52YWxpZ24tYmV0LXNtKCkge1xyXG4gICAgLnNtLWJsb2NrKHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLnZhbGlnbi1iZXQteHMoKSB7XHJcbiAgICAueHMtYmxvY2soe1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIH0pO1xyXG59XHJcblxyXG4udmFsaWduLWJldC14eHMoKSB7XHJcbiAgICAueHhzLWJsb2NrKHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9KTtcclxufVxyXG5cclxuXHJcblxyXG4udmFsaWduLWFyKCkge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgZmxleC13cmFwOiB3cmFwO1xyXG59XHJcblxyXG4udmFsaWduLWFyLWxnKCkge1xyXG4gICAgLmxnLWJsb2NrKHtcclxuICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLnZhbGlnbi1hci1tZCgpIHtcclxuICAgIC5tZC1ibG9jayh7XHJcbiAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi52YWxpZ24tYXItc20oKSB7XHJcbiAgICAuc20tYmxvY2soe1xyXG4gICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIH0pO1xyXG59XHJcblxyXG4udmFsaWduLWFyLXhzKCkge1xyXG4gICAgLnhzLWJsb2NrKHtcclxuICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLnZhbGlnbi1hci14eHMoKSB7XHJcbiAgICAueHhzLWJsb2NrKHtcclxuICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9KTtcclxufVxyXG5cclxuXHJcbi52YWxpZ24tY2VudGVyICgpIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGZsZXgtd3JhcDogd3JhcDtcclxufVxyXG5cclxuLnZhbGlnbi1jZW50ZXItbGcgKCkge1xyXG4gICAgLmxnLWJsb2NrKHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIH0pO1xyXG59XHJcblxyXG4udmFsaWduLWNlbnRlci1tZCAoKSB7XHJcbiAgICAubWQtYmxvY2soe1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi52YWxpZ24tY2VudGVyLXNtICgpIHtcclxuICAgIC5zbS1ibG9jayh7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLnZhbGlnbi1jZW50ZXIteHMgKCkge1xyXG4gICAgLnhzLWJsb2NrKHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIH0pO1xyXG59XHJcblxyXG4udmFsaWduLWNlbnRlci14eHMgKCkge1xyXG4gICAgLnh4cy1ibG9jayh7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9KTtcclxufVxyXG5cclxuXHJcbi52YWxpZ24tc3RhcnQoKSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgZmxleC13cmFwOiB3cmFwO1xyXG59XHJcblxyXG4udmFsaWduLXN0YXJ0LWxnICgpIHtcclxuICAgIC5sZy1ibG9jayh7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi52YWxpZ24tc3RhcnQtbWQgKCkge1xyXG4gICAgLm1kLWJsb2NrKHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLnZhbGlnbi1zdGFydC1zbSAoKSB7XHJcbiAgICAuc20tYmxvY2soe1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIH0pO1xyXG59XHJcblxyXG4udmFsaWduLXN0YXJ0LXhzICgpIHtcclxuICAgIC54cy1ibG9jayh7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi52YWxpZ24tc3RhcnQteHhzICgpIHtcclxuICAgIC54eHMtYmxvY2soe1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIH0pO1xyXG59XHJcblxyXG5cclxuLnZhbGlnbi1lbmQgKCkge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbn1cclxuXHJcbi52YWxpZ24tZW5kLWxnICgpIHtcclxuICAgIC5sZy1ibG9jayh7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIH0pO1xyXG59XHJcblxyXG4udmFsaWduLWVuZC1tZCAoKSB7XHJcbiAgICAubWQtYmxvY2soe1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLnZhbGlnbi1lbmQtc20gKCkge1xyXG4gICAgLnNtLWJsb2NrKHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi52YWxpZ24tZW5kLXhzICgpIHtcclxuICAgIC54cy1ibG9jayh7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIH0pO1xyXG59XHJcblxyXG4udmFsaWduLWVuZC14eHMgKCkge1xyXG4gICAgLnh4cy1ibG9jayh7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIH0pO1xyXG59XHJcblxyXG5cclxuXHJcbi52YWxpZ24tY2VudGVyLWNvbCAoKSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgZmxleC13cmFwOiB3cmFwO1xyXG59XHJcblxyXG4udmFsaWduLWNlbnRlci1jb2wtbGcgKCkge1xyXG4gICAgLmxnLWJsb2NrKHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjs7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLnZhbGlnbi1jZW50ZXItY29sLW1kICgpIHtcclxuICAgIC5tZC1ibG9jayh7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47O1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi52YWxpZ24tY2VudGVyLWNvbC1zbSAoKSB7XHJcbiAgICAuc20tYmxvY2soe1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOztcclxuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIH0pO1xyXG59XHJcblxyXG4udmFsaWduLWNlbnRlci1jb2wteHMgKCkge1xyXG4gICAgLnhzLWJsb2NrKHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjs7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9KTtcclxufVxyXG5cclxuXHJcbi52YWxpZ24tY2VudGVyLWNvbC14eHMgKCkge1xyXG4gICAgLnh4cy1ibG9jayh7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47O1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcblxyXG5cclxuLnZhbGlnbi1jb2wtc3RhcnQgKCkge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgZmxleC13cmFwOiB3cmFwO1xyXG59XHJcblxyXG5cclxuLnZhbGlnbi1jb2wtc3RhcnQtbGcgKCkge1xyXG4gICAgLmxnLWJsb2NrKHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLnZhbGlnbi1jb2wtc3RhcnQtbWQgKCkge1xyXG4gICAgLm1kLWJsb2NrKHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLnZhbGlnbi1jb2wtc3RhcnQtc20gKCkge1xyXG4gICAgLnNtLWJsb2NrKHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLnZhbGlnbi1jb2wtc3RhcnQteHMgKCkge1xyXG4gICAgLnhzLWJsb2NrKHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLnZhbGlnbi1jb2wtc3RhcnQteHhzICgpIHtcclxuICAgIC54eHMtYmxvY2soe1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIH0pO1xyXG59XHJcblxyXG5cclxuXHJcbi52YWxpZ24tY29sLWVuZCAoKSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgZmxleC13cmFwOiB3cmFwO1xyXG59XHJcblxyXG4udmFsaWduLWNvbC1lbmQtbGcoKSB7XHJcbiAgICAubGctYmxvY2soe1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLnZhbGlnbi1jb2wtZW5kLW1kKCkge1xyXG4gICAgLm1kLWJsb2NrKHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi52YWxpZ24tY29sLWVuZC1zbSgpIHtcclxuICAgIC5zbS1ibG9jayh7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIH0pO1xyXG59XHJcblxyXG4udmFsaWduLWNvbC1lbmQteHMoKSB7XHJcbiAgICAueHMtYmxvY2soe1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLnZhbGlnbi1jb2wtZW5kLXh4cygpIHtcclxuICAgIC54eHMtYmxvY2soe1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9KTtcclxufVxyXG5cclxuXHJcblxyXG5cclxuLmFsaWduLWl0ZW1zLXN0YXJ0KCkge1xyXG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5hbGlnbi1pdGVtcy1zdGFydC1sZygpIHtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX2xnKXtcclxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydCAhaW1wb3J0YW50O1xyXG4gIH1cclxufVxyXG5cclxuLmFsaWduLWl0ZW1zLXN0YXJ0LW1kKCkge1xyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xyXG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0ICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4uYWxpZ24taXRlbXMtc3RhcnQtc20oKSB7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XHJcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQgIWltcG9ydGFudDtcclxuICB9XHJcbn1cclxuXHJcbi5hbGlnbi1pdGVtcy1zdGFydC14cygpIHtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3hzKXtcclxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydCAhaW1wb3J0YW50O1xyXG4gIH1cclxufVxyXG5cclxuLmFsaWduLWl0ZW1zLXN0YXJ0LXh4cygpIHtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3h4cyl7XHJcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQgIWltcG9ydGFudDtcclxuICB9XHJcbn1cclxuXHJcbi5hbGlnbi1pdGVtcy1lbmQoKSB7XHJcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5hbGlnbi1pdGVtcy1lbmQtbGcoKSB7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19sZyl7XHJcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4uYWxpZ24taXRlbXMtZW5kLW1kKCkge1xyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xyXG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZCAhaW1wb3J0YW50O1xyXG4gIH1cclxufVxyXG5cclxuLmFsaWduLWl0ZW1zLWVuZC1zbSgpIHtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3NtKXtcclxuICBhbGlnbi1pdGVtczogZmxleC1lbmQgIWltcG9ydGFudDtcclxuICB9XHJcbn1cclxuXHJcbi5hbGlnbi1pdGVtcy1lbmQteHMoKSB7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha194cyl7XHJcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4uYWxpZ24taXRlbXMtZW5kLXh4cygpIHtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3h4cyl7XHJcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4uYWxpZ24taXRlbXMtY2VudGVyKCkge1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXIgIWltcG9ydGFudDtcclxufVxyXG5cclxuLmFsaWduLWl0ZW1zLWNlbnRlci1sZygpIHtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX2xnKXtcclxuICBhbGlnbi1pdGVtczogY2VudGVyICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4uYWxpZ24taXRlbXMtY2VudGVyLW1kKCkge1xyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXIgIWltcG9ydGFudDtcclxuICB9XHJcbn1cclxuXHJcbi5hbGlnbi1pdGVtcy1jZW50ZXItc20oKSB7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlciAhaW1wb3J0YW50O1xyXG4gIH1cclxufVxyXG5cclxuLmFsaWduLWl0ZW1zLWNlbnRlci14cygpIHtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3hzKXtcclxuICBhbGlnbi1pdGVtczogY2VudGVyICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4uYWxpZ24taXRlbXMtY2VudGVyLXh4cygpIHtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3h4cyl7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlciAhaW1wb3J0YW50O1xyXG4gIH1cclxufVxyXG5cclxuLmFsaWduLWl0ZW1zLWJhc2VsaW5lKCkge1xyXG4gIGFsaWduLWl0ZW1zOiBiYXNlbGluZSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uYWxpZ24taXRlbXMtYmFzZWxpbmUtbGcoKSB7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19sZyl7XHJcbiAgYWxpZ24taXRlbXM6IGJhc2VsaW5lICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4uYWxpZ24taXRlbXMtYmFzZWxpbmUtbWQoKSB7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19tZCl7XHJcbiAgYWxpZ24taXRlbXM6IGJhc2VsaW5lICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4uYWxpZ24taXRlbXMtYmFzZWxpbmUtc20oKSB7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XHJcbiAgYWxpZ24taXRlbXM6IGJhc2VsaW5lICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4uYWxpZ24taXRlbXMtYmFzZWxpbmUteHMoKSB7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfeHMpe1xyXG4gIGFsaWduLWl0ZW1zOiBiYXNlbGluZSAhaW1wb3J0YW50O1xyXG4gIH1cclxufVxyXG5cclxuLmFsaWduLWl0ZW1zLWJhc2VsaW5lLXh4cygpIHtcclxuICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfeHhzKSB7XHJcbiAgICAgICAgIGFsaWduLWl0ZW1zOiBiYXNlbGluZSAhaW1wb3J0YW50O1xyXG4gICAgIH1cclxufVxyXG5cclxuLmFsaWduLWl0ZW1zLXN0cmV0Y2goKSB7XHJcbiAgICBhbGlnbi1pdGVtczogc3RyZXRjaCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uYWxpZ24taXRlbXMtc3RyZXRjaC1sZygpIHtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19sZykge1xyXG4gICAgYWxpZ24taXRlbXM6IHN0cmV0Y2ggIWltcG9ydGFudDtcclxuICAgIH1cclxufVxyXG5cclxuLmFsaWduLWl0ZW1zLXN0cmV0Y2gtbWQoKSB7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpIHtcclxuICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5hbGlnbi1pdGVtcy1zdHJldGNoLXNtKCkge1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3NtKSB7XHJcbiAgICBhbGlnbi1pdGVtczogc3RyZXRjaCAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG59XHJcblxyXG4uYWxpZ24taXRlbXMtc3RyZXRjaC14cygpIHtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha194cykge1xyXG4gICAgYWxpZ24taXRlbXM6IHN0cmV0Y2ggIWltcG9ydGFudDtcclxuICAgIH1cclxufVxyXG5cclxuLmFsaWduLWl0ZW1zLXN0cmV0Y2gteHhzKCkge1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3h4cykge1xyXG4gICAgYWxpZ24taXRlbXM6IHN0cmV0Y2ggIWltcG9ydGFudDtcclxuICAgIH1cclxufVxyXG5cclxuLmp1c3RpZnktc3RhcnQoKSB7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbn1cclxuXHJcbi5qdXN0aWZ5LXN0YXJ0LWxnKCkge1xyXG4gICAgLmxnLWJsb2NrKHtcclxuICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICAgIH0pO1xyXG59XHJcblxyXG4uanVzdGlmeS1zdGFydC1tZCgpIHtcclxuICAgIC5tZC1ibG9jayh7XHJcbiAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICB9KTtcclxufVxyXG4uanVzdGlmeS1zdGFydC1zbSgpIHtcclxuICAgIC5zbS1ibG9jayh7XHJcbiAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLmp1c3RpZnktc3RhcnQteHMoKSB7XHJcbiAgICAueHMtYmxvY2soe1xyXG4gICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi5qdXN0aWZ5LXN0YXJ0LXh4cygpIHtcclxuICAgIC54eHMtYmxvY2soe1xyXG4gICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi5qdXN0aWZ5LWVuZCgpIHtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbn1cclxuXHJcbi5qdXN0aWZ5LWVuZC1sZygpIHtcclxuICAgIC5sZy1ibG9jayh7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICAgIH0pO1xyXG59XHJcblxyXG4uanVzdGlmeS1lbmQtbWQoKSB7XHJcbiAgICAubWQtYmxvY2soe1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgICB9KTtcclxufVxyXG4uanVzdGlmeS1lbmQtc20oKSB7XHJcbiAgICAuc20tYmxvY2soe1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLmp1c3RpZnktZW5kLXhzKCkge1xyXG4gICAgLnhzLWJsb2NrKHtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi5qdXN0aWZ5LWVuZC14eHMoKSB7XHJcbiAgICAueHhzLWJsb2NrKHtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi5qdXN0aWZ5LWNlbnRlcigpIHtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG4uanVzdGlmeS1jZW50ZXItbGcoKSB7XHJcbiAgICAubGctYmxvY2soe1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi5qdXN0aWZ5LWNlbnRlci1tZCgpIHtcclxuICAgIC5tZC1ibG9jayh7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICB9KTtcclxufVxyXG4uanVzdGlmeS1jZW50ZXItc20oKSB7XHJcbiAgICAuc20tYmxvY2soe1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi5qdXN0aWZ5LWNlbnRlci14cygpIHtcclxuICAgIC54cy1ibG9jayh7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLmp1c3RpZnktY2VudGVyLXh4cygpIHtcclxuICAgIC54eHMtYmxvY2soe1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi5qdXN0aWZ5LWJldCgpIHtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuXHJcbn1cclxuXHJcbi5qdXN0aWZ5LWJldC1sZygpIHtcclxuICAgIC5sZy1ibG9jayh7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi5qdXN0aWZ5LWJldC1tZCgpIHtcclxuICAgIC5tZC1ibG9jayh7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgfSk7XHJcbn1cclxuLmp1c3RpZnktYmV0LXNtKCkge1xyXG4gICAgLnNtLWJsb2NrKHtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICB9KTtcclxufVxyXG5cclxuLmp1c3RpZnktYmV0LXhzKCkge1xyXG4gICAgLnhzLWJsb2NrKHtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICB9KTtcclxufVxyXG5cclxuLmp1c3RpZnktYmV0LXh4cygpIHtcclxuICAgIC54eHMtYmxvY2soe1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIH0pO1xyXG59XHJcblxyXG5cclxuLmp1c3RpZnktYXJyKCkge1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbn1cclxuXHJcbi5qdXN0aWZ5LWFyci1sZygpIHtcclxuICAgIC5sZy1ibG9jayh7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLmp1c3RpZnktYXJyLW1kKCkge1xyXG4gICAgLm1kLWJsb2NrKHtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICAgIH0pO1xyXG59XHJcblxyXG4uanVzdGlmeS1hcnItc20oKSB7XHJcbiAgICAuc20tYmxvY2soe1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcblxyXG4uanVzdGlmeS1hcnIteHMoKSB7XHJcbiAgICAueHMtYmxvY2soe1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcblxyXG4uanVzdGlmeS1hcnIteHhzKCkge1xyXG4gICAgLnh4cy1ibG9jayh7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLnotZGVwdGgtMCgpIHtcclxuICAgIGJveC1zaGFkb3c6IG5vbmUgO1xyXG59XHJcblxyXG4uei1kZXB0aC0xKCkge1xyXG4gIC13ZWJraXQtYm94LXNoYWRvdzogMCAycHggMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjE0KSwgMCAzcHggMXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxcHggNXB4IDAgcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG4gICAgICAgICAgYm94LXNoYWRvdzogMCAycHggMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjE0KSwgMCAzcHggMXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxcHggNXB4IDAgcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG59XHJcblxyXG4uei1kZXB0aC0xLWhhbGYoKXtcclxuICAtd2Via2l0LWJveC1zaGFkb3c6IDAgM3B4IDNweCAwIHJnYmEoMCwgMCwgMCwgMC4xNCksIDAgMXB4IDdweCAwIHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgM3B4IDFweCAtMXB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICAgICAgICAgIGJveC1zaGFkb3c6IDAgM3B4IDNweCAwIHJnYmEoMCwgMCwgMCwgMC4xNCksIDAgMXB4IDdweCAwIHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgM3B4IDFweCAtMXB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcclxufVxyXG5cclxuLyogNmRwIGVsZXZhdGlvbiBtb2RpZmllZCovXHJcbi56LWRlcHRoLTIoKSB7XHJcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDRweCA1cHggMCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDFweCAxMHB4IDAgcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAycHggNHB4IC0xcHggcmdiYSgwLCAwLCAwLCAwLjMpO1xyXG4gICAgICAgICAgYm94LXNoYWRvdzogMCA0cHggNXB4IDAgcmdiYSgwLCAwLCAwLCAwLjE0KSwgMCAxcHggMTBweCAwIHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMnB4IDRweCAtMXB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcclxufVxyXG5cclxuLyogMTJkcCBlbGV2YXRpb24gbW9kaWZpZWQqL1xyXG4uei1kZXB0aC0zKCkge1xyXG4gIC13ZWJraXQtYm94LXNoYWRvdzogMCA4cHggMTdweCAycHggcmdiYSgwLCAwLCAwLCAwLjE0KSwgMCAzcHggMTRweCAycHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCA1cHggNXB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG4gICAgICAgICAgYm94LXNoYWRvdzogMCA4cHggMTdweCAycHggcmdiYSgwLCAwLCAwLCAwLjE0KSwgMCAzcHggMTRweCAycHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCA1cHggNXB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG59XHJcblxyXG4vKiAxNmRwIGVsZXZhdGlvbiAqL1xyXG4uei1kZXB0aC00KCkge1xyXG4gIC13ZWJraXQtYm94LXNoYWRvdzogMCAxNnB4IDI0cHggMnB4IHJnYmEoMCwgMCwgMCwgMC4xNCksIDAgNnB4IDMwcHggNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgOHB4IDEwcHggLTdweCByZ2JhKDAsIDAsIDAsIDAuMik7XHJcbiAgICAgICAgICBib3gtc2hhZG93OiAwIDE2cHggMjRweCAycHggcmdiYSgwLCAwLCAwLCAwLjE0KSwgMCA2cHggMzBweCA1cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCA4cHggMTBweCAtN3B4IHJnYmEoMCwgMCwgMCwgMC4yKTtcclxufVxyXG5cclxuLyogMjRkcCBlbGV2YXRpb24gKi9cclxuLnotZGVwdGgtNSgpIHtcclxuICAtd2Via2l0LWJveC1zaGFkb3c6IDAgMjRweCAzOHB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDlweCA0NnB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDExcHggMTVweCAtN3B4IHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICAgICAgICAgIGJveC1zaGFkb3c6IDAgMjRweCAzOHB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDlweCA0NnB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDExcHggMTVweCAtN3B4IHJnYmEoMCwgMCwgMCwgMC4yKTtcclxufVxyXG5cclxuXHJcbi5ob3Zlci1ib3gtc2hhZG93KCl7XHJcbiAgICBib3gtc2hhZG93OiAwIDEycHggMTZweCAwIHJnYmEoMCwwLDAsMC4yNCksIDAgMTdweCA1MHB4IDAgcmdiYSgwLDAsMCwwLjE5KTtcclxufVxyXG5cclxuLmlucHV0KCkge31cclxuLmlucHV0KEB2YWx1ZTogMXB4KSB7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgcGFkZGluZzogOHB4O1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBib3JkZXItYm90dG9tOiBAdmFsdWUgc29saWQgI2NjYztcclxuICAgIHdpZHRoOiAxMDAlO1xyXG5cclxuICAgICY6Zm9jdXMge1xyXG4gICAgICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgfVxyXG59XHJcblxyXG4ucmFkaW8taW5saW5lKCl7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBwYWRkaW5nLXRvcDogNXB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbn1cclxuXHJcblxyXG4ucmFkaW8oKSB7XHJcbiAgd2lkdGg6IDI0cHg7XHJcbiAgaGVpZ2h0OiAyNHB4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB0b3A6IDZweDtcclxufVxyXG5cclxuXHJcbi5jaGVja2JveC1pbmxpbmUoKSB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBwYWRkaW5nLXRvcDogNXB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbn1cclxuXHJcbi5pbnB1dC1taW5pKCkge1xyXG4gICAgd2lkdGg6IDYwcHg7XHJcbn1cclxuXHJcbi5pbnB1dC1zbWFsbCgpIHtcclxuICAgIHdpZHRoOiA5MHB4O1xyXG59XHJcblxyXG4uaW5wdXQtbWVkaXVtKCkge1xyXG4gICAgd2lkdGg6IDE1MHB4O1xyXG59XHJcblxyXG4uaW5wdXQtbGFyZ2UoKSB7XHJcbiAgICB3aWR0aDogMjEwcHg7XHJcbn1cclxuXHJcbi5pbnB1dC14bGFyZ2UoKSB7XHJcbiAgICB3aWR0aDogMjcwcHg7XHJcbn1cclxuXHJcbi5pbnB1dC14eGxhcmdlKCkge1xyXG4gICAgd2lkdGg6IDUzMHB4O1xyXG59XHJcblxyXG4uc2VsZWN0KCkge1xyXG4gIHBhZGRpbmc6IDlweCAwO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2NjYztcclxufVxyXG5cclxuXHJcbi5jaGVjaygpIHtcclxuICB3aWR0aDogMjRweDtcclxuICBoZWlnaHQ6IDI0cHg7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRvcDogNnB4O1xyXG59XHJcblxyXG5cclxuXHJcbi5yZXNwb25zaXZlKCkge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG92ZXJmbG93LXg6IGF1dG87XHJcbn1cclxuXHJcbi5yZXNwb25zaXZlLWltZygpe1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxuICBtYXgtaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4ucmVzcG9uc2l2ZS12aWRlbygpIHtcclxuICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG59XHJcblxyXG4uYm9yZGVyLTAoKSB7XHJcbiAgYm9yZGVyOiAwIDtcclxufVxyXG5cclxuLmJvcmRlcigpIHtcclxuICBib3JkZXI6IDEgc29saWQgI2NjYyA7XHJcbn1cclxuXHJcbi5ib3JkZXIoQHZhbHVlOiAxLCBAYmdjOiAjY2NjICkge1xyXG4gICAgQHJlbVZhbHVlOiAoQHZhbHVlL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAdmFsdWU7XHJcbiAgYm9yZGVyOiB+XCJAe3B4VmFsdWV9cHhcIiBzb2xpZCBAYmdjO1xyXG4gIGJvcmRlcjogflwiQHtyZW1WYWx1ZX1yZW1cIiBzb2xpZCBAYmdjO1xyXG59XHJcblxyXG5cclxuLmJvcmRlci10b3AoKSB7XHJcbiAgYm9yZGVyLXRvcDogQHZhbHVlIHNvbGlkICNjY2MgO1xyXG59XHJcblxyXG4uYm9yZGVyLXRvcCAoQHZhbHVlOiAxLCBAYmdjOiAjY2NjICkge1xyXG4gICAgQHJlbVZhbHVlOiAoQHZhbHVlL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAdmFsdWU7XHJcbiAgYm9yZGVyLXRvcDogflwiQHtweFZhbHVlfXB4XCIgc29saWQgQGJnYztcclxuICBib3JkZXItdG9wOiB+XCJAe3JlbVZhbHVlfXJlbVwiIHNvbGlkIEBiZ2M7XHJcbn1cclxuXHJcblxyXG4uYm9yZGVyLWJvdHRvbSgpIHtcclxuICBib3JkZXItYm90dG9tOiBAdmFsdWUgc29saWQgI2NjYyA7XHJcbn1cclxuXHJcbi5ib3JkZXItYm90dG9tIChAdmFsdWU6IDEsIEBiZ2M6ICNjY2MgKSB7XHJcbiAgICBAcmVtVmFsdWU6IChAdmFsdWUvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEB2YWx1ZTtcclxuICBib3JkZXItYm90dG9tOiB+XCJAe3B4VmFsdWV9cHhcIiBzb2xpZCBAYmdjO1xyXG4gIGJvcmRlci1ib3R0b206IH5cIkB7cmVtVmFsdWV9cmVtXCIgc29saWQgQGJnYztcclxufVxyXG5cclxuXHJcbi5ib3JkZXItbGVmdCgpIHtcclxuICBib3JkZXItbGVmdDogQHZhbHVlIHNvbGlkICNjY2MgO1xyXG59XHJcblxyXG4uYm9yZGVyLWxlZnQgKEB2YWx1ZTogMSwgQGJnYzogI2NjYyApIHtcclxuICAgIEByZW1WYWx1ZTogKEB2YWx1ZS9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHZhbHVlO1xyXG4gIGJvcmRlci1sZWZ0OiB+XCJAe3B4VmFsdWV9cHhcIiBzb2xpZCBAYmdjO1xyXG4gIGJvcmRlci1sZWZ0OiB+XCJAe3JlbVZhbHVlfXJlbVwiIHNvbGlkIEBiZ2M7XHJcbn1cclxuXHJcblxyXG4uYm9yZGVyLXJpZ2h0KCkge1xyXG4gIGJvcmRlci1yaWdodDogQHZhbHVlIHNvbGlkICNjY2MgO1xyXG59XHJcblxyXG4uYm9yZGVyLXJpZ2h0IChAdmFsdWU6IDEsIEBiZ2M6ICNjY2MgKSB7XHJcbiAgICBAcmVtVmFsdWU6IChAdmFsdWUvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEB2YWx1ZTtcclxuICBib3JkZXItcmlnaHQ6ICB+XCJAe3B4VmFsdWV9cHhcIiBzb2xpZCBAYmdjO1xyXG4gIGJvcmRlci1yaWdodDogIH5cIkB7cmVtVmFsdWV9cmVtXCIgc29saWQgQGJnYztcclxufVxyXG5cclxuXHJcbi50b3BiYXIoKSB7XHJcbiAgYm9yZGVyLXRvcDogQHdpZHRoIHNvbGlkICNjY2MgO1xyXG59XHJcblxyXG4udG9wYmFyIChAdmFsdWU6IDEsIEBiZ2M6ICNjY2MgKSB7XHJcbiAgICBAcmVtVmFsdWU6IChAdmFsdWUvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEB2YWx1ZTtcclxuICBib3JkZXItdG9wOiB+XCJAe3B4VmFsdWV9cHhcIiBzb2xpZCBAYmdjO1xyXG4gIGJvcmRlci10b3A6IH5cIkB7cmVtVmFsdWV9cmVtXCIgc29saWQgQGJnYztcclxufVxyXG5cclxuXHJcbi50b3BiYXItbm9uZSAoQHZhbHVlOiAxLCBAYmdjOiB0cmFuc3BhcmVudCApIHtcclxuICAgIEByZW1WYWx1ZTogKEB2YWx1ZS9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHZhbHVlO1xyXG4gIGJvcmRlci10b3A6IH5cIkB7cHhWYWx1ZX1weFwiIHNvbGlkIEBiZ2M7XHJcbiAgYm9yZGVyLXRvcDogflwiQHtyZW1WYWx1ZX1yZW1cIiBzb2xpZCBAYmdjO1xyXG59XHJcblxyXG4uYm90dG9tYmFyKCkge1xyXG4gIGJvcmRlci1ib3R0b206IEB3aWR0aCBzb2xpZCAjY2NjIDtcclxufVxyXG5cclxuXHJcbi5ib3R0b21iYXIgKEB2YWx1ZTogNiwgQGJnYzogI2NjYykge1xyXG4gICAgQHJlbVZhbHVlOiAoQHZhbHVlL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAdmFsdWU7XHJcbiAgYm9yZGVyLWJvdHRvbTogflwiQHtweFZhbHVlfXB4XCIgc29saWQgQGJnYztcclxuICBib3JkZXItYm90dG9tOiB+XCJAe3JlbVZhbHVlfXJlbVwiIHNvbGlkIEBiZ2M7XHJcbn1cclxuXHJcblxyXG4uYm90dG9tYmFyLWRpYi1taWQoKSB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogQHdpZHRoIHNvbGlkICNjY2MgO1xyXG59XHJcblxyXG4uYm90dG9tYmFyLWRpYi1taWQgKEB2YWx1ZTogNiwgQGJnYzojY2NjKSB7XHJcbiAgICBAcmVtVmFsdWU6IChAdmFsdWUvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEB2YWx1ZTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICBib3JkZXItYm90dG9tOiB+XCJAe3B4VmFsdWV9cHhcIiBzb2xpZCBAYmdjO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogflwiQHtyZW1WYWx1ZX1yZW1cIiBzb2xpZCBAYmdjO1xyXG59XHJcblxyXG4uYm90dG9tYmFyLW5vbmUoKSB7XHJcbiAgYm9yZGVyLWJvdHRvbTogQHdpZHRoIHNvbGlkIHRyYW5zcGFyZW50IDtcclxufVxyXG5cclxuLmJvdHRvbWJhci1ub25lIChAdmFsdWU6IDYsIEBiZ2M6dHJhbnNwYXJlbnQpIHtcclxuICAgIEByZW1WYWx1ZTogKEB2YWx1ZS9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHZhbHVlO1xyXG4gIGJvcmRlci1ib3R0b206IH5cIkB7cHhWYWx1ZX1weFwiIHNvbGlkIEBiZ2M7XHJcbiAgYm9yZGVyLWJvdHRvbTogflwiQHtyZW1WYWx1ZX1yZW1cIiBzb2xpZCBAYmdjO1xyXG59XHJcblxyXG4ubGVmdGJhcigpIHtcclxuICBib3JkZXItbGVmdDogQHdpZHRoIHNvbGlkICNjY2MgO1xyXG59XHJcblxyXG4ubGVmdGJhciAoQHZhbHVlOiA2LCBAYmdjOiNjY2MpIHtcclxuICAgIEByZW1WYWx1ZTogKEB2YWx1ZS9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHZhbHVlO1xyXG4gIGJvcmRlci1sZWZ0OiB+XCJAe3B4VmFsdWV9cHhcIiBzb2xpZCBAYmdjO1xyXG4gIGJvcmRlci1sZWZ0OiB+XCJAe3JlbVZhbHVlfXJlbVwiIHNvbGlkIEBiZ2M7XHJcbn1cclxuXHJcbi5sZWZ0YmFyLW5vbmUgKEB2YWx1ZTogNiwgQGJnYzp0cmFuc3BhcmVudCkge1xyXG4gICAgQHJlbVZhbHVlOiAoQHZhbHVlL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAdmFsdWU7XHJcbiAgYm9yZGVyLWxlZnQ6IH5cIkB7cHhWYWx1ZX1weFwiIHNvbGlkIEBiZ2M7XHJcbiAgYm9yZGVyLWxlZnQ6IH5cIkB7cmVtVmFsdWV9cmVtXCIgc29saWQgQGJnYztcclxufVxyXG5cclxuLnJpZ2h0YmFyKCkge1xyXG4gIGJvcmRlci1yaWdodDogQHdpZHRoIHNvbGlkICNjY2MgO1xyXG59XHJcblxyXG4ucmlnaHRiYXIgKEB2YWx1ZTogNiwgQGJnYzojY2NjKSB7XHJcbiAgICBAcmVtVmFsdWU6IChAdmFsdWUvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEB2YWx1ZTtcclxuICBib3JkZXItcmlnaHQ6IH5cIkB7cHhWYWx1ZX1weFwiIHNvbGlkIEBiZ2M7XHJcbiAgYm9yZGVyLXJpZ2h0OiB+XCJAe3JlbVZhbHVlfXJlbVwiIHNvbGlkIEBiZ2M7XHJcbn1cclxuXHJcblxyXG4ucmlnaHRiYXItbm9uZSgpIHtcclxuICBib3JkZXItcmlnaHQ6IEB3aWR0aCBzb2xpZCB0cmFuc3BhcmVudCA7XHJcbn1cclxuXHJcbi5yaWdodGJhci1ub25lIChAdmFsdWU6IDYsIEBiZ2M6dHJhbnNwYXJlbnQpIHtcclxuICAgIEByZW1WYWx1ZTogKEB2YWx1ZS9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHZhbHVlO1xyXG4gIGJvcmRlci1yaWdodDogflwiQHtweFZhbHVlfXB4XCIgc29saWQgQGJnYztcclxuICBib3JkZXItcmlnaHQ6IH5cIkB7cmVtVmFsdWV9cmVtXCIgc29saWQgQGJnYztcclxufVxyXG5cclxuLmJvcmRlci1jb2xvcigpe1xyXG4gICBib3JkZXItY29sb3I6IEBjb2xvcjtcclxufVxyXG5cclxuLmJvcmRlci1jb2xvcihAY29sb3Ipe1xyXG4gICBib3JkZXItY29sb3I6IEBjb2xvcjtcclxufVxyXG5cclxuLmhvdmVyLWJvcmRlci1jb2xvcigpe1xyXG4gICY6aG92ZXJ7XHJcbiAgYm9yZGVyLWNvbG9yOiNmZmMxMDc7XHJcbn1cclxufVxyXG5cclxuLmhvdmVyLWJvcmRlci1jb2xvcihAY29sb3I6I2ZmYzEwNyl7XHJcbiAgJjpob3ZlcntcclxuICBib3JkZXItY29sb3I6IEBjb2xvcjtcclxufVxyXG59XHJcblxyXG5cclxuLmNvbnRhaW5lci1teSgpIHtcclxuICBwYWRkaW5nOiAwLjAxZW0gMTZweDtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIC5jb250YWluZXJ7XHJcbiAgICAmOmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICBkaXNwbGF5OiB0YWJsZTtcclxuICAgIGNsZWFyOiBib3RoO1xyXG59XHJcbn1cclxuXHJcbi5jb250YWluZXIge1xyXG4gICAgJjpiZWZvcmUge1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIGRpc3BsYXk6IHRhYmxlO1xyXG4gICAgY2xlYXI6IGJvdGg7XHJcbn1cclxufVxyXG59XHJcblxyXG4ucGFuZWwoKSB7XHJcbiAgcGFkZGluZzogMC4wMWVtIDE2cHg7XHJcbn1cclxuXHJcbi5wYW5lbCgpIHtcclxuICBtYXJnaW4tdG9wOiAxNnB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XHJcbn1cclxuXHJcbi5jYXJkKCkge1xyXG4gIGJveC1zaGFkb3c6IDAgMnB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4xNiksIDAgMnB4IDEwcHggMCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xyXG59XHJcblxyXG4uY2FyZC0yKCkge1xyXG4gIGJveC1zaGFkb3c6IDAgMnB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4xNiksIDAgMnB4IDEwcHggMCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xyXG59XHJcblxyXG4uY2FyZC00KCkge1xyXG4gIGJveC1zaGFkb3c6IDAgNHB4IDEwcHggMCByZ2JhKDAsIDAsIDAsIDAuMiksIDAgNHB4IDIwcHggMCByZ2JhKDAsIDAsIDAsIDAuMTkpO1xyXG59XHJcblxyXG4uY2FyZC02KCkge1xyXG4gIGJveC1zaGFkb3c6IDAgNnB4IDE1cHggMCByZ2JhKDAsIDAsIDAsIDAuMiksIDAgNnB4IDMwcHggMCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xyXG59XHJcblxyXG4uY2FyZC04KCkge1xyXG4gIGJveC1zaGFkb3c6IDAgOHB4IDI1cHggMCByZ2JhKDAsIDAsIDAsIDAuMiksIDAgOHB4IDUwcHggMCByZ2JhKDAsIDAsIDAsIDAuMzUpO1xyXG59XHJcblxyXG5cclxuLmRpc3BsYXktcG9zaXRpb24oQHBvc2l0aW9uOiBhYnNvbHV0ZSkge1xyXG4gICAgcG9zaXRpb246IEBwb3NpdGlvbjtcclxufVxyXG5cclxuLmRpc3BsYXktY29udGFpbmVyKCkge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG5cclxuLmRpc3BsYXktdG9wbGVmdChAcG9zaXRpb246IGFic29sdXRlKSB7XHJcbiAgICBwb3NpdGlvbjogQHBvc2l0aW9uO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHRvcDogMDtcclxufVxyXG5cclxuXHJcbi5kaXNwbGF5LXRvcHJpZ2h0KEBwb3NpdGlvbjogYWJzb2x1dGUpIHtcclxuICAgIHBvc2l0aW9uOiBAcG9zaXRpb247XHJcbiAgICByaWdodDogMDtcclxuICAgIHRvcDogMDtcclxufVxyXG5cclxuLmRpc3BsYXktYm90dG9tbGVmdChAcG9zaXRpb246IGFic29sdXRlKSB7XHJcbiAgICBwb3NpdGlvbjogQHBvc2l0aW9uO1xyXG4gICAgbGVmdDogMDtcclxuICAgIGJvdHRvbTogMDtcclxufVxyXG5cclxuLmRpc3BsYXktYm90dG9tcmlnaHQoQHBvc2l0aW9uOiBhYnNvbHV0ZSkge1xyXG4gICAgcG9zaXRpb246IEBwb3NpdGlvbjtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG59XHJcblxyXG4uZGlzcGxheS1taWRkbGUoQHBvc2l0aW9uOiBhYnNvbHV0ZSkge1xyXG4gICAgcG9zaXRpb246IEBwb3NpdGlvbjtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbn1cclxuXHJcbi5kaXNwbGF5LWxlZnQoQHBvc2l0aW9uOiBhYnNvbHV0ZSkge1xyXG4gICAgcG9zaXRpb246IEBwb3NpdGlvbjtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgbGVmdDogMCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwJSwgLTUwJSk7XHJcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCUsIC01MCUpO1xyXG59XHJcblxyXG4uZGlzcGxheS1yaWdodChAcG9zaXRpb246IGFic29sdXRlKSB7XHJcbiAgICBwb3NpdGlvbjogQHBvc2l0aW9uO1xyXG4gICAgdG9wOiA1MCU7XHJcbiAgICByaWdodDogMCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwJSwgLTUwJSk7XHJcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCUsIC01MCUpO1xyXG59XHJcblxyXG4uZGlzcGxheS10b3BtaWRkbGUoQHBvc2l0aW9uOiBhYnNvbHV0ZSkge1xyXG4gICAgcG9zaXRpb246IEBwb3NpdGlvbjtcclxuICAgIGxlZnQ6IDUwJTtcclxuICAgIHRvcDogMDtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIDAlKTtcclxuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAwJSk7XHJcbn1cclxuXHJcbi5kaXNwbGF5LWJvdHRvbW1pZGRsZShAcG9zaXRpb246IGFic29sdXRlKSB7XHJcbiAgICBwb3NpdGlvbjogQHBvc2l0aW9uO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMCUpO1xyXG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIDAlKTtcclxufVxyXG5cclxuXHJcbi5kaXNwbGF5LWNlbnRlcmVyLVhZKEBYOjUwIDtAWTo1MCl7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBsZWZ0OiBAWCArIDAlO1xyXG4gICAgdG9wOiAgQFkgKyAwJTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg1MCUpO1xyXG59XHJcblxyXG4uZGlzcGxheS1jZW50ZXJlci1ZKEBZOjUwKXtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogQFkgKyAwJTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg1MCUpO1xyXG59XHJcblxyXG4uZGlzcGxheS1jZW50ZXJlci1YKEBYOjUwKXtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6IEBYICsgMCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNTAlKTtcclxufVxyXG5cclxuXHJcbi5yZWwoKSB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcblxyXG4udG9wKCkge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICB6LWluZGV4OiAxO1xyXG59XHJcblxyXG4uYm90dG9tKCkge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICB6LWluZGV4OiAxO1xyXG59XHJcblxyXG4udG9wKCkge1xyXG4gICAgdG9wOiAwO1xyXG59XHJcblxyXG4uYm90dG9tKCkge1xyXG4gICAgYm90dG9tOiAwO1xyXG59XHJcblxyXG5cclxuLm9wYWNpdHktbWF4KCl7XHJcbiAgb3BhY2l0eTogMC4yNTtcclxufVxyXG5cclxuLm9wYWNpdHktbWluKCl7XHJcbiAgb3BhY2l0eTogMC43NTtcclxufVxyXG5cclxuLm9wYWNpdHktb2ZmKCl7XHJcbiAgIG9wYWNpdHk6IDE7XHJcbn1cclxuXHJcbi5ob3Zlci1vcGFjaXR5LW9mZigpe1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIC4zcyBlYXNlLWluO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICAgICY6aG92ZXJ7XHJcbiAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5tYXJnaW4tWSgpIHt9XHJcblxyXG4ubWFyZ2luLVkoQG1hcmdpbikge1xyXG4gICAgQHJlbVZhbHVlOiAoQG1hcmdpbi9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQG1hcmdpbjtcclxuICAgIG1hcmdpbi10b3A6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgbWFyZ2luLXRvcDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxuICAgIG1hcmdpbi1ib3R0b206IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG5cclxuLm1hcmdpbi1ZLWxnKCBAbWFyZ2luKSB7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbGcpIHtcclxuICAgICAgICBAcmVtVmFsdWU6IChAbWFyZ2luL0Bmb250QmFzZVB4KTtcclxuICAgICAgICBAcHhWYWx1ZTogQG1hcmdpbjtcclxuICAgICAgICBtYXJnaW4tdG9wOiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgICAgICBtYXJnaW4tdG9wOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5tYXJnaW4tWS1tZChAbWFyZ2luKSB7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpIHtcclxuICAgICAgICBAcmVtVmFsdWU6IChAbWFyZ2luL0Bmb250QmFzZVB4KTtcclxuICAgICAgICBAcHhWYWx1ZTogQG1hcmdpbjtcclxuICAgICAgICBtYXJnaW4tdG9wOiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgICAgICBtYXJnaW4tdG9wOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5tYXJnaW4tWS1zbShAbWFyZ2luKSB7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfc20pe1xyXG4gICAgICAgIEByZW1WYWx1ZTogKEBtYXJnaW4vQGZvbnRCYXNlUHgpO1xyXG4gICAgICAgIEBweFZhbHVlOiBAbWFyZ2luO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxuICAgIH1cclxufVxyXG5cclxuLm1hcmdpbi1ZLXhzKEBtYXJnaW4pIHtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3hzKXtcclxuICAgIEByZW1WYWx1ZTogKEBtYXJnaW4vQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBtYXJnaW47XHJcbiAgICBtYXJnaW4tdG9wOiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIG1hcmdpbi10b3A6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIG1hcmdpbi1ib3R0b206IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5tYXJnaW4tWS14eHMoQG1hcmdpbikge1xyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfeHhzKXtcclxuICAgIEByZW1WYWx1ZTogKEBtYXJnaW4vQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBtYXJnaW47XHJcbiAgICBtYXJnaW4tdG9wOiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIG1hcmdpbi10b3A6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIG1hcmdpbi1ib3R0b206IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5tYXJnaW4tdG9wKEBtYXJnaW4pIHtcclxuICAgIEByZW1WYWx1ZTogKEBtYXJnaW4vQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBtYXJnaW47XHJcbiAgICBtYXJnaW4tdG9wOiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIG1hcmdpbi10b3A6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxuXHJcbi5tYXJnaW4tdG9wLWxnKEBtYXJnaW4pIHtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX2xnKXtcclxuICAgIEByZW1WYWx1ZTogKEBtYXJnaW4vQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBtYXJnaW47XHJcbiAgICBtYXJnaW4tdG9wOiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIG1hcmdpbi10b3A6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxufVxyXG5cclxuLm1hcmdpbi10b3AtbWQoQG1hcmdpbikge1xyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xyXG4gICAgQHJlbVZhbHVlOiAoQG1hcmdpbi9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQG1hcmdpbjtcclxuICAgIG1hcmdpbi10b3A6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgbWFyZ2luLXRvcDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG59XHJcblxyXG4ubWFyZ2luLXRvcC1zbShAbWFyZ2luKSB7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XHJcbiAgICBAcmVtVmFsdWU6IChAbWFyZ2luL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAbWFyZ2luO1xyXG4gICAgbWFyZ2luLXRvcDogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBtYXJnaW4tdG9wOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcbn1cclxuXHJcbi5tYXJnaW4tdG9wLXhzKEBtYXJnaW4pIHtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3hzKXtcclxuICAgIEByZW1WYWx1ZTogKEBtYXJnaW4vQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBtYXJnaW47XHJcbiAgICBtYXJnaW4tdG9wOiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIG1hcmdpbi10b3A6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxufVxyXG5cclxuLm1hcmdpbi10b3AteHhzKEBtYXJnaW4pIHtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3h4cyl7XHJcbiAgICBAcmVtVmFsdWU6IChAbWFyZ2luL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAbWFyZ2luO1xyXG4gICAgbWFyZ2luLXRvcDogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBtYXJnaW4tdG9wOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcbn1cclxuXHJcbi5tYXJnaW4tYm90dG9tKEBtYXJnaW4pIHtcclxuICAgIEByZW1WYWx1ZTogKEBtYXJnaW4vQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBtYXJnaW47XHJcbiAgICBtYXJnaW4tYm90dG9tOiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIG1hcmdpbi1ib3R0b206IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxuXHJcbi5tYXJnaW4tYm90dG9tLW1kKEBtYXJnaW4pIHtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX21kKXtcclxuICAgIEByZW1WYWx1ZTogKEBtYXJnaW4vQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBtYXJnaW47XHJcbiAgICBtYXJnaW4tYm90dG9tOiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIG1hcmdpbi1ib3R0b206IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxufVxyXG5cclxuLm1hcmdpbi1ib3R0b20tc20oQG1hcmdpbikge1xyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfc20pe1xyXG4gICAgQHJlbVZhbHVlOiAoQG1hcmdpbi9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQG1hcmdpbjtcclxuICAgIG1hcmdpbi1ib3R0b206IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG59XHJcblxyXG4ubWFyZ2luLWJvdHRvbS14cyhAbWFyZ2luKSB7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha194cyl7XHJcbiAgICBAcmVtVmFsdWU6IChAbWFyZ2luL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAbWFyZ2luO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcbn1cclxuXHJcbi5tYXJnaW4tYm90dG9tLXh4cyhAbWFyZ2luKSB7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha194eHMpe1xyXG4gICAgQHJlbVZhbHVlOiAoQG1hcmdpbi9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQG1hcmdpbjtcclxuICAgIG1hcmdpbi1ib3R0b206IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG59XHJcblxyXG4ubWFyZ2luLVgoQG1hcmdpbil7XHJcbiAgICBAcmVtVmFsdWU6IChAbWFyZ2luL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAbWFyZ2luO1xyXG4gICAgbWFyZ2luLWxlZnQ6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgbWFyZ2luLWxlZnQ6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcblxyXG5cclxuLm1hcmdpbi1YLWxnKEBtYXJnaW4pe1xyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbGcpe1xyXG4gICAgQHJlbVZhbHVlOiAoQG1hcmdpbi9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQG1hcmdpbjtcclxuICAgIG1hcmdpbi1sZWZ0OiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIG1hcmdpbi1sZWZ0OiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIG1hcmdpbi1yaWdodDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG59XHJcblxyXG4ubWFyZ2luLVgtbWQoQG1hcmdpbil7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19tZCl7XHJcbiAgICBAcmVtVmFsdWU6IChAbWFyZ2luL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAbWFyZ2luO1xyXG4gICAgbWFyZ2luLWxlZnQ6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgbWFyZ2luLWxlZnQ6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcbn1cclxuXHJcbi5tYXJnaW4tWC1zbShAbWFyZ2luKXtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3NtKXtcclxuICAgIEByZW1WYWx1ZTogKEBtYXJnaW4vQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBtYXJnaW47XHJcbiAgICBtYXJnaW4tbGVmdDogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBtYXJnaW4tbGVmdDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxuICAgIG1hcmdpbi1yaWdodDogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxufVxyXG5cclxuLm1hcmdpbi1YLXhzKEBtYXJnaW4pe1xyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfeHMpe1xyXG4gICAgQHJlbVZhbHVlOiAoQG1hcmdpbi9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQG1hcmdpbjtcclxuICAgIG1hcmdpbi1sZWZ0OiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIG1hcmdpbi1sZWZ0OiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIG1hcmdpbi1yaWdodDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG59XHJcblxyXG4ubWFyZ2luLVgteHhzKEBtYXJnaW4pe1xyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfeHhzKXtcclxuICAgIEByZW1WYWx1ZTogKEBtYXJnaW4vQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBtYXJnaW47XHJcbiAgICBtYXJnaW4tbGVmdDogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBtYXJnaW4tbGVmdDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxuICAgIG1hcmdpbi1yaWdodDogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxufVxyXG5cclxuLm1hcmdpbi1sZWZ0KCBAbWFyZ2luKXtcclxuICAgIEByZW1WYWx1ZTogKEBtYXJnaW4vQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBtYXJnaW47XHJcbiAgICBtYXJnaW4tbGVmdDogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBtYXJnaW4tbGVmdDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG5cclxuLm1hcmdpbi1sZWZ0LW1kKEBtYXJnaW4pe1xyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xyXG4gICAgQHJlbVZhbHVlOiAoQG1hcmdpbi9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQG1hcmdpbjtcclxuICAgIG1hcmdpbi1sZWZ0OiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIG1hcmdpbi1sZWZ0OiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcbn1cclxuXHJcbi5tYXJnaW4tbGVmdC1zbShAbWFyZ2luKXtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3NtKXtcclxuICAgIEByZW1WYWx1ZTogKEBtYXJnaW4vQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBtYXJnaW47XHJcbiAgICBtYXJnaW4tbGVmdDogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBtYXJnaW4tbGVmdDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG59XHJcblxyXG4ubWFyZ2luLWxlZnQteHMoQG1hcmdpbil7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha194cyl7XHJcbiAgICBAcmVtVmFsdWU6IChAbWFyZ2luL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAbWFyZ2luO1xyXG4gICAgbWFyZ2luLWxlZnQ6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgbWFyZ2luLWxlZnQ6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxufVxyXG5cclxuLm1hcmdpbi1sZWZ0LXh4cyhAbWFyZ2luKXtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3h4cyl7XHJcbiAgICBAcmVtVmFsdWU6IChAbWFyZ2luL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAbWFyZ2luO1xyXG4gICAgbWFyZ2luLWxlZnQ6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgbWFyZ2luLWxlZnQ6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxufVxyXG5cclxuLm1hcmdpbi1yaWdodChAbWFyZ2luKXtcclxuICAgIEByZW1WYWx1ZTogKEBtYXJnaW4vQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBtYXJnaW47XHJcbiAgICBtYXJnaW4tcmlnaHQ6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcblxyXG4ubWFyZ2luLXJpZ2h0LW1kKEBtYXJnaW4pe1xyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xyXG4gICAgQHJlbVZhbHVlOiAoQG1hcmdpbi9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQG1hcmdpbjtcclxuICAgIG1hcmdpbi1yaWdodDogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxufVxyXG5cclxuLm1hcmdpbi1yaWdodC1zbShAbWFyZ2luKXtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3NtKXtcclxuICAgIEByZW1WYWx1ZTogKEBtYXJnaW4vQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBtYXJnaW47XHJcbiAgICBtYXJnaW4tcmlnaHQ6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcbn1cclxuXHJcbi5tYXJnaW4tcmlnaHQteHMoQG1hcmdpbil7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha194cyl7XHJcbiAgICBAcmVtVmFsdWU6IChAbWFyZ2luL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAbWFyZ2luO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIG1hcmdpbi1yaWdodDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG59XHJcblxyXG4ubWFyZ2luLXJpZ2h0LXh4cyhAbWFyZ2luKXtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3h4cyl7XHJcbiAgICBAcmVtVmFsdWU6IChAbWFyZ2luL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAbWFyZ2luO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIG1hcmdpbi1yaWdodDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG59XHJcblxyXG4ubWFyZ2luLTE2KCkge1xyXG4gICAgQHJlbVZhbHVlOiAoMTYvQGZvbnRCYXNlUHgpO1xyXG4gICAgbWFyZ2luLXRvcDogMTZweDtcclxuICAgIG1hcmdpbi10b3A6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG5cclxuLm1hcmdpbi0yNCgpIHtcclxuICAgIEByZW1WYWx1ZTogKDI0L0Bmb250QmFzZVB4KTtcclxuICAgIG1hcmdpbi10b3A6IDI0cHg7XHJcbiAgICBtYXJnaW4tdG9wOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjRweDtcclxuICAgIG1hcmdpbi1ib3R0b206IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxuXHJcbi5tYXJnaW4tMzIoKSB7XHJcbiAgICBAcmVtVmFsdWU6ICgzMi9AZm9udEJhc2VQeCk7XHJcbiAgICBtYXJnaW4tdG9wOiAzMnB4O1xyXG4gICAgbWFyZ2luLXRvcDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxuICAgIG1hcmdpbi1ib3R0b206IDMycHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcblxyXG4ubWFyZ2luLTQ4KCkge1xyXG4gICAgQHJlbVZhbHVlOiAoNDgvQGZvbnRCYXNlUHgpO1xyXG4gICAgbWFyZ2luLXRvcDogNDhweDtcclxuICAgIG1hcmdpbi10b3A6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA0OHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG5cclxuLm1hcmdpbi02NCgpIHtcclxuICAgIEByZW1WYWx1ZTogKDY0L0Bmb250QmFzZVB4KTtcclxuICAgIG1hcmdpbi10b3A6IDY0cHg7XHJcbiAgICBtYXJnaW4tdG9wOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNjRweDtcclxuICAgIG1hcmdpbi1ib3R0b206IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxuXHJcbi5tYXJnaW4oQHZhcjogMTYpIHtcclxuICAgIG1hcmdpbjogQHZhciArIDBweDtcclxufVxyXG5cclxuLm1hcmdpbi10b3AoQHZhcjogMTYpIHtcclxuICAgIG1hcmdpbi10b3A6IEB2YXIgKyAwcHg7XHJcbn1cclxuXHJcbi5tYXJnaW4tYm90dG9tKEB2YXI6IDE2KSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiBAdmFyICsgMHB4O1xyXG59XHJcblxyXG4ubWFyZ2luLWxlZnQoQHZhcjogMTYpIHtcclxuICAgIG1hcmdpbi1sZWZ0OiBAdmFyICsgMHB4IDtcclxufVxyXG5cclxuLm1hcmdpbi1yaWdodChAdmFyOiAxNikge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBAdmFyICsgMHB4O1xyXG59XHJcblxyXG4ucGFkZGluZy1zbWFsbCgpIHtcclxuICAgIHBhZGRpbmc6IDRweCA4cHggO1xyXG59XHJcblxyXG4ucGFkZGluZygpIHtcclxuICAgIHBhZGRpbmc6IDhweCAxNnB4IDtcclxufVxyXG5cclxuLnBhZGRpbmctbGFyZ2UoKSB7XHJcbiAgICBwYWRkaW5nOiAxMnB4IDI0cHggO1xyXG59XHJcblxyXG4ucGFkZGluZy14bGFyZ2UoKSB7XHJcbiAgICBwYWRkaW5nOiAxNnB4IDMycHggO1xyXG59XHJcblxyXG4ucGFkZGluZy14eGxhcmdlKCkge1xyXG4gICAgcGFkZGluZzogMThweCAzNnB4IDtcclxufVxyXG5cclxuLnBhZGRpbmcteHh4bGFyZ2UoKSB7XHJcbiAgICBwYWRkaW5nOiAyMHB4IDQwcHggO1xyXG59XHJcblxyXG4ucGFkZGluZy1ZKCl7fVxyXG5cclxuLnBhZGRpbmctWShAcGFkZGluZyl7XHJcbiAgICBAcmVtVmFsdWU6IChAcGFkZGluZy9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHBhZGRpbmc7XHJcbiAgICBwYWRkaW5nLXRvcDogIH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgcGFkZGluZy10b3A6ICB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgcGFkZGluZy1ib3R0b206ICB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIHBhZGRpbmctYm90dG9tOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcblxyXG4ucGFkZGluZy1ZLWxnKEBwYWRkaW5nKXtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX2xnKXtcclxuICAgIEByZW1WYWx1ZTogKEBwYWRkaW5nL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAcGFkZGluZztcclxuICAgIHBhZGRpbmctdG9wOiAgflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBwYWRkaW5nLXRvcDogIH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogIH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgcGFkZGluZy1ib3R0b206IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxufVxyXG5cclxuLnBhZGRpbmctWS1tZChAcGFkZGluZyl7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19tZCl7XHJcbiAgICBAcmVtVmFsdWU6IChAcGFkZGluZy9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHBhZGRpbmc7XHJcbiAgICBwYWRkaW5nLXRvcDogIH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgcGFkZGluZy10b3A6ICB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgcGFkZGluZy1ib3R0b206ICB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIHBhZGRpbmctYm90dG9tOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcbn1cclxuXHJcbi5wYWRkaW5nLVktc20oQHBhZGRpbmcpe1xyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfc20pe1xyXG4gICAgQHJlbVZhbHVlOiAoQHBhZGRpbmcvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBwYWRkaW5nO1xyXG4gICAgcGFkZGluZy10b3A6ICB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIHBhZGRpbmctdG9wOiAgflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxuICAgIHBhZGRpbmctYm90dG9tOiAgflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG59XHJcblxyXG4ucGFkZGluZy1ZLXhzKEBwYWRkaW5nKXtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3hzKXtcclxuICAgIEByZW1WYWx1ZTogKEBwYWRkaW5nL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAcGFkZGluZztcclxuICAgIHBhZGRpbmctdG9wOiAgflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBwYWRkaW5nLXRvcDogIH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogIH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgcGFkZGluZy1ib3R0b206IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxufVxyXG5cclxuLnBhZGRpbmctWS14eHMoQHBhZGRpbmcpe1xyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfeHhzKXtcclxuICAgIEByZW1WYWx1ZTogKEBwYWRkaW5nL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAcGFkZGluZztcclxuICAgIHBhZGRpbmctdG9wOiAgflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBwYWRkaW5nLXRvcDogIH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogIH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgcGFkZGluZy1ib3R0b206IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxufVxyXG5cclxuLnBhZGRpbmctdG9wKEBwYWRkaW5nKXtcclxuICAgIEByZW1WYWx1ZTogKEBwYWRkaW5nL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAcGFkZGluZztcclxuICAgIHBhZGRpbmctdG9wOiAgflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBwYWRkaW5nLXRvcDogIH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxuXHJcbi5wYWRkaW5nLXRvcC1sZyhAcGFkZGluZyl7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19sZyl7XHJcbiAgICBAcmVtVmFsdWU6IChAcGFkZGluZy9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHBhZGRpbmc7XHJcbiAgICBwYWRkaW5nLXRvcDogIH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgcGFkZGluZy10b3A6ICB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcbn1cclxuXHJcbi5wYWRkaW5nLXRvcC1tZChAcGFkZGluZyl7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19tZCl7XHJcbiAgICBAcmVtVmFsdWU6IChAcGFkZGluZy9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHBhZGRpbmc7XHJcbiAgICBwYWRkaW5nLXRvcDogIH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgcGFkZGluZy10b3A6ICB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcbn1cclxuXHJcbi5wYWRkaW5nLXRvcC1zbShAcGFkZGluZyl7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XHJcbiAgICBAcmVtVmFsdWU6IChAcGFkZGluZy9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHBhZGRpbmc7XHJcbiAgICBwYWRkaW5nLXRvcDogIH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgcGFkZGluZy10b3A6ICB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcbn1cclxuXHJcbi5wYWRkaW5nLXRvcC14cyhAcGFkZGluZyl7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha194cyl7XHJcbiAgICBAcmVtVmFsdWU6IChAcGFkZGluZy9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHBhZGRpbmc7XHJcbiAgICBwYWRkaW5nLXRvcDogIH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgcGFkZGluZy10b3A6ICB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcbn1cclxuXHJcbi5wYWRkaW5nLXRvcC14eHMoQHBhZGRpbmcpe1xyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfeHhzKXtcclxuICAgIEByZW1WYWx1ZTogKEBwYWRkaW5nL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAcGFkZGluZztcclxuICAgIHBhZGRpbmctdG9wOiAgflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBwYWRkaW5nLXRvcDogIH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxufVxyXG5cclxuLnBhZGRpbmctYm90dG9tKEBwYWRkaW5nKXtcclxuICAgIEByZW1WYWx1ZTogKEBwYWRkaW5nL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAcGFkZGluZztcclxuICAgIHBhZGRpbmctYm90dG9tOiAgflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG5cclxuLnBhZGRpbmctYm90dG9tLWxnKEBwYWRkaW5nKXtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX21kKXtcclxuICAgIEByZW1WYWx1ZTogKEBwYWRkaW5nL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAcGFkZGluZztcclxuICAgIHBhZGRpbmctYm90dG9tOiAgflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG59XHJcblxyXG4ucGFkZGluZy1ib3R0b20tbWQoQHBhZGRpbmcpe1xyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xyXG4gICAgQHJlbVZhbHVlOiAoQHBhZGRpbmcvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBwYWRkaW5nO1xyXG4gICAgcGFkZGluZy1ib3R0b206ICB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIHBhZGRpbmctYm90dG9tOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcbn1cclxuXHJcbi5wYWRkaW5nLWJvdHRvbS1zbShAcGFkZGluZyl7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XHJcbiAgICBAcmVtVmFsdWU6IChAcGFkZGluZy9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHBhZGRpbmc7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogIH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgcGFkZGluZy1ib3R0b206IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxufVxyXG5cclxuLnBhZGRpbmctYm90dG9tLXhzKEBwYWRkaW5nKXtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3hzKXtcclxuICAgIEByZW1WYWx1ZTogKEBwYWRkaW5nL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAcGFkZGluZztcclxuICAgIHBhZGRpbmctYm90dG9tOiAgflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG59XHJcblxyXG4ucGFkZGluZy1ib3R0b20teHhzKEBwYWRkaW5nKXtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3h4cyl7XHJcbiAgICBAcmVtVmFsdWU6IChAcGFkZGluZy9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHBhZGRpbmc7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogIH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgcGFkZGluZy1ib3R0b206IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxufVxyXG5cclxuXHJcbi5wYWRkaW5nLVgoQHBhZGRpbmcpe1xyXG4gICAgQHJlbVZhbHVlOiAoQHBhZGRpbmcvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBwYWRkaW5nO1xyXG4gICAgcGFkZGluZy1sZWZ0OiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIHBhZGRpbmctbGVmdDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxuICAgIHBhZGRpbmctcmlnaHQ6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgcGFkZGluZy1yaWdodDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG5cclxuLnBhZGRpbmctWC1sZyhAcGFkZGluZyl7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19sZyl7XHJcbiAgICBAcmVtVmFsdWU6IChAcGFkZGluZy9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHBhZGRpbmc7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgcGFkZGluZy1sZWZ0OiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgcGFkZGluZy1yaWdodDogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcbn1cclxuXHJcbi5wYWRkaW5nLVgtbWQoQHBhZGRpbmcpe1xyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xyXG4gICAgQHJlbVZhbHVlOiAoQHBhZGRpbmcvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBwYWRkaW5nO1xyXG4gICAgcGFkZGluZy1sZWZ0OiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIHBhZGRpbmctbGVmdDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxuICAgIHBhZGRpbmctcmlnaHQ6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgcGFkZGluZy1yaWdodDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG59XHJcblxyXG4ucGFkZGluZy1YLXNtKEBwYWRkaW5nKXtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3NtKXtcclxuICAgIEByZW1WYWx1ZTogKEBwYWRkaW5nL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAcGFkZGluZztcclxuICAgIHBhZGRpbmctbGVmdDogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIHBhZGRpbmctcmlnaHQ6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxufVxyXG5cclxuLnBhZGRpbmctWC14cyhAcGFkZGluZyl7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha194cyl7XHJcbiAgICBAcmVtVmFsdWU6IChAcGFkZGluZy9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHBhZGRpbmc7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgcGFkZGluZy1sZWZ0OiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgcGFkZGluZy1yaWdodDogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcbn1cclxuXHJcbi5wYWRkaW5nLVgteHhzKEBwYWRkaW5nKXtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3h4cyl7XHJcbiAgICBAcmVtVmFsdWU6IChAcGFkZGluZy9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHBhZGRpbmc7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgcGFkZGluZy1sZWZ0OiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgcGFkZGluZy1yaWdodDogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcbn1cclxuXHJcbi5wYWRkaW5nLWxlZnQoQHBhZGRpbmcpe1xyXG4gICAgQHJlbVZhbHVlOiAoQHBhZGRpbmcvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBwYWRkaW5nO1xyXG4gICAgcGFkZGluZy1sZWZ0OiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIHBhZGRpbmctbGVmdDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG5cclxuLnBhZGRpbmctbGVmdC1sZyhAcGFkZGluZyl7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19sZyl7XHJcbiAgICBAcmVtVmFsdWU6IChAcGFkZGluZy9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHBhZGRpbmc7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgcGFkZGluZy1sZWZ0OiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcbn1cclxuXHJcbi5wYWRkaW5nLWxlZnQtbWQoQHBhZGRpbmcpe1xyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xyXG4gICAgQHJlbVZhbHVlOiAoQHBhZGRpbmcvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBwYWRkaW5nO1xyXG4gICAgcGFkZGluZy1sZWZ0OiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIHBhZGRpbmctbGVmdDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG59XHJcblxyXG4ucGFkZGluZy1sZWZ0LXNtKEBwYWRkaW5nKXtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3NtKXtcclxuICAgIEByZW1WYWx1ZTogKEBwYWRkaW5nL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAcGFkZGluZztcclxuICAgIHBhZGRpbmctbGVmdDogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxufVxyXG5cclxuLnBhZGRpbmctbGVmdC14cyhAcGFkZGluZyl7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha194cyl7XHJcbiAgICBAcmVtVmFsdWU6IChAcGFkZGluZy9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHBhZGRpbmc7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgcGFkZGluZy1sZWZ0OiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcbn1cclxuXHJcbi5wYWRkaW5nLWxlZnQteHhzKEBwYWRkaW5nKXtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3h4cyl7XHJcbiAgICBAcmVtVmFsdWU6IChAcGFkZGluZy9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHBhZGRpbmc7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgcGFkZGluZy1sZWZ0OiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcbn1cclxuXHJcbi5wYWRkaW5nLXJpZ2h0KEBwYWRkaW5nKXtcclxuICAgIEByZW1WYWx1ZTogKEBwYWRkaW5nL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAcGFkZGluZztcclxuICAgIHBhZGRpbmctcmlnaHQ6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgcGFkZGluZy1yaWdodDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG5cclxuLnBhZGRpbmctcmlnaHQtbGcoQHBhZGRpbmcpe1xyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbGcpe1xyXG4gICAgQHJlbVZhbHVlOiAoQHBhZGRpbmcvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBwYWRkaW5nO1xyXG4gICAgcGFkZGluZy1yaWdodDogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcbn1cclxuXHJcbi5wYWRkaW5nLXJpZ2h0LW1kKEBwYWRkaW5nKXtcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX21kKXtcclxuICAgIEByZW1WYWx1ZTogKEBwYWRkaW5nL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAcGFkZGluZztcclxuICAgIHBhZGRpbmctcmlnaHQ6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgcGFkZGluZy1yaWdodDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG59XHJcblxyXG4ucGFkZGluZy1yaWdodC1zbShAcGFkZGluZyl7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XHJcbiAgICBAcmVtVmFsdWU6IChAcGFkZGluZy9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHBhZGRpbmc7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgIHBhZGRpbmctcmlnaHQ6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxufVxyXG5cclxuLnBhZGRpbmctcmlnaHQteHMoQHBhZGRpbmcpe1xyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfeHMpe1xyXG4gICAgQHJlbVZhbHVlOiAoQHBhZGRpbmcvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBwYWRkaW5nO1xyXG4gICAgcGFkZGluZy1yaWdodDogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcbn1cclxuXHJcbi5wYWRkaW5nLXJpZ2h0LXh4cyhAcGFkZGluZyl7XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha194eHMpe1xyXG4gICAgQHJlbVZhbHVlOiAoQHBhZGRpbmcvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEBwYWRkaW5nO1xyXG4gICAgcGFkZGluZy1yaWdodDogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcbn1cclxuXHJcbi5wYWRkaW5nLTE2KCkge1xyXG4gICAgQHJlbVZhbHVlOiAoMTYvQGZvbnRCYXNlUHgpO1xyXG4gICAgcGFkZGluZy10b3A6IDE2cHggO1xyXG4gICAgcGFkZGluZy10b3A6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTZweCA7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG5cclxuLnBhZGRpbmctMjQoKSB7XHJcbiAgICBAcmVtVmFsdWU6ICgyNC9AZm9udEJhc2VQeCk7XHJcbiAgICBwYWRkaW5nLXRvcDogMjRweCA7XHJcbiAgICBwYWRkaW5nLXRvcDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxuICAgIHBhZGRpbmctYm90dG9tOiAyNHB4IDtcclxuICAgIHBhZGRpbmctYm90dG9tOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcblxyXG4ucGFkZGluZy0zMigpIHtcclxuICAgIEByZW1WYWx1ZTogKDMyL0Bmb250QmFzZVB4KTtcclxuICAgIHBhZGRpbmctdG9wOiAzMnB4IDtcclxuICAgIHBhZGRpbmctdG9wOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDMycHggO1xyXG4gICAgcGFkZGluZy1ib3R0b206IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbn1cclxuXHJcbi5wYWRkaW5nLTQ4KCkge1xyXG4gICAgQHJlbVZhbHVlOiAoNDgvQGZvbnRCYXNlUHgpO1xyXG4gICAgcGFkZGluZy10b3A6IDQ4cHggO1xyXG4gICAgcGFkZGluZy10b3A6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogNDhweCA7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG5cclxuLnBhZGRpbmctNjQoKSB7XHJcbiAgICBAcmVtVmFsdWU6ICg2NC9AZm9udEJhc2VQeCk7XHJcbiAgICBwYWRkaW5nLXRvcDogNjRweCA7XHJcbiAgICBwYWRkaW5nLXRvcDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxuICAgIHBhZGRpbmctYm90dG9tOiA2NHB4IDtcclxuICAgIHBhZGRpbmctYm90dG9tOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcblxyXG4uc2VjdGlvbigpIHtcclxuICAgIG1hcmdpbi10b3A6IDE2cHggO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTZweCA7XHJcbn1cclxuXHJcbi5sZWZ0KCkge1xyXG4gICAgZmxvYXQ6IGxlZnQgO1xyXG59XHJcbi5hbGlnbmxlZnQoKXt9XHJcblxyXG4uYWxpZ25sZWZ0KEBtYXJnaW46IDEwKXtcclxuICAgICAgICBAcmVtVmFsdWU6IChAbWFyZ2luL0Bmb250QmFzZVB4KTtcclxuICAgICAgICBAcHhWYWx1ZTogQG1hcmdpbjtcclxuICAgICAgICBmbG9hdDpsZWZ0O1xyXG4gICAgICAgIG1hcmdpbjogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICAgICAgbWFyZ2luOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG59XHJcblxyXG5cclxuLmFsaWdubGVmdC1tZChAbWFyZ2luOiAxMCl7XHJcbiAgICAubWQtYmxvY2soe1xyXG4gICAgICAgIEByZW1WYWx1ZTogKEBtYXJnaW4vQGZvbnRCYXNlUHgpO1xyXG4gICAgICAgIEBweFZhbHVlOiBAbWFyZ2luO1xyXG4gICAgICAgIGZsb2F0OmxlZnQ7XHJcbiAgICAgICAgbWFyZ2luOiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgICAgICBtYXJnaW46IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLmFsaWdubGVmdC1zbSggQG1hcmdpbjogMTApe1xyXG4gICAgLnNtLWJsb2NrKHtcclxuICAgICAgICBAcmVtVmFsdWU6IChAbWFyZ2luL0Bmb250QmFzZVB4KTtcclxuICAgICAgICBAcHhWYWx1ZTogQG1hcmdpbjtcclxuICAgICAgICBmbG9hdDpsZWZ0O1xyXG4gICAgICAgIG1hcmdpbjogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICAgICAgbWFyZ2luOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi5hbGlnbmxlZnQteHMoQG1hcmdpbjogMTApe1xyXG4gICAgLnhzLWJsb2NrKHtcclxuICAgICAgICBAcmVtVmFsdWU6IChAbWFyZ2luL0Bmb250QmFzZVB4KTtcclxuICAgICAgICBAcHhWYWx1ZTogQG1hcmdpbjtcclxuXHJcbiAgICAgICAgZmxvYXQ6bGVmdDtcclxuICAgICAgICBtYXJnaW46IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgICAgIG1hcmdpbjogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxuXHJcbiAgICB9KTtcclxufVxyXG5cclxuLmFsaWdubGVmdC14eHMoQG1hcmdpbjogMTApe1xyXG4gICAgLnh4cy1ibG9jayh7XHJcbiAgICAgICAgQHJlbVZhbHVlOiAoQG1hcmdpbi9AZm9udEJhc2VQeCk7XHJcbiAgICAgICAgQHB4VmFsdWU6IEBtYXJnaW47XHJcblxyXG4gICAgICAgIGZsb2F0OmxlZnQ7XHJcbiAgICAgICAgbWFyZ2luOiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgICAgICBtYXJnaW46IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcblxyXG4gICAgfSk7XHJcbn1cclxuLnJpZ2h0KCkge1xyXG4gICAgZmxvYXQ6IHJpZ2h0IDtcclxufVxyXG5cclxuLmFsaWducmlnaHQoKSB7IGZsb2F0OnJpZ2h0O21hcmdpbjoxMHB4OyB9XHJcblxyXG4uYWxpZ25yaWdodChAbWFyZ2luOiAxMCl7XHJcbiAgICAgICAgQHJlbVZhbHVlOiAoQG1hcmdpbi9AZm9udEJhc2VQeCk7XHJcbiAgICAgICAgQHB4VmFsdWU6IEBtYXJnaW47XHJcblxyXG4gICAgICAgIGZsb2F0OiByaWdodDtcclxuICAgICAgICBtYXJnaW46IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgICAgIG1hcmdpbjogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxufVxyXG5cclxuLmFsaWducmlnaHQtbWQoQG1hcmdpbjogMTApe1xyXG4gICAgLm1kLWJsb2NrKHtcclxuICAgICAgICBAcmVtVmFsdWU6IChAbWFyZ2luL0Bmb250QmFzZVB4KTtcclxuICAgICAgICBAcHhWYWx1ZTogQG1hcmdpbjtcclxuXHJcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgICAgIG1hcmdpbjogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICAgICAgbWFyZ2luOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi5hbGlnbnJpZ2h0LXNtKEBtYXJnaW46IDEwKXtcclxuICAgIC5zbS1ibG9jayh7XHJcbiAgICAgICAgQHJlbVZhbHVlOiAoQG1hcmdpbi9AZm9udEJhc2VQeCk7XHJcbiAgICAgICAgQHB4VmFsdWU6IEBtYXJnaW47XHJcblxyXG4gICAgICAgIGZsb2F0OiByaWdodDtcclxuICAgICAgICBtYXJnaW46IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgICAgIG1hcmdpbjogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxuICAgIH0pO1xyXG59XHJcblxyXG4uYWxpZ25yaWdodC14cyhAbWFyZ2luOiAxMCl7XHJcbiAgICAueHMtYmxvY2soe1xyXG4gICAgICAgIEByZW1WYWx1ZTogKEBtYXJnaW4vQGZvbnRCYXNlUHgpO1xyXG4gICAgICAgIEBweFZhbHVlOiBAbWFyZ2luO1xyXG5cclxuICAgICAgICBmbG9hdDpyaWdodDtcclxuICAgICAgICBtYXJnaW46IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgICAgIG1hcmdpbjogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxuICAgIH0pO1xyXG59XHJcblxyXG4uYWxpZ25yaWdodC14eHMoQG1hcmdpbjogMTApe1xyXG4gICAgLnh4cy1ibG9jayh7XHJcbiAgICAgICAgQHJlbVZhbHVlOiAoQG1hcmdpbi9AZm9udEJhc2VQeCk7XHJcbiAgICAgICAgQHB4VmFsdWU6IEBtYXJnaW47XHJcblxyXG4gICAgICAgIGZsb2F0OiByaWdodDtcclxuICAgICAgICBtYXJnaW46IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgICAgIG1hcmdpbjogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxuICAgIH0pO1xyXG59XHJcblxyXG4uYWxpZ25jZW50ZXIoQHdpZHRoOiAyMDApIHtcclxuICAgIEByZW1WYWx1ZTogKEB3aWR0aC9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHdpZHRoO1xyXG4gICAgd2lkdGg6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgd2lkdGg6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgICBkaXNwbGF5OmJsb2NrO1xyXG4gICAgbWFyZ2luOjAgYXV0bztcclxufVxyXG5cclxuLmFsaWduY2VudGVyLW1kKEB3aWR0aDogMjAwKXtcclxuICAgIEByZW1WYWx1ZTogKEB3aWR0aC9AZm9udEJhc2VQeCk7XHJcbiAgICBAcHhWYWx1ZTogQHdpZHRoO1xyXG4gICAgLm1kLWJsb2NrKHtcclxuICAgICAgICBtYXgtd2lkdGg6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgICAgIG1heC13aWR0aDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBtYXJnaW46MCBhdXRvO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi5hbGlnbmNlbnRlci1zbShAd2lkdGg6IDIwMCl7XHJcbiAgICBAcmVtVmFsdWU6IChAd2lkdGgvQGZvbnRCYXNlUHgpO1xyXG4gICAgQHB4VmFsdWU6IEB3aWR0aDtcclxuICAgIC5zbS1ibG9jayh7XHJcbiAgICAgICAgbWF4LXdpZHRoOiB+XCJAe3B4VmFsdWV9cHhcIjtcclxuICAgICAgICBtYXgtd2lkdGg6IH5cIkB7cmVtVmFsdWV9cmVtXCI7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgbWFyZ2luOjAgYXV0bztcclxuICAgIH0pO1xyXG59XHJcblxyXG4uYWxpZ25jZW50ZXIteHMoQHdpZHRoOiAyMDApe1xyXG4gICAgQHJlbVZhbHVlOiAoQHdpZHRoL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAd2lkdGg7XHJcbiAgICAueHMtYmxvY2soe1xyXG4gICAgICAgIG1heC13aWR0aDogflwiQHtweFZhbHVlfXB4XCI7XHJcbiAgICAgICAgbWF4LXdpZHRoOiB+XCJAe3JlbVZhbHVlfXJlbVwiO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIG1hcmdpbjowIGF1dG87XHJcbiAgICB9KTtcclxufVxyXG5cclxuLmFsaWduY2VudGVyLXh4cyggQHdpZHRoOiAyMDApe1xyXG4gICAgQHJlbVZhbHVlOiAoQHdpZHRoL0Bmb250QmFzZVB4KTtcclxuICAgIEBweFZhbHVlOiBAd2lkdGg7XHJcbiAgICAueHhzLWJsb2NrKHtcclxuICAgICAgICBtYXgtd2lkdGg6IH5cIkB7cHhWYWx1ZX1weFwiO1xyXG4gICAgICAgIG1heC13aWR0aDogflwiQHtyZW1WYWx1ZX1yZW1cIjtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBtYXJnaW46MCBhdXRvO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi5vdmVybGF5KEBwb3NpdGlvbjogZml4ZWQpIHtcclxuICAgIHBvc2l0aW9uOiBAcG9zaXRpb247XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTtcclxuICAgIHotaW5kZXg6IDI7XHJcbn1cclxuXHJcbi5tb2RhbChAcHg6IDMwMDsgQHBvc2l0aW9uOiBmaXhlZCkge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIHdpZHRoOiBAcHggKyAwcHg7XHJcbiAgICB3aWR0aDogQHB4L0Bmb250QmFzZVB4ICsgMHJlbTtcclxuICAgIHBvc2l0aW9uOiBAcG9zaXRpb247XHJcbiAgICB0b3A6IDUwJTtcclxuICAgIGxlZnQ6IDUwJTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgei1pbmRleDogMTAwMDtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjtcclxufVxyXG5cclxuLmpzLW1vZGFsKEBweDogMzAwOyBAcG9zaXRpb246IGZpeGVkKSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgd2lkdGg6IEBweCArIDBweDtcclxuICAgIHdpZHRoOihAcHgvQGZvbnRCYXNlUHgpICsgMHJlbTtcclxuICAgIHBvc2l0aW9uOiBAcG9zaXRpb247XHJcbiAgICB0b3A6IDUlO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgLyptYXJnaW4tbGVmdDooQHB4IC8gMikgKyAwcHg7Ki9cclxuICAgIHotaW5kZXg6IDMwMDA7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7XHJcbn1cclxuXHJcbi5zdG9wLXNjcm9sbCgpe1xyXG4gICAgb3ZlcmZsb3cteTogaGlkZGVuO1xyXG59XHJcbi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cclxuLmhpZGUobm9uZSkge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLmhpZGUoc2xpZGUpIHtcclxuICAgIGhlaWdodDogMDtcclxufVxyXG5cclxuLmhpZGUoZmFkZSkge1xyXG4gICBvcGFjaXR5OiAwO1xyXG59XHJcblxyXG5cclxuLmhpZGUtZXh0cmEtc21hbGwtZG93bihub25lKXtcclxuQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha19zKXtcclxuICAgIG9wYWNpdHk6IDA7XHJcbn1cclxufVxyXG5cclxuLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xyXG4uaGlkZS1leHRyYS1zbWFsbC1kb3duKHNsaWRlKXtcclxuQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha19zKXtcclxuICAgIGhlaWdodDogMDtcclxufVxyXG59XHJcblxyXG4uaGlkZS1leHRyYS1zbWFsbC1kb3duKGZhZGUpe1xyXG5AbWVkaWEgKG1heC13aWR0aDogQGJyZWFrX3Mpe1xyXG4gICAgb3BhY2l0eTogMDtcclxufVxyXG59XHJcblxyXG5cclxuXHJcbi5oaWRlLWV4dHJhLXNtYWxsLXVwKG5vbmUpe1xyXG5AbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX3Mpe1xyXG4gICBkaXNwbGF5Om5vbmU7XHJcbn1cclxufVxyXG5cclxuLmhpZGUtZXh0cmEtc21hbGwtdXAoc2xpZGUpe1xyXG5AbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX3Mpe1xyXG4gICAgaGVpZ2h0OiAwO1xyXG59XHJcbn1cclxuXHJcbi5oaWRlLWV4dHJhLXNtYWxsLXVwKGZhZGUpe1xyXG5AbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX3Mpe1xyXG4gICBvcGFjaXR5OiAwO1xyXG59XHJcbn1cclxuXHJcbi5oaWRlLWV4dHJhLXNtYWxsLW9ubHkobm9uZSl7XHJcbkBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfcykgYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XHJcbiAgIGRpc3BsYXk6bm9uZTtcclxufVxyXG59XHJcblxyXG4uaGlkZS1leHRyYS1zbWFsbC1vbmx5KHNsaWRlKXtcclxuQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19zKSBhbmQgKG1heC13aWR0aDogQGJyZWFrX3NtKXtcclxuICAgaGVpZ2h0OiAwO1xyXG59XHJcbn1cclxuXHJcbi5oaWRlLWV4dHJhLXNtYWxsLW9ubHkoZmFkZSl7XHJcbkBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfcykgYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XHJcbiAgIG9wYWNpdHk6IDA7XHJcbn1cclxufVxyXG5cclxuLmhpZGUtc21hbGwtZG93bihub25lKXtcclxuQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha19zbSl7XHJcbiAgIGRpc3BsYXk6bm9uZTtcclxufVxyXG59XHJcblxyXG4uaGlkZS1zbWFsbC1kb3duKHNsaWRlKXtcclxuQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha19zbSl7XHJcbiAgIGhlaWdodDogMDtcclxufVxyXG59XHJcblxyXG4uaGlkZS1zbWFsbC1kb3duKGZhZGUpe1xyXG5AbWVkaWEgKG1heC13aWR0aDogQGJyZWFrX3NtKXtcclxuICAgb3BhY2l0eTogMDtcclxufVxyXG59XHJcblxyXG4uaGlkZS1zbWFsbC11cChub25lKXtcclxuQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19zbSl7XHJcbiAgIGRpc3BsYXk6bm9uZTtcclxufVxyXG59XHJcblxyXG4uaGlkZS1zbWFsbC11cChzbGlkZSl7XHJcbkBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfc20pe1xyXG4gICBoZWlnaHQ6IDA7XHJcbn1cclxufVxyXG5cclxuLmhpZGUtc21hbGwtdXAoZmFkZSl7XHJcbkBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfc20pe1xyXG4gICAgb3BhY2l0eTogMDtcclxufVxyXG59XHJcblxyXG4uaGlkZS1zbWFsbC1vbmx5KG5vbmUpe1xyXG5AbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX3NtKSBhbmQgKG1heC13aWR0aDogQGJyZWFrX20pe1xyXG4gICBkaXNwbGF5Om5vbmU7XHJcbn1cclxufVxyXG5cclxuLmhpZGUtc21hbGwtb25seShzbGlkZSl7XHJcbkBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfc20pIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbSl7XHJcbiAgIGhlaWdodDogMDtcclxufVxyXG59XHJcblxyXG4uaGlkZS1zbWFsbC1vbmx5KGZhZGUpe1xyXG5AbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX3NtKSBhbmQgKG1heC13aWR0aDogQGJyZWFrX20pe1xyXG4gICBvcGFjaXR5OiAwO1xyXG59XHJcbn1cclxuXHJcbi5oaWRlLW1lZGl1bS1kb3duKG5vbmUpe1xyXG5AbWVkaWEgKG1heC13aWR0aDogQGJyZWFrX20pIHtcclxuICAgIGRpc3BsYXk6bm9uZTtcclxufVxyXG59XHJcblxyXG4uaGlkZS1tZWRpdW0tZG93bihzbGlkZSl7XHJcbkBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtfbSkge1xyXG4gICAgaGVpZ2h0OiAwO1xyXG59XHJcbn1cclxuXHJcbi5oaWRlLW1lZGl1bS1kb3duKGZhZGUpe1xyXG5AbWVkaWEgKG1heC13aWR0aDogQGJyZWFrX20pIHtcclxuICAgICBvcGFjaXR5OiAwO1xyXG59XHJcbn1cclxuXHJcbi5oaWRlLW1lZGl1bS11cChub25lKXtcclxuQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19tKXtcclxuICAgIGRpc3BsYXk6bm9uZTtcclxufVxyXG59XHJcblxyXG4uaGlkZS1tZWRpdW0tdXAoc2xpZGUpe1xyXG5AbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX20pe1xyXG4gICAgaGVpZ2h0OiAwO1xyXG59XHJcbn1cclxuXHJcbi5oaWRlLW1lZGl1bS11cChmYWRlKXtcclxuQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19tKXtcclxuICAgIG9wYWNpdHk6IDA7XHJcbn1cclxufVxyXG5cclxuLmhpZGUtbWVkaXVtLW9ubHkobm9uZSl7XHJcbkBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfbSlhbmQgKG1heC13aWR0aDogQGJyZWFrX21kKXtcclxuICAgIGRpc3BsYXk6bm9uZTtcclxufVxyXG59XHJcblxyXG4uaGlkZS1tZWRpdW0tb25seShzbGlkZSl7XHJcbkBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfbSlhbmQgKG1heC13aWR0aDogQGJyZWFrX21kKXtcclxuICAgIGhlaWdodDogMDtcclxufVxyXG59XHJcblxyXG4uaGlkZS1tZWRpdW0tb25seShmYWRlKXtcclxuQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19tKWFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xyXG4gICAgb3BhY2l0eTogMDtcclxufVxyXG59XHJcblxyXG4uaGlkZS1sYXJnZS1kb3duKG5vbmUpe1xyXG4gQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha19tZCl7XHJcbiAgICAgZGlzcGxheTpub25lO1xyXG4gfVxyXG59XHJcblxyXG4uaGlkZS1sYXJnZS1kb3duKHNsaWRlKXtcclxuIEBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xyXG4gICAgIGhlaWdodDogMDtcclxuIH1cclxufVxyXG5cclxuLmhpZGUtbGFyZ2UtZG93bihmYWRlKXtcclxuIEBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xyXG4gICAgIG9wYWNpdHk6IDA7XHJcbiB9XHJcbn1cclxuXHJcbi5oaWRlLWxhcmdlLXVwKG5vbmUpe1xyXG4gQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19tZCl7XHJcbiAgICAgZGlzcGxheTpub25lO1xyXG4gfVxyXG59XHJcblxyXG4uaGlkZS1sYXJnZS11cChzbGlkZSl7XHJcbiBAbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX21kKXtcclxuICAgICBoZWlnaHQ6IDA7XHJcbiB9XHJcbn1cclxuXHJcbi5oaWRlLWxhcmdlLXVwKGZhZGUpe1xyXG4gQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19tZCl7XHJcbiAgICAgb3BhY2l0eTogMDtcclxuIH1cclxufVxyXG5cclxuLmhpZGUtbGFyZ2Utb25seShub25lKXtcclxuQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19tZClhbmQgKG1heC13aWR0aDogQGJyZWFrX2xnKXtcclxuICAgIGRpc3BsYXk6bm9uZTtcclxufVxyXG59XHJcblxyXG4uaGlkZS1sYXJnZS1vbmx5KHNsaWRlKXtcclxuQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19tZClhbmQgKG1heC13aWR0aDogQGJyZWFrX2xnKXtcclxuICAgICBoZWlnaHQ6IDA7XHJcbn1cclxufVxyXG5cclxuLmhpZGUtbGFyZ2Utb25seShmYWRlKXtcclxuQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19tZClhbmQgKG1heC13aWR0aDogQGJyZWFrX2xnKXtcclxuICAgIG9wYWNpdHk6IDA7XHJcbn1cclxufVxyXG5cclxuLmhpZGUtZXh0cmEtbGFyZ2UtZG93bihub25lKXtcclxuIEBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtfbGcpe1xyXG4gICAgIGRpc3BsYXk6bm9uZTtcclxuIH1cclxufVxyXG5cclxuLmhpZGUtZXh0cmEtbGFyZ2UtZG93bihzbGlkZSl7XHJcbiBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrX2xnKXtcclxuICAgICBoZWlnaHQ6IDA7XHJcbiB9XHJcbn1cclxuXHJcbi5oaWRlLWV4dHJhLWxhcmdlLWRvd24oZmFkZSl7XHJcbiBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrX2xnKXtcclxuICAgICBvcGFjaXR5OiAwO1xyXG4gfVxyXG59XHJcblxyXG4uaGlkZS1leHRyYS1sYXJnZS11cChub25lKXtcclxuIEBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfbGcpe1xyXG4gICAgIGRpc3BsYXk6bm9uZTtcclxuIH1cclxufVxyXG5cclxuLmhpZGUtZXh0cmEtbGFyZ2UtdXAoc2xpZGUpe1xyXG4gQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19sZyl7XHJcbiAgICAgaGVpZ2h0OiAwO1xyXG4gfVxyXG59XHJcblxyXG4uaGlkZS1leHRyYS1sYXJnZS11cChmYWRlKXtcclxuIEBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfbGcpe1xyXG4gICAgIG9wYWNpdHk6IDA7XHJcbiB9XHJcbn1cclxuXHJcbi5oaWRlLWV4dHJhLWxhcmdlLW9ubHkobm9uZSl7XHJcbiBAbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX2xnKSBhbmQgKG1heC13aWR0aDogQGJyZWFrX21kKXtcclxuICAgICBkaXNwbGF5Om5vbmU7XHJcbiB9XHJcbn1cclxuXHJcbi5oaWRlLWV4dHJhLWxhcmdlLW9ubHkoc2xpZGUpe1xyXG4gQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19sZykgYW5kIChtYXgtd2lkdGg6IEBicmVha19tZCl7XHJcbiAgICAgaGVpZ2h0OiAwO1xyXG4gfVxyXG59XHJcblxyXG4uaGlkZS1leHRyYS1sYXJnZS1vbmx5KGZhZGUpe1xyXG4gQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19sZykgYW5kIChtYXgtd2lkdGg6IEBicmVha19tZCl7XHJcbiAgICAgb3BhY2l0eTogMDtcclxuIH1cclxufVxyXG4gLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXHJcbi5zaG93KGJsb2NrKXtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4uc2hvdyhkaWItdG9wKXtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbn1cclxuXHJcbi5zaG93KGRpYi1taWQpe1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG5cclxuLnNob3coc2xpZGUpe1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4uc2hvdyhmYWRlKXtcclxuICAgIG9wYWNpdHk6IDFcclxufVxyXG5cclxuLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXHJcbi5zaG93LWV4dHJhLXNtYWxsLWRvd24gKGJsb2NrKSB7XHJcbkBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtfcyl7XHJcbiAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcbn1cclxuXHJcbi5zaG93LWV4dHJhLXNtYWxsLWRvd24gKHNsaWRlKSB7XHJcbkBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtfcyl7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxufVxyXG5cclxuLnNob3ctZXh0cmEtc21hbGwtZG93biAoZmFkZSkge1xyXG5AbWVkaWEgKG1heC13aWR0aDogQGJyZWFrX3Mpe1xyXG4gICAgb3BhY2l0eTogMTtcclxufVxyXG59XHJcblxyXG4uc2hvdy1leHRyYS1zbWFsbC1kb3duIChkaWItdG9wKSB7XHJcbkBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtfcyl7XHJcbiAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxufVxyXG59XHJcblxyXG4uc2hvdy1leHRyYS1zbWFsbC1kb3duIChkaWItbWlkKSB7XHJcbkBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtfcyl7XHJcbiAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG59XHJcbi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xyXG4uc2hvdy1leHRyYS1zbWFsbC11cChibG9jayl7XHJcbkBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfcyl7XHJcbiAgIGRpc3BsYXk6YmxvY2s7XHJcbn1cclxufVxyXG5cclxuLnNob3ctZXh0cmEtc21hbGwtdXAoc2xpZGUpe1xyXG5AbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX3Mpe1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcbn1cclxuXHJcbi5zaG93LWV4dHJhLXNtYWxsLXVwKGZhZGUpe1xyXG5AbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX3Mpe1xyXG4gICAgb3BhY2l0eTogMTtcclxufVxyXG59XHJcblxyXG4uc2hvdy1leHRyYS1zbWFsbC11cChkaWItdG9wKXtcclxuQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19zKXtcclxuICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG59XHJcbn1cclxuXHJcbi5zaG93LWV4dHJhLXNtYWxsLXVwKGRpYi1taWQpe1xyXG5AbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX3Mpe1xyXG4gICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbn1cclxufVxyXG4vKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cclxuLnNob3ctZXh0cmEtc21hbGwtb25seShibG9jayl7XHJcbkBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfcykgYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XHJcbiAgIGRpc3BsYXk6YmxvY2s7XHJcbn1cclxufVxyXG4uc2hvdy1leHRyYS1zbWFsbC1vbmx5KHNsaWRlKXtcclxuQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19zKSBhbmQgKG1heC13aWR0aDogQGJyZWFrX3NtKXtcclxuICAgIGhlaWdodDogMTAwJTtcclxufVxyXG59XHJcbi5zaG93LWV4dHJhLXNtYWxsLW9ubHkoZmFkZSl7XHJcbkBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfcykgYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG59XHJcbn1cclxuLnNob3ctZXh0cmEtc21hbGwtb25seShkaWItdG9wKXtcclxuQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19zKSBhbmQgKG1heC13aWR0aDogQGJyZWFrX3NtKXtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxufVxyXG59XHJcblxyXG4uc2hvdy1leHRyYS1zbWFsbC1vbmx5KGRpYi1taWQpe1xyXG5AbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX3MpIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfc20pe1xyXG4gICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbn1cclxufVxyXG4vKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cclxuLnNob3ctc21hbGwtZG93bihibG9jayl7XHJcbkBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtfc20pe1xyXG4gICBkaXNwbGF5OmJsb2NrO1xyXG59XHJcbn1cclxuLnNob3ctc21hbGwtZG93bihzbGlkZSl7XHJcbkBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtfc20pe1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcbn1cclxuLnNob3ctc21hbGwtZG93bihmYWRlKXtcclxuQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha19zbSl7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG59XHJcbn1cclxuLnNob3ctc21hbGwtZG93bihkaWItdG9wKXtcclxuQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha19zbSl7XHJcbiAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxufVxyXG59XHJcblxyXG4uc2hvdy1zbWFsbC1kb3duKGRpYi1taWQpe1xyXG5AbWVkaWEgKG1heC13aWR0aDogQGJyZWFrX3NtKXtcclxuICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG59XHJcbn1cclxuLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXHJcbi5zaG93LXNtYWxsLXVwKGJsb2NrKXtcclxuQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19zbSl7XHJcbiAgIGRpc3BsYXk6YmxvY2s7XHJcbn1cclxufVxyXG5cclxuLnNob3ctc21hbGwtdXAoc2xpZGUpe1xyXG5AbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX3NtKXtcclxuICAgIGhlaWdodDogMTAwJTtcclxufVxyXG59XHJcblxyXG4uc2hvdy1zbWFsbC11cChmYWRlKXtcclxuQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19zbSl7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG59XHJcbn1cclxuXHJcbi5zaG93LXNtYWxsLXVwKGRpYi10b3Ape1xyXG5AbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX3NtKXtcclxuICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG59XHJcbn1cclxuXHJcbi5zaG93LXNtYWxsLXVwKGRpYi1taWQpe1xyXG5AbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX3NtKXtcclxuICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XHJcbiAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbn1cclxufVxyXG4vKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cclxuLnNob3ctc21hbGwtb25seShibG9jayl7XHJcbkBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfc20pIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbSl7XHJcbiAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcbn1cclxuXHJcbi5zaG93LXNtYWxsLW9ubHkoc2xpZGUpe1xyXG5AbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX3NtKSBhbmQgKG1heC13aWR0aDogQGJyZWFrX20pe1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcbn1cclxuXHJcbi5zaG93LXNtYWxsLW9ubHkoZmFkZSl7XHJcbkBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfc20pIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbSl7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG59XHJcbn1cclxuXHJcbi5zaG93LXNtYWxsLW9ubHkoZGliLXRvcCl7XHJcbkBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfc20pIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbSl7XHJcbiAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxufVxyXG59XHJcblxyXG4uc2hvdy1zbWFsbC1vbmx5KGRpYi1taWQpe1xyXG5AbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX3NtKSBhbmQgKG1heC13aWR0aDogQGJyZWFrX20pe1xyXG4gICBkaXNwbGF5OmlubGluZS1ibG9jaztcclxuICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG59XHJcbi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xyXG4uc2hvdy1tZWRpdW0tZG93bihibG9jayl7XHJcbkBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtfbSkge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxufVxyXG5cclxuLnNob3ctbWVkaXVtLWRvd24oZGliLXRvcCl7XHJcbkBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtfbSkge1xyXG4gICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XHJcbiAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbn1cclxufVxyXG5cclxuLnNob3ctbWVkaXVtLWRvd24oZGliLW1pZCl7XHJcbkBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtfbSkge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG59XHJcbn1cclxuXHJcbi5zaG93LW1lZGl1bS1kb3duKHNsaWRlKXtcclxuQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha19tKSB7XHJcbiAgICAgIGhlaWdodDogMTAwJTtcclxufVxyXG59XHJcblxyXG4uc2hvdy1tZWRpdW0tZG93bihmYWRlKXtcclxuQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha19tKSB7XHJcbiAgICAgb3BhY2l0eTogMTtcclxufVxyXG59XHJcbi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xyXG4uc2hvdy1tZWRpdW0tdXAoYmxvY2spe1xyXG5AbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX20pe1xyXG4gICAgZGlzcGxheTpibG9jaztcclxufVxyXG59XHJcblxyXG4uc2hvdy1tZWRpdW0tdXAoc2xpZGUpe1xyXG5AbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX20pe1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcbn1cclxuXHJcbi5zaG93LW1lZGl1bS11cChmYWRlKXtcclxuQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19tKXtcclxuICAgIG9wYWNpdHk6IDE7XHJcbn1cclxufVxyXG5cclxuLnNob3ctbWVkaXVtLXVwKGRpYi10b3Ape1xyXG5AbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX20pe1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxufVxyXG59XHJcblxyXG4uc2hvdy1tZWRpdW0tdXAoZGliLW1pZCl7XHJcbkBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfbSl7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG59XHJcbn1cclxuLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXHJcbi5zaG93LW1lZGl1bS1vbmx5KGJsb2NrKXtcclxuQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19tKWFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xyXG4gICAgZGlzcGxheTpibG9jaztcclxufVxyXG59XHJcblxyXG4uc2hvdy1tZWRpdW0tb25seShzbGlkZSl7XHJcbkBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfbSlhbmQgKG1heC13aWR0aDogQGJyZWFrX21kKXtcclxuICAgIGhlaWdodDogMTAwJTtcclxufVxyXG59XHJcblxyXG4uc2hvdy1tZWRpdW0tb25seShmYWRlKXtcclxuQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19tKWFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xyXG4gICAgb3BhY2l0eTogMTtcclxufVxyXG59XHJcblxyXG4uc2hvdy1tZWRpdW0tb25seShkaWItdG9wKXtcclxuQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19tKWFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxufVxyXG59XHJcblxyXG4uc2hvdy1tZWRpdW0tb25seShkaWItbWlkKXtcclxuQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19tKWFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG59XHJcbi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xyXG4uc2hvdy1sYXJnZS1kb3duKGJsb2NrKXtcclxuIEBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xyXG4gICAgZGlzcGxheTpibG9jaztcclxuIH1cclxufVxyXG5cclxuLnNob3ctbGFyZ2UtZG93bihzbGlkZSl7XHJcbiBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrX21kKXtcclxuICAgICBoZWlnaHQ6IDEwMCU7XHJcbiB9XHJcbn1cclxuXHJcbi5zaG93LWxhcmdlLWRvd24oZmFkZSl7XHJcbiBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrX21kKXtcclxuICAgICBvcGFjaXR5OiAxO1xyXG4gfVxyXG59XHJcblxyXG4uc2hvdy1sYXJnZS1kb3duKGRpYi10b3Ape1xyXG4gQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha19tZCl7XHJcbiAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiB9XHJcbn1cclxuXHJcbi5zaG93LWxhcmdlLWRvd24oZGliLW1pZCl7XHJcbiBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrX21kKXtcclxuICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuIH1cclxufVxyXG4vKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cclxuLnNob3ctbGFyZ2UtdXAoYmxvY2spe1xyXG4gQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19tZCl7XHJcbiAgICAgIGRpc3BsYXk6YmxvY2s7XHJcbiB9XHJcbn1cclxuXHJcbi5zaG93LWxhcmdlLXVwKHNsaWRlKXtcclxuIEBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfbWQpe1xyXG4gICAgIGhlaWdodDogMTAwJTtcclxuIH1cclxufVxyXG5cclxuXHJcbi5zaG93LWxhcmdlLXVwKGZhZGUpe1xyXG4gQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19tZCl7XHJcbiAgICAgb3BhY2l0eTogMTtcclxuIH1cclxufVxyXG5cclxuXHJcbi5zaG93LWxhcmdlLXVwKGRpYi10b3Ape1xyXG4gQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19tZCl7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gfVxyXG59XHJcblxyXG4uc2hvdy1sYXJnZS11cChkaWItbWlkKXtcclxuIEBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfbWQpe1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuIH1cclxufVxyXG4vKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cclxuLnNob3ctbGFyZ2Utb25seShibG9jayl7XHJcbkBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfbWQpYW5kIChtYXgtd2lkdGg6IEBicmVha19sZyl7XHJcbiAgICAgZGlzcGxheTpibG9jaztcclxufVxyXG59XHJcblxyXG4uc2hvdy1sYXJnZS1vbmx5KHNsaWRlKXtcclxuQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19tZClhbmQgKG1heC13aWR0aDogQGJyZWFrX2xnKXtcclxuICAgICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxufVxyXG5cclxuLnNob3ctbGFyZ2Utb25seShmYWRlKXtcclxuQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19tZClhbmQgKG1heC13aWR0aDogQGJyZWFrX2xnKXtcclxuICAgIG9wYWNpdHk6IDE7XHJcbn1cclxufVxyXG5cclxuLnNob3ctbGFyZ2Utb25seShkaWItdG9wKXtcclxuQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19tZClhbmQgKG1heC13aWR0aDogQGJyZWFrX2xnKXtcclxuICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxufVxyXG59XHJcblxyXG4uc2hvdy1sYXJnZS1vbmx5KGRpYi1taWQpe1xyXG5AbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX21kKWFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbGcpe1xyXG4gICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG59XHJcbn1cclxuLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXHJcbi5zaG93LWV4dHJhLWxhcmdlLWRvd24oYmxvY2spe1xyXG4gQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha19sZyl7XHJcbiAgICAgIGRpc3BsYXk6YmxvY2s7XHJcbiB9XHJcbn1cclxuXHJcbi5zaG93LWV4dHJhLWxhcmdlLWRvd24oc2xpZGUpe1xyXG4gQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha19sZyl7XHJcbiAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gfVxyXG59XHJcbi5zaG93LWV4dHJhLWxhcmdlLWRvd24oZmFkZSl7XHJcbiBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrX2xnKXtcclxuICAgICBvcGFjaXR5OiAxO1xyXG4gfVxyXG59XHJcblxyXG4uc2hvdy1leHRyYS1sYXJnZS1kb3duKGRpYi10b3Ape1xyXG4gQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha19sZyl7XHJcbiAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiB9XHJcbn1cclxuXHJcbi5zaG93LWV4dHJhLWxhcmdlLWRvd24oZGliLW1pZCl7XHJcbiBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrX2xnKXtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiB9XHJcbn1cclxuLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXHJcbi5zaG93LWV4dHJhLWxhcmdlLXVwKGJsb2NrKXtcclxuIEBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfbGcpe1xyXG4gICAgICBkaXNwbGF5OmJsb2NrO1xyXG4gfVxyXG59XHJcblxyXG4uc2hvdy1leHRyYS1sYXJnZS11cChzbGlkZSl7XHJcbiBAbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX2xnKXtcclxuICAgICBoZWlnaHQ6IDEwMCU7XHJcbiB9XHJcbn1cclxuXHJcbi5zaG93LWV4dHJhLWxhcmdlLXVwKGZhZGUpe1xyXG4gQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19sZyl7XHJcbiAgICAgb3BhY2l0eTogMTtcclxuIH1cclxufVxyXG5cclxuLnNob3ctZXh0cmEtbGFyZ2UtdXAoZGliLXRvcCl7XHJcbiBAbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX2xnKXtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiB9XHJcbn1cclxuXHJcbi5zaG93LWV4dHJhLWxhcmdlLXVwKGRpYi1taWQpe1xyXG4gQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19sZyl7XHJcbiAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuIH1cclxufVxyXG4vKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cclxuLnNob3ctZXh0cmEtbGFyZ2Utb25seShibG9jayl7XHJcbiBAbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX2xnKSBhbmQgKG1heC13aWR0aDogQGJyZWFrX21kKXtcclxuICAgICBkaXNwbGF5OmJsb2NrO1xyXG4gfVxyXG59XHJcblxyXG4uc2hvdy1leHRyYS1sYXJnZS1vbmx5KHNsaWRlKXtcclxuIEBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfbGcpIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xyXG4gICAgIGhlaWdodDogMTAwJTtcclxuIH1cclxufVxyXG5cclxuLnNob3ctZXh0cmEtbGFyZ2Utb25seShmYWRlKXtcclxuIEBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfbGcpIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xyXG4gICAgIG9wYWNpdHk6IDE7XHJcbiB9XHJcbn1cclxuXHJcbi5zaG93LWV4dHJhLWxhcmdlLW9ubHkoZGliLXRvcCl7XHJcbiBAbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX2xnKSBhbmQgKG1heC13aWR0aDogQGJyZWFrX21kKXtcclxuICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuIH1cclxufVxyXG5cclxuLnNob3ctZXh0cmEtbGFyZ2Utb25seShkaWItbWlkKXtcclxuIEBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfbGcpIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xyXG4gICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gfVxyXG59XHJcblxyXG4vKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cclxuLmJnYyAoKXtcclxuXHJcbn1cclxuXHJcbi5iZ2MgKEBjb2xvcjogZ3JheSl7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBAY29sb3I7XHJcbn1cclxuXHJcbi5iZ2MgKGRhcms7IEBjb2xvcil7XHJcbiAgIGJhY2tncm91bmQtY29sb3I6IGRhcmtlbihAY29sb3IsIDUlKTtcclxufVxyXG5cclxuLmJnYyAobGlnaHQ7IEBjb2xvcil7XHJcbiAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oQGNvbG9yLCAyMCUpO1xyXG59XHJcblxyXG4uYmdjLXJnYmEgKEBjb2xvciwgQHByZWNlbnQpe1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZmFkZW91dChAY29sb3IsIEBwcmVjZW50KTtcclxufVxyXG5cclxuLmhvdmVyLWJhY2tncm91bmQtY29sb3IoKXtcclxuICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjVzIGVhc2UtaW47XHJcbiAgJjpob3ZlcntcclxuICBib3JkZXItY29sb3I6IEBjb2xvcjtcclxufVxyXG59XHJcbi5ob3Zlci1iYWNrZ3JvdW5kLWNvbG9yKEBjb2xvcjpibGFjayl7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjVzIGVhc2UtaW47XHJcbiAgJjpob3ZlcntcclxuICAgIGJvcmRlci1jb2xvcjogQGNvbG9yO1xyXG59XHJcbn1cclxuXHJcbi5ob3Zlci1iYWNrZ3JvdW5kLWNvbG9yKGRhcms7IEBjb2xvcil7XHJcbiAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIC41cyBlYXNlLWluO1xyXG4gICY6aG92ZXJ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogZGFya2VuKEBjb2xvciwgNTAlKTtcclxufVxyXG59XHJcblxyXG4uaG92ZXItYmFja2dyb3VuZC1jb2xvcihsaWdodDsgQGNvbG9yKXtcclxuICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjVzIGVhc2UtaW47XHJcbiAgJjpob3ZlcntcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGVuKEBjb2xvciwgNTAlKTtcclxufVxyXG59XHJcblxyXG4uaG92ZXItYm9yZGVyLWNvbG9yKEBjb2xvcil7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjVzIGVhc2UtaW47XHJcbiAgJjpob3ZlcntcclxuICBib3JkZXItY29sb3I6IEBjb2xvcjtcclxufVxyXG59XHJcbi5jKEBjb2xvcjogYmxhY2spe1xyXG4gICAgY29sb3I6IEBjb2xvcjtcclxufVxyXG5cclxuLmMgKGRhcms7IEBjb2xvcil7XHJcbiAgIGNvbG9yOiBkYXJrZW4oQGNvbG9yLCAxMCUpO1xyXG59XHJcblxyXG4uYyAobGlnaHQ7IEBjb2xvcil7XHJcbiAgIGNvbG9yOiBsaWdodGVuKEBjb2xvciwgMTAlKTtcclxufVxyXG5cclxuLmMtcmdiYSAoQGNvbG9yLCBAcHJlY2VudCl7XHJcbiAgICBjb2xvcjogZmFkZW91dChAY29sb3IsIEBwcmVjZW50KTtcclxufVxyXG5cclxuXHJcbi50ZXh0LWNvbG9yKCl7XHJcbiAgIGNvbG9yOiBAY29sb3I7XHJcbn1cclxuXHJcbi50ZXh0LWNvbG9yKEBjb2xvcil7XHJcbiAgIGNvbG9yOiBAY29sb3I7XHJcbn1cclxuXHJcbi50ZXh0LWNvbG9yKGRhcms7IEBjb2xvcil7XHJcbiAgIGNvbG9yOiBkYXJrZW4oQGNvbG9yLCA1MCUpO1xyXG59XHJcblxyXG5cclxuLnRleHQtY29sb3IobGlnaHQ7IEBjb2xvcil7XHJcbiAgIGNvbG9yOiBsaWdodGVuKEBjb2xvciwgNTAlKTtcclxufVxyXG5cclxuLmhvdmVyLWJvcmRlci1jb2xvcigpe1xyXG4gICAgIC50cmFuc2l0aW9uKC41KTtcclxuICAmOmhvdmVye1xyXG4gIGJvcmRlci1jb2xvcjogQGNvbG9yO1xyXG59XHJcbn1cclxuXHJcbi5ob3Zlci1ib3JkZXItY29sb3IoQGNvbG9yKXtcclxuICAgICAudHJhbnNpdGlvbiguNSk7XHJcbiAgJjpob3ZlcntcclxuICBib3JkZXItY29sb3I6IEBjb2xvcjtcclxufVxyXG59XHJcblxyXG4uaG92ZXItbm9uZSgpIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHRyYW5zaXRpb246IGFsbCAuNXMgZWFzZS1pbjtcclxuICAmOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50IDtcclxuICB9XHJcbn1cclxuXHJcbi5ob3Zlci1ub25lKCkge1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIC41cyBlYXNlLWluO1xyXG4gICY6aG92ZXIge1xyXG4gICAgYm94LXNoYWRvdzogbm9uZSA7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuXHJcbi5yb3dXKCkge1xyXG4gICAgJjphZnRlciB7XHJcbiAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICBkaXNwbGF5OiB0YWJsZTtcclxuICAgICAgICBjbGVhcjogYm90aDtcclxuICAgIH1cclxuXHJcbiAgICAmOmJlZm9yZSB7XHJcbiAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICBkaXNwbGF5OiB0YWJsZTtcclxuICAgICAgICBjbGVhcjogYm90aDtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbi5yb3ctcGFkZGluZygpIHtcclxuICAmOmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICBkaXNwbGF5OiB0YWJsZTtcclxuICAgIGNsZWFyOiBib3RoO1xyXG4gIH1cclxuXHJcbiAgJjpiZWZvcmUge1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIGRpc3BsYXk6IHRhYmxlO1xyXG4gICAgY2xlYXI6IGJvdGg7XHJcbiAgfVxyXG5cclxufVxyXG5cclxuLnJvdy1wYWRkaW5nKCl7XHJcbiAgICBwYWRkaW5nOiAwIDhweDtcclxuXHJcbiAgICAmOmFmdGVye1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIGRpc3BsYXk6IHRhYmxlO1xyXG4gICAgY2xlYXI6IGJvdGg7XHJcbiAgICB9XHJcbiAgICAmOmJlZm9yZXtcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICBkaXNwbGF5OiB0YWJsZTtcclxuICAgIGNsZWFyOiBib3RoO1xyXG4gICAgfVxyXG5cclxuICAgIC5oYWxmKCl7XHJcbiAgICAgIHBhZGRpbmc6IDAgOHB4O1xyXG4gICAgfVxyXG5cclxuICAgIC50aGlyZCgpe1xyXG4gICAgIHBhZGRpbmc6IDAgOHB4O1xyXG4gICB9XHJcblxyXG4gICAudHdvdGhpcmQoKXtcclxuICAgICAgcGFkZGluZzogMCA4cHg7XHJcbiAgICB9XHJcblxyXG4gICAgLnRocmVlcXVhcnRlcigpe1xyXG4gICAgICBwYWRkaW5nOiAwIDhweDtcclxuICAgIH1cclxuXHJcbiAgICAucXVhcnRlcigpe1xyXG4gICAgICBwYWRkaW5nOiAwIDhweDtcclxuICAgIH1cclxuXHJcbiAgICAgLmNvbFcze1xyXG4gICAgICBwYWRkaW5nOiAwIDhweDtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbi5oYWxmKCl7XHJcbiAgLnJvdy1wYWRkaW5nIHtcclxuICAgIHBhZGRpbmc6IDAgOHB4O1xyXG59XHJcbn1cclxuXHJcbi50aGlyZCgpe1xyXG4gLnJvdy1wYWRkaW5nIHtcclxuICAgIHBhZGRpbmc6IDAgOHB4O1xyXG59XHJcbn1cclxuXHJcbi50d290aGlyZCgpe1xyXG4gIC5yb3ctcGFkZGluZyB7XHJcbiAgICBwYWRkaW5nOiAwIDhweDtcclxufVxyXG59XHJcblxyXG5cclxuLnRocmVlcXVhcnRlcigpe1xyXG4gIC5yb3ctcGFkZGluZyB7XHJcbiAgICBwYWRkaW5nOiAwIDhweDtcclxufVxyXG59XHJcblxyXG5cclxuXHJcbi5xdWFydGVyKCl7XHJcbiAgLnJvdy1wYWRkaW5nIHtcclxuICAgIHBhZGRpbmc6IDAgOHB4O1xyXG59XHJcbn1cclxuXHJcblxyXG5cclxuLmNvbFczKCl7XHJcbiAgICAucm93LXBhZGRpbmcge1xyXG4gICAgcGFkZGluZzogMCA4cHg7XHJcbn1cclxufVxyXG5cclxuXHJcblxyXG4uY29sVzMoKXtcclxuICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbi5oYWxmKCl7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG4udGhpcmQoKXtcclxuICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbi50d290aGlyZCgpe1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLnRocmVlcXVhcnRlcigpe1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5xdWFydGVyKCl7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5cclxuLmNvbnRlbnQoKXtcclxuICAgIG1heC13aWR0aDogOTgwcHg7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbn1cclxuXHJcbi5yZXN0KCl7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4uaGFsZigpe1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG4udGhpcmQoKXtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLnR3b3RoaXJkKCl7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbi50aHJlZXF1YXJ0ZXIoKXtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5xdWFydGVyKCl7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbi5jb2xXMygpe1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLnMxKCl7XHJcbiAgICB3aWR0aDogOC4zMzMzMyU7XHJcbn1cclxuXHJcblxyXG4uczIoKXtcclxuICAgIHdpZHRoOiAxNi42NjY2NiU7XHJcbn1cclxuXHJcbi5zMygpe1xyXG4gICAgd2lkdGg6IDI0Ljk5OTk5JTtcclxufVxyXG5cclxuLnM0KCl7XHJcbiAgICB3aWR0aDogMzMuMzMzMzMlO1xyXG59XHJcblxyXG4uczUoKXtcclxuICAgIHdpZHRoOiA0MS42NjY2NiU7XHJcbn1cclxuXHJcbi5zNigpe1xyXG4gICAgd2lkdGg6IDQ5Ljk5OTk5JTtcclxufVxyXG5cclxuLnM3KCl7XHJcbiAgICB3aWR0aDogNTguMzMzMzMlO1xyXG59XHJcblxyXG4uczgoKXtcclxuICAgIHdpZHRoOiA2Ni42NjY2NiU7XHJcbn1cclxuXHJcbi5zOSgpe1xyXG4gICAgd2lkdGg6IDc0Ljk5OTk5JTtcclxufVxyXG5cclxuLnMxMCgpe1xyXG4gICAgd2lkdGg6IDgzLjMzMzMzJTtcclxufVxyXG5cclxuLnMxMSgpe1xyXG4gICAgd2lkdGg6IDkxLjY2NjY2JTtcclxufVxyXG5cclxuLnMxMigpe1xyXG4gICAgd2lkdGg6IDk5Ljk5OTk5JTtcclxufVxyXG5cclxuICAgIC5tMSgpe1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfc20pe3dpZHRoOiA4LjMzMzMzJTt9XHJcblxyXG4gICAgfVxyXG5cclxuICAgIC5tMigpe1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfc20pe3dpZHRoOiAxNi42NjY2NiU7fVxyXG5cclxuICAgIH1cclxuXHJcbiAgICAubTMoKXtcclxuICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfc20pe3dpZHRoOiAyNC45OTk5OSU7fVxyXG4gICAgfVxyXG4gICAgLnF1YXJ0ZXIoKXtcclxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX3NtKXt3aWR0aDogMjQuOTk5OTklO31cclxuICAgIH1cclxuXHJcbiAgICAubTQoKXtcclxuICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfc20peyB3aWR0aDogMzMuMzMzMzMlO31cclxuICAgIH1cclxuICAgIC50aGlyZCgpe1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfc20pe3dpZHRoOiAzMy4zMzMzMyU7fVxyXG4gICAgfVxyXG5cclxuICAgIC5tNSgpe1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfc20peyB3aWR0aDogNDEuNjY2NjYlO31cclxuICAgIH1cclxuXHJcbiAgICAubTYoKXtcclxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX3NtKXt3aWR0aDogNDkuOTk5OTklO31cclxuICAgIH1cclxuICAgIC5oYWxmKCl7XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19zbSl7d2lkdGg6IDQ5Ljk5OTk5JTt9XHJcbiAgICB9XHJcblxyXG4gICAgLm03KCl7XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19zbSl7d2lkdGg6IDU4LjMzMzMzJTt9XHJcbiAgICB9XHJcblxyXG4gICAgLm04KCl7XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19zbSl7IHdpZHRoOiA2Ni42NjY2NiU7fVxyXG4gICAgfVxyXG4gICAgLnR3b3RoaXJkKCl7XHJcbiAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX3NtKXsgd2lkdGg6IDY2LjY2NjY2JTt9XHJcbiAgICB9XHJcblxyXG4gICAgLm05KCl7XHJcbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfc20pe3dpZHRoOiA3NC45OTk5OSU7fVxyXG4gICAgfVxyXG4gICAgLnRocmVlcXVhcnRlcigpe1xyXG4gICAgICAgQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19zbSl7d2lkdGg6IDc0Ljk5OTk5JTt9XHJcbiAgICB9XHJcblxyXG4gICAgLm0xMCgpe1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfc20pe3dpZHRoOiA4My4zMzMzMyU7fVxyXG4gICAgfVxyXG5cclxuICAgIC5tMTEoKXtcclxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX3NtKXt3aWR0aDogOTEuNjY2NjYlO31cclxuXHJcbiAgICB9XHJcblxyXG4gICAgLm0xMigpe1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfc20pe3dpZHRoOiA5OS45OTk5OSU7fVxyXG5cclxuICAgIH1cclxuXHJcblxyXG4gICAgLmwxKCl7XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19tZCl7d2lkdGg6IDguMzMzMzMlO31cclxuXHJcbiAgICB9XHJcblxyXG4gICAgLmwyKCl7XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19tZCl7d2lkdGg6IDE2LjY2NjY2JTt9XHJcblxyXG4gICAgfVxyXG5cclxuICAgIC5sMygpe1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfbWQpe3dpZHRoOiAyNC45OTk5OSU7fVxyXG5cclxuICAgIH1cclxuXHJcbiAgICAubDQoKXtcclxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX21kKXt3aWR0aDogMzMuMzMzMzMlO31cclxuXHJcbiAgICB9XHJcblxyXG4gICAgLmw1KCl7XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19tZCl7d2lkdGg6IDQxLjY2NjY2JTt9XHJcblxyXG4gICAgfVxyXG5cclxuICAgIC5sNigpe1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfbWQpe3dpZHRoOiA0OS45OTk5OSU7fVxyXG4gICAgfVxyXG5cclxuICAgIC5sNygpe1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfbWQpe3dpZHRoOiA1OC4zMzMzMyU7fVxyXG5cclxuICAgIH1cclxuXHJcbiAgICAubDgoKXtcclxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX21kKXt3aWR0aDogNjYuNjY2NjYlO31cclxuXHJcbiAgICB9XHJcblxyXG4gICAgLmw5KCl7XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19tZCl7d2lkdGg6IDc0Ljk5OTk5JTt9XHJcblxyXG4gICAgfVxyXG5cclxuICAgIC5sMTAoKXtcclxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogQGJyZWFrX21kKXt3aWR0aDogODMuMzMzMzMlO31cclxuXHJcbiAgICB9XHJcblxyXG4gICAgLmwxMSgpe1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiBAYnJlYWtfbWQpeyB3aWR0aDogOTEuNjY2NjYlO31cclxuXHJcbiAgICB9XHJcblxyXG4gICAubDEyKCl7XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IEBicmVha19tZCl7d2lkdGg6IDk5Ljk5OTk5JTsgfVxyXG4gICAgfVxyXG5cclxuIiwiLy8gb3V0OiBudWxsXHJcblxyXG5cclxuXHJcbi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblRhYmxlIG9mIENvbnRlbnRcclxuXHJcbjEuIFdyYXBwZXJzXHJcbjIuIEJ1dHRvbnNcclxuMy4gRm9ybSBlbGVtZW50c1xyXG40LiBGb250IGZhbWlseVxyXG41LiBUeXBvZ3JhcGh5XHJcbj09PT09PT09PT09PT09PT09PT09PT09PT09PSovXHJcblxyXG5cclxuXHJcbi8qIDEuIFdyYXBwZXJzXHJcbj09PT09PT09PT09PT09PT09PT09PT09PT09PSovXHJcbi8qXHJcbi5kZWJ1ZyB7XHJcbiAgICAuZGVidWcocmdiYSgwLCAwLCAwLCAwLjUpLCAxcHggc29saWQgI2ZmMCk7XHJcbn1cclxuKi9cclxuLndyYXBwZXIge1xyXG4gICAgLndyYXBwZXIoKTtcclxufVxyXG5cclxuLmNvbnRhaW5lci13cmFwIHtcclxuICAgIC5taW4tbWF4KDMwMCwgMTk1MCwgMTUpO1xyXG59XHJcblxyXG4qIHtcclxuICAgIC50cmFuc2l0aW9uKC41cyk7XHJcbn1cclxuLyogMi4gQnV0dG9uc1xyXG49PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xyXG5cclxuXHJcbi8qIDMuIEZvcm0gZWxlbWVudHNcclxuPT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cclxuKjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XHJcbiAgICBjb2xvcjogIzY2NjtcclxuICAgIG9wYWNpdHk6IDE7XHJcbn1cclxuKjotbW96LXBsYWNlaG9sZGVyIHtcclxuICAgIGNvbG9yOiAjNjY2O1xyXG4gICAgb3BhY2l0eTogMTtcclxufVxyXG4qOjotbW96LXBsYWNlaG9sZGVyIHtcclxuICAgIGNvbG9yOiAjNjY2O1xyXG4gICAgb3BhY2l0eTogMTtcclxufVxyXG4qOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XHJcbiAgICBjb2xvcjogIzY2NjtcclxuICAgIG9wYWNpdHk6IDE7XHJcbn1cclxuXHJcbmJvZHkgaW5wdXQ6Zm9jdXM6cmVxdWlyZWQ6aW52YWxpZCxcclxuYm9keSB0ZXh0YXJlYTpmb2N1czpyZXF1aXJlZDppbnZhbGlkIHtcclxuXHJcbn1cclxuYm9keSBpbnB1dDpyZXF1aXJlZDp2YWxpZCxcclxuYm9keSB0ZXh0YXJlYTpyZXF1aXJlZDp2YWxpZCB7XHJcblxyXG59XHJcblxyXG4vKjQuIEZvbnQgZmFtaWx5XHJcbj09PT09PT09PT09PT09PT09PT09PT09PT09PSovXHJcbi5mZi1vcGVuLXNhbnMoQGZvbnQtd2VpZ2h0OjQwMDsgQGZvbnQtc3R5bGU6IG5vcm1hbDspe1xyXG4gICAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnLCBAZmYtcy1zZXJpZkFyaWFsO1xyXG4gICAgZm9udC13ZWlnaHQ6IEBmb250LXdlaWdodDtcclxuICAgIGZvbnQtc3R5bGU6IEBmb250LXN0eWxlO1xyXG59XHJcblxyXG4uZmYtZXhvMkJvbGQoQGZvbnQtd2VpZ2h0OjQwMDsgQGZvbnQtc3R5bGU6IG5vcm1hbDspe1xyXG4gICAgZm9udC1mYW1pbHk6ICdFeG8yQm9sZCcsIEBmZi1zLXNlcmlmQXJpYWw7XHJcbiAgICBmb250LXdlaWdodDogQGZvbnQtd2VpZ2h0O1xyXG4gICAgZm9udC1zdHlsZTogQGZvbnQtc3R5bGU7XHJcbn1cclxuXHJcbi8qNS4gVHlwb2dyYXBoeVxyXG49PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xyXG5odG1sLCBib2R5IHtcclxuICAgIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuYm9keSB7XHJcbiAgICBmb250LWZhbWlseTogQGZmLXMtc2VyaWZBcmlhbDtcclxuICAgIGNvbG9yOiBAYmFzZV9jb2xvcjtcclxuICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcclxufVxyXG5cclxudWwsIG9sIHtcclxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcclxuICAgIG1hcmdpbjogMDtcclxufVxyXG5cclxuYSB7XHJcbiAgICAmOmZvY3VzIHtcclxuICAgICAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgfVxyXG59XHJcblxyXG5maWVsZHNldCB7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG4qLCAqOmJlZm9yZSxcclxuKiwgKjphZnRlciB7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG5odG1sLFxyXG5ib2R5IHtcclxuICAgIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuYm9keSB7XHJcbiAgICAubWluLXdpZHRoKDMwMCk7XHJcbiAgICAuZGlzcGxheS1jb250YWluZXIoKTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcblxyXG5oZWFkZXIsXHJcbmZvb3RlciB7XHJcbiAgICBmbGV4OiAwIDAgYXV0bztcclxufVxyXG5cclxubWFpbiB7XHJcbiAgICBmbGV4OiAxIDAgYXV0bztcclxufVxyXG5cclxuXHJcbmh0bWwge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuXHJcbiAgICAuaHRtbC1meigxNik7XHJcblxyXG4gICAgLnNtLWJsb2NrKHtcclxuICAgICAgICAuaHRtbC1meigxNSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAueHMtYmxvY2soe1xyXG4gICAgICAgIC5odG1sLWZ6KDE0KTtcclxuICAgIH0pO1xyXG5cclxuICAgIC54eHMtYmxvY2soe1xyXG4gICAgICAgIC5odG1sLWZ6KDEzKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG4uaDEtZm9udFNpemUoKSB7IC5yZW0tc2l6ZSgzNik7IH1cclxuLmgyLWZvbnRTaXplKCkgeyAucmVtLXNpemUoMzApOyB9XHJcbi5oMy1mb250U2l6ZSgpIHsgLnJlbS1zaXplKDI0KTsgfVxyXG4uaDQtZm9udFNpemUoKSB7IC5yZW0tc2l6ZSgxOCk7IH1cclxuLmg1LWZvbnRTaXplKCkgeyAucmVtLXNpemUoMTQpOyB9XHJcbi5oNi1mb250U2l6ZSgpIHsgLnJlbS1zaXplKDEyKTsgfVxyXG5cclxuXHJcbmgxIHtcclxuICAgIC5oMS1mb250U2l6ZTtcclxufVxyXG5cclxuXHJcbmgyIHtcclxuICAgIC5oMi1mb250U2l6ZTtcclxufVxyXG5cclxuaDMge1xyXG4gICAgLmgzLWZvbnRTaXplO1xyXG59XHJcblxyXG5oNCB7XHJcbiAgICAuaDQtZm9udFNpemU7XHJcbn1cclxuXHJcbmg1IHtcclxuICAgIC5oNS1mb250U2l6ZTtcclxufVxyXG5cclxuaDYge1xyXG4gICAgLmg2LWZvbnRTaXplO1xyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiIsIkBpbXBvcnQgXCJsZXNzL3NoYXBlXCI7XHJcblxyXG4vLyAgbGVzc2hhdCAtIFRoZSBiZXN0IG1peGluIGxpYnJhcnkgaW4gdGhlIHdvcmxkXHJcbi8vXHJcbi8vIHZlcnNpb246IHY0LjEuMCAoMjAxNi0wNy0xOSlcclxuXHJcbi8vIFRBQkxFIE9GIE1JWElOUzpcclxuXHQvLyBhbGlnbi1jb250ZW50XHJcblx0Ly8gYWxpZ24taXRlbXNcclxuXHQvLyBhbGlnbi1zZWxmXHJcblx0Ly8gYW5pbWF0aW9uXHJcblx0Ly8gYW5pbWF0aW9uLWRlbGF5XHJcblx0Ly8gYW5pbWF0aW9uLWRpcmVjdGlvblxyXG5cdC8vIGFuaW1hdGlvbi1kdXJhdGlvblxyXG5cdC8vIGFuaW1hdGlvbi1maWxsLW1vZGVcclxuXHQvLyBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50XHJcblx0Ly8gYW5pbWF0aW9uLW5hbWVcclxuXHQvLyBhbmltYXRpb24tcGxheS1zdGF0ZVxyXG5cdC8vIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb25cclxuXHQvLyBhcHBlYXJhbmNlXHJcblx0Ly8gYmFja2ZhY2UtdmlzaWJpbGl0eVxyXG5cdC8vIGJhY2tncm91bmQtY2xpcFxyXG5cdC8vIGJhY2tncm91bmQtaW1hZ2VcclxuXHQvLyBiYWNrZ3JvdW5kLW9yaWdpblxyXG5cdC8vIGJhY2tncm91bmQtc2l6ZVxyXG5cdC8vIGJsdXJcclxuXHQvLyBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzXHJcblx0Ly8gYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXNcclxuXHQvLyBib3JkZXItaW1hZ2VcclxuXHQvLyBib3JkZXItcmFkaXVzXHJcblx0Ly8gYm9yZGVyLXRvcC1sZWZ0LXJhZGl1c1xyXG5cdC8vIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzXHJcblx0Ly8gYm94LXNoYWRvd1xyXG5cdC8vIGJveC1zaXppbmdcclxuXHQvLyBicmlnaHRuZXNzXHJcblx0Ly8gY2FsY1xyXG5cdC8vIGNvbHVtbi1jb3VudFxyXG5cdC8vIGNvbHVtbi1nYXBcclxuXHQvLyBjb2x1bW4tcnVsZVxyXG5cdC8vIGNvbHVtbi13aWR0aFxyXG5cdC8vIGNvbHVtbnNcclxuXHQvLyBjb250cmFzdFxyXG5cdC8vIGRpc3BsYXlcclxuXHQvLyBkcm9wLXNoYWRvd1xyXG5cdC8vIGZpbHRlclxyXG5cdC8vIGZsZXhcclxuXHQvLyBmbGV4LWJhc2lzXHJcblx0Ly8gZmxleC1kaXJlY3Rpb25cclxuXHQvLyBmbGV4LWdyb3dcclxuXHQvLyBmbGV4LXNocmlua1xyXG5cdC8vIGZsZXgtd3JhcFxyXG5cdC8vIGZvbnQtZmFjZVxyXG5cdC8vIGdyYXlzY2FsZVxyXG5cdC8vIGh1ZS1yb3RhdGVcclxuXHQvLyBoeXBoZW5zXHJcblx0Ly8gaW52ZXJ0XHJcblx0Ly8ganVzdGlmeS1jb250ZW50XHJcblx0Ly8ga2V5ZnJhbWVzXHJcblx0Ly8gb3BhY2l0eVxyXG5cdC8vIG9yZGVyXHJcblx0Ly8gcGVyc3BlY3RpdmVcclxuXHQvLyBwZXJzcGVjdGl2ZS1vcmlnaW5cclxuXHQvLyBwbGFjZWhvbGRlclxyXG5cdC8vIHJvdGF0ZVxyXG5cdC8vIHJvdGF0ZTNkXHJcblx0Ly8gcm90YXRlWFxyXG5cdC8vIHJvdGF0ZVlcclxuXHQvLyByb3RhdGVaXHJcblx0Ly8gc2F0dXJhdGVcclxuXHQvLyBzY2FsZVxyXG5cdC8vIHNjYWxlM2RcclxuXHQvLyBzY2FsZVhcclxuXHQvLyBzY2FsZVlcclxuXHQvLyBzY2FsZVpcclxuXHQvLyBzZWxlY3Rpb25cclxuXHQvLyBzZXBpYVxyXG5cdC8vIHNpemVcclxuXHQvLyBza2V3XHJcblx0Ly8gc2tld1hcclxuXHQvLyBza2V3WVxyXG5cdC8vIHRyYW5zZm9ybVxyXG5cdC8vIHRyYW5zZm9ybS1vcmlnaW5cclxuXHQvLyB0cmFuc2Zvcm0tc3R5bGVcclxuXHQvLyB0cmFuc2l0aW9uXHJcblx0Ly8gdHJhbnNpdGlvbi1kZWxheVxyXG5cdC8vIHRyYW5zaXRpb24tZHVyYXRpb25cclxuXHQvLyB0cmFuc2l0aW9uLXByb3BlcnR5XHJcblx0Ly8gdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb25cclxuXHQvLyB0cmFuc2xhdGVcclxuXHQvLyB0cmFuc2xhdGUzZFxyXG5cdC8vIHRyYW5zbGF0ZVhcclxuXHQvLyB0cmFuc2xhdGVZXHJcblx0Ly8gdHJhbnNsYXRlWlxyXG5cdC8vIHVzZXItc2VsZWN0XHJcblxyXG4uYWxpZ24tY29udGVudCguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24odCl7cmV0dXJuIHQ9dHx8XCJzdHJldGNoXCJ9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgQHByb2Nlc3NfbXM6IH5gKGZ1bmN0aW9uKGUpe3JldHVybiBlPWV8fFwic3RyZXRjaFwiLFwiZmxleC1zdGFydFwiPT1lP2U9XCJzdGFydFwiOlwiZmxleC1lbmRcIj09ZT9lPVwiZW5kXCI6XCJzcGFjZS1iZXR3ZWVuXCI9PWU/ZT1cImp1c3RpZnlcIjpcInNwYWNlLWFyb3VuZFwiPT1lJiYoZT1cImRpc3RyaWJ1dGVcIiksZX0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICAtd2Via2l0LWFsaWduLWNvbnRlbnQ6IEBwcm9jZXNzO1xyXG4gIC1tcy1mbGV4LWxpbmUtcGFjazogQHByb2Nlc3NfbXM7XHJcbiAgYWxpZ24tY29udGVudDogQHByb2Nlc3M7XHJcbn1cclxuXHJcbi5hbGlnbi1pdGVtcyguLi4pIHtcclxuICBAcHJvY2Vzc19vbGRlcndlYmtpdDogfmAoZnVuY3Rpb24odCl7cmV0dXJuIHQ9dHx8XCJzdHJldGNoXCIsXCJmbGV4LXN0YXJ0XCI9PXQ/dD1cInN0YXJ0XCI6XCJmbGV4LWVuZFwiPT10JiYodD1cImVuZFwiKSx0fSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIEBwcm9jZXNzX21vejogfmAoZnVuY3Rpb24odCl7cmV0dXJuIHQ9dHx8XCJzdHJldGNoXCIsXCJmbGV4LXN0YXJ0XCI9PXQ/dD1cInN0YXJ0XCI6XCJmbGV4LWVuZFwiPT10JiYodD1cImVuZFwiKSx0fSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbih0KXtyZXR1cm4gdD10fHxcInN0cmV0Y2hcIn0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICBAcHJvY2Vzc19tczogfmAoZnVuY3Rpb24odCl7cmV0dXJuIHQ9dHx8XCJzdHJldGNoXCIsXCJmbGV4LXN0YXJ0XCI9PXQ/dD1cInN0YXJ0XCI6XCJmbGV4LWVuZFwiPT10JiYodD1cImVuZFwiKSx0fSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtYm94LWFsaWduOiBAcHJvY2Vzc19vbGRlcndlYmtpdDtcclxuICAtbW96LWJveC1hbGlnbjogQHByb2Nlc3NfbW96O1xyXG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IEBwcm9jZXNzO1xyXG4gIC1tcy1mbGV4LWFsaWduOiBAcHJvY2Vzc19tcztcclxuICBhbGlnbi1pdGVtczogQHByb2Nlc3M7XHJcbn1cclxuXHJcbi5hbGlnbi1zZWxmKC4uLikge1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbihuKXtyZXR1cm4gbj1ufHxcImF1dG9cIn0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICBAcHJvY2Vzc19tczogfmAoZnVuY3Rpb24odCl7cmV0dXJuIHQ9dHx8XCJhdXRvXCIsXCJmbGV4LXN0YXJ0XCI9PXQ/dD1cInN0YXJ0XCI6XCJmbGV4LWVuZFwiPT10JiYodD1cImVuZFwiKSx0fSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtYWxpZ24tc2VsZjogQHByb2Nlc3M7XHJcbiAgLW1zLWZsZXgtaXRlbS1hbGlnbjogQHByb2Nlc3NfbXM7XHJcbiAgYWxpZ24tc2VsZjogQHByb2Nlc3M7XHJcbn1cclxuXHJcbi5hbmltYXRpb24oLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKGUpe3JldHVybiBlPWV8fFwibm9uZVwiLC9eW14sIF0qLC8udGVzdChlKSYmKGU9ZS5yZXBsYWNlKC8oPzosKSg/IVteKF0qXFwpKS9nLFwiXCIpKSxlfSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtYW5pbWF0aW9uOiBAcHJvY2VzcztcclxuICAtbW96LWFuaW1hdGlvbjogQHByb2Nlc3M7XHJcbiAgLW8tYW5pbWF0aW9uOiBAcHJvY2VzcztcclxuICBhbmltYXRpb246IEBwcm9jZXNzO1xyXG59XHJcblxyXG4uYW5pbWF0aW9uLWRlbGF5KC4uLikge1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbihyKXtyPXJ8fFwiMFwiO3ZhciBzPS8oPzpcXGQpKD86bXN8cykvZ2ksdD0vKD86XFxzfF4pKFxcLj9cXGQrXFwuP1xcZCopKD8hW14oXSpcXCl8XFx3fCV8XFwuKS9naTtyZXR1cm4gcy50ZXN0KHIpfHxcIjBcIj09PXJ8fChyPXIucmVwbGFjZSh0LGZ1bmN0aW9uKHIpe3JldHVybiByKz1wYXJzZUZsb2F0KHIsMTApPjEwP1wibXNcIjpcInNcIn0pKSxyfSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiBAcHJvY2VzcztcclxuICAtbW96LWFuaW1hdGlvbi1kZWxheTogQHByb2Nlc3M7XHJcbiAgLW8tYW5pbWF0aW9uLWRlbGF5OiBAcHJvY2VzcztcclxuICBhbmltYXRpb24tZGVsYXk6IEBwcm9jZXNzO1xyXG59XHJcblxyXG4uYW5pbWF0aW9uLWRpcmVjdGlvbiguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24obil7cmV0dXJuIG58fFwibm9ybWFsXCJ9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC1hbmltYXRpb24tZGlyZWN0aW9uOiBAcHJvY2VzcztcclxuICAtbW96LWFuaW1hdGlvbi1kaXJlY3Rpb246IEBwcm9jZXNzO1xyXG4gIC1vLWFuaW1hdGlvbi1kaXJlY3Rpb246IEBwcm9jZXNzO1xyXG4gIGFuaW1hdGlvbi1kaXJlY3Rpb246IEBwcm9jZXNzO1xyXG59XHJcblxyXG4uYW5pbWF0aW9uLWR1cmF0aW9uKC4uLikge1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbihyKXtyPXJ8fFwiMFwiO3ZhciBzPS9tc3xzL2dpLHQ9Lyg/Olxcc3xeKShcXC4/XFxkK1xcLj9cXGQqKSg/IVteKF0qXFwpfFxcd3wlfFxcLikvZ2k7cmV0dXJuIHMudGVzdChyKXx8XCIwXCI9PT1yfHwocj1yLnJlcGxhY2UodCxmdW5jdGlvbihyKXtyZXR1cm4gcis9cGFyc2VGbG9hdChyLDEwKT4xMD9cIm1zXCI6XCJzXCJ9KSkscn0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICAtd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjogQHByb2Nlc3M7XHJcbiAgLW1vei1hbmltYXRpb24tZHVyYXRpb246IEBwcm9jZXNzO1xyXG4gIC1vLWFuaW1hdGlvbi1kdXJhdGlvbjogQHByb2Nlc3M7XHJcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiBAcHJvY2VzcztcclxufVxyXG5cclxuLmFuaW1hdGlvbi1maWxsLW1vZGUoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKG4pe3JldHVybiBufHxcIm5vbmVcIn0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICAtd2Via2l0LWFuaW1hdGlvbi1maWxsLW1vZGU6IEBwcm9jZXNzO1xyXG4gIC1tb3otYW5pbWF0aW9uLWZpbGwtbW9kZTogQHByb2Nlc3M7XHJcbiAgLW8tYW5pbWF0aW9uLWZpbGwtbW9kZTogQHByb2Nlc3M7XHJcbiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogQHByb2Nlc3M7XHJcbn1cclxuXHJcbi5hbmltYXRpb24taXRlcmF0aW9uLWNvdW50KC4uLikge1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbihuKXtyZXR1cm4gbnx8XCIwXCJ9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiBAcHJvY2VzcztcclxuICAtbW96LWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IEBwcm9jZXNzO1xyXG4gIC1vLWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IEBwcm9jZXNzO1xyXG4gIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IEBwcm9jZXNzO1xyXG59XHJcblxyXG4uYW5pbWF0aW9uLW5hbWUoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKG4pe3JldHVybiBufHxcIm5vbmVcIn0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICAtd2Via2l0LWFuaW1hdGlvbi1uYW1lOiBAcHJvY2VzcztcclxuICAtbW96LWFuaW1hdGlvbi1uYW1lOiBAcHJvY2VzcztcclxuICAtby1hbmltYXRpb24tbmFtZTogQHByb2Nlc3M7XHJcbiAgYW5pbWF0aW9uLW5hbWU6IEBwcm9jZXNzO1xyXG59XHJcblxyXG4uYW5pbWF0aW9uLXBsYXktc3RhdGUoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKG4pe3JldHVybiBufHxcInJ1bm5pbmdcIn0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICAtd2Via2l0LWFuaW1hdGlvbi1wbGF5LXN0YXRlOiBAcHJvY2VzcztcclxuICAtbW96LWFuaW1hdGlvbi1wbGF5LXN0YXRlOiBAcHJvY2VzcztcclxuICAtby1hbmltYXRpb24tcGxheS1zdGF0ZTogQHByb2Nlc3M7XHJcbiAgYW5pbWF0aW9uLXBsYXktc3RhdGU6IEBwcm9jZXNzO1xyXG59XHJcblxyXG4uYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbiguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24oZSl7cmV0dXJuIGV8fFwiZWFzZVwifSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogQHByb2Nlc3M7XHJcbiAgLW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBAcHJvY2VzcztcclxuICAtby1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBAcHJvY2VzcztcclxuICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBAcHJvY2VzcztcclxufVxyXG5cclxuLmFwcGVhcmFuY2UoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKG4pe3JldHVybiBufHxcIm5vbmVcIn0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IEBwcm9jZXNzO1xyXG4gIC1tb3otYXBwZWFyYW5jZTogQHByb2Nlc3M7XHJcbiAgYXBwZWFyYW5jZTogQHByb2Nlc3M7XHJcbn1cclxuXHJcbi5iYWNrZmFjZS12aXNpYmlsaXR5KC4uLikge1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbihpKXtyZXR1cm4gaXx8XCJ2aXNpYmxlXCJ9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBAcHJvY2VzcztcclxuICAtbW96LWJhY2tmYWNlLXZpc2liaWxpdHk6IEBwcm9jZXNzO1xyXG4gIC1tcy1iYWNrZmFjZS12aXNpYmlsaXR5OiBAcHJvY2VzcztcclxuICAtby1iYWNrZmFjZS12aXNpYmlsaXR5OiBAcHJvY2VzcztcclxuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBAcHJvY2VzcztcclxufVxyXG5cclxuLmJhY2tncm91bmQtY2xpcCguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24ocil7cmV0dXJuIHJ8fFwiYm9yZGVyLWJveFwifSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtYmFja2dyb3VuZC1jbGlwOiBAcHJvY2VzcztcclxuICAtbW96LWJhY2tncm91bmQtY2xpcDogQHByb2Nlc3M7XHJcbiAgYmFja2dyb3VuZC1jbGlwOiBAcHJvY2VzcztcclxufVxyXG5cclxuLmJhY2tncm91bmQtaW1hZ2UoLi4uKSB7XHJcbiAgQHByb2Nlc3NfbXM6IH5gKGZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUodCl7dmFyIGUscixzLGEsbixpLG8sYyxnPVwiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLz1cIixkPTAsbD0wLGY9XCJcIixoPVtdO2lmKCF0KXJldHVybiB0O2RvIGU9dC5jaGFyQ29kZUF0KGQrKykscj10LmNoYXJDb2RlQXQoZCsrKSxzPXQuY2hhckNvZGVBdChkKyspLGM9ZTw8MTZ8cjw8OHxzLGE9Yz4+MTgmNjMsbj1jPj4xMiY2MyxpPWM+PjYmNjMsbz02MyZjLGhbbCsrXT1nLmNoYXJBdChhKStnLmNoYXJBdChuKStnLmNoYXJBdChpKStnLmNoYXJBdChvKTt3aGlsZShkPHQubGVuZ3RoKTtmPWguam9pbihcIlwiKTt2YXIgdT10Lmxlbmd0aCUzO3JldHVybih1P2Yuc2xpY2UoMCx1LTMpOmYpK1wiPT09XCIuc2xpY2UodXx8Myl9aWYodD10fHw4MTIxOTkxLDgxMjE5OTE9PXQpcmV0dXJuIHQ7dmFyIHI9L2xpbmVhcnxyYWRpYWwvZy50ZXN0KHQpJiZ0LnNwbGl0KC8sKD89XFxzKig/OmxpbmVhcnxyYWRpYWx8dXJsKSkvZykscz1bXSxhPXtcInRvIGJvdHRvbVwiOid4MT1cIjAlXCIgeTE9XCIwJVwiIHgyPVwiMCVcIiB5Mj1cIjEwMCVcIicsXCJ0byBsZWZ0XCI6J3gxPVwiMTAwJVwiIHkxPVwiMCVcIiB4Mj1cIjAlXCIgeTI9XCIwJVwiJyxcInRvIHRvcFwiOid4MT1cIjAlXCIgeTE9XCIxMDAlXCIgeDI9XCIwJVwiIHkyPVwiMCVcIicsXCJ0byByaWdodFwiOid4MT1cIjAlXCIgeTE9XCIwJVwiIHgyPVwiMTAwJVwiIHkyPVwiMCVcIicsZ2V0XCJ0b3BcIigpe3JldHVybiB0aGlzW1widG8gYm90dG9tXCJdfSxnZXRcIjE4MGRlZ1wiKCl7cmV0dXJuIHRoaXNbXCJ0byBib3R0b21cIl19LGdldFwicmlnaHRcIigpe3JldHVybiB0aGlzW1widG8gbGVmdFwiXX0sZ2V0XCIyNzBkZWdcIigpe3JldHVybiB0aGlzW1widG8gbGVmdFwiXX0sZ2V0XCJib3R0b21cIigpe3JldHVybiB0aGlzW1widG8gdG9wXCJdfSxnZXRcIjkwZGVnXCIoKXtyZXR1cm4gdGhpc1tcInRvIHJpZ2h0XCJdfSxnZXRcIjBkZWdcIigpe3JldHVybiB0aGlzW1widG8gdG9wXCJdfSxnZXRcImxlZnRcIigpe3JldHVybiB0aGlzW1widG8gcmlnaHRcIl19LFwiLTQ1ZGVnXCI6J3gxPVwiMCVcIiB5MT1cIjAlXCIgeDI9XCIxMDAlXCIgeTI9XCIxMDAlXCInLFwiNDVkZWdcIjoneDE9XCIwJVwiIHkxPVwiMTAwJVwiIHgyPVwiMTAwJVwiIHkyPVwiMCVcIicsXCJlbGxpcHNlIGF0IGNlbnRlclwiOidjeD1cIjUwJVwiIGN5PVwiNTAlXCIgcj1cIjc1JVwiJyxnZXRcIjEzNWRlZ1wiKCl7cmV0dXJuIHRoaXNbXCItNDVkZWdcIl19fSxuPXt1cmlfZGF0YTpcInVybChkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFwiLHhtbDonPD94bWwgdmVyc2lvbj1cIjEuMFwiID8+Jyxzdmdfc3RhcnQ6JzxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMTAwJVwiIGhlaWdodD1cIjEwMCVcIiB2aWV3Qm94PVwiMCAwIDEgMVwiIHByZXNlcnZlQXNwZWN0UmF0aW89XCJub25lXCI+JyxsaW5lYXJfZ3JhZGllbnRfc3RhcnQ6JzxsaW5lYXJHcmFkaWVudCBpZD1cImxlc3NoYXQtZ2VuZXJhdGVkXCIgZ3JhZGllbnRVbml0cz1cInVzZXJTcGFjZU9uVXNlXCInLHJhZGlhbF9ncmFkaWVudF9zdGFydDonPHJhZGlhbEdyYWRpZW50IGlkPVwibGVzc2hhdC1nZW5lcmF0ZWRcIiBncmFkaWVudFVuaXRzPVwidXNlclNwYWNlT25Vc2VcIicsbGluZWFyX2dyYWRpZW50X2VuZDpcIjwvbGluZWFyR3JhZGllbnQ+XCIscmFkaWFsX2dyYWRpZW50X2VuZDpcIjwvcmFkaWFsR3JhZGllbnQ+XCIscmVjdF9saW5lYXI6JzxyZWN0IHg9XCIwXCIgeT1cIjBcIiB3aWR0aD1cIjFcIiBoZWlnaHQ9XCIxXCIgZmlsbD1cInVybCgjbGVzc2hhdC1nZW5lcmF0ZWQpXCIgLz4nLHJlY3RfcmFkaWFsOic8cmVjdCB4PVwiLTUwXCIgeT1cIi01MFwiIHdpZHRoPVwiMTAxXCIgaGVpZ2h0PVwiMTAxXCIgZmlsbD1cInVybCgjbGVzc2hhdC1nZW5lcmF0ZWQpXCIgLz4nLHN2Z19lbmQ6XCI8L3N2Zz5cIn07aWYoci5sZW5ndGgpe3IuZm9yRWFjaChmdW5jdGlvbih0LGUpe3ZhciByPXt9O2lmKE9iamVjdC5rZXlzKGEpLnNvbWUoZnVuY3Rpb24oZSl7cmV0dXJuIHQuaW5kZXhPZihlKT49MD8oci5zdmdfZGlyZWN0aW9uPWFbZV0sITApOnZvaWQoci5zdmdfZGlyZWN0aW9uPSExKX0pLC9saW5lYXIvLnRlc3QodCkpci5zdmdfdHlwZT1cImxpbmVhclwiO2Vsc2UgaWYoL3JhZGlhbC8udGVzdCh0KSlyLnN2Z190eXBlPVwicmFkaWFsXCI7ZWxzZSBpZighL2xpbmVhci8udGVzdCh0KSYmIS9yYWRpYWwvLnRlc3QodCkpcmV0dXJuIHIudXJsPXQudHJpbSgpLHIuc3ZnX3R5cGU9XCJ1cmxcIixyLnN2Z19kaXJlY3Rpb249ITAscy5wdXNoKHIpLCExO3ZhciBuPXQubWF0Y2goL3JnYnwjW2EtekEtWjAtOV18aHNsL2cpLmxlbmd0aDtyLnN2Z19zdG9wcz1bXSx0PXQucmVwbGFjZSgvdHJhbnNwYXJlbnQvZyxcInJnYmEoMCwwLDAsMClcIiksdC5tYXRjaCgvI1thLXpBLVowLTldL2cpJiZ0Lm1hdGNoKC8oI1thLXpBLVowLTldKylcXHMqKFxcZCslKT8vZykuZm9yRWFjaChmdW5jdGlvbih0KXt0PXQuc3BsaXQoXCIgXCIpLHIuc3ZnX3N0b3BzLnB1c2goJzxzdG9wIG9mZnNldD1cIicrKHRbMV18fCExKSsnXCIgc3RvcC1jb2xvcj1cIicrdFswXSsnXCIgc3RvcC1vcGFjaXR5PVwiMVwiLz4nKX0pLHQubWF0Y2goL3JnYmE/XFwoXFxkKyxcXHMqXFxkKyxcXHMqXFxkKyg/OixcXHMqKDB8MXxcXC5cXGQrfDBcXC5cXGQrKSk/XFwpL2cpJiZ0LnJlcGxhY2UoL3JnYmE/XFwoKFxcZCssXFxzKlxcZCssXFxzKlxcZCspKD86LFxccyooMHwxfFxcLlxcZCt8MFxcLlxcZCspKT9cXClcXHMqKFxcZCslKT8vZyxmdW5jdGlvbih0LGUscyxhKXtyLnN2Z19zdG9wcy5wdXNoKCc8c3RvcCBvZmZzZXQ9XCInKyhhfHwhMSkrJ1wiIHN0b3AtY29sb3I9XCJyZ2IoJytlKycpXCIgc3RvcC1vcGFjaXR5PVwiJysoc3x8MSkrJ1wiLz4nKX0pLHQubWF0Y2goL2hzbGE/XFwoKFxcZCssXFxzKlxcZCslLFxccypcXGQrJSksXFxzKigwfDF8XFwuXFxkK3wwXFwuXFxkKylcXCkvZykmJnQucmVwbGFjZSgvaHNsYT9cXCgoXFxkKyxcXHMqXFxkKyUsXFxzKlxcZCslKSxcXHMqKDB8MXxcXC5cXGQrfDBcXC5cXGQrKVxcKVxccyooXFxkKyUpPy9nLGZ1bmN0aW9uKHQsZSxzLGEpe3Iuc3ZnX3N0b3BzLnB1c2goJzxzdG9wIG9mZnNldD1cIicrKGF8fCExKSsnXCIgc3RvcC1jb2xvcj1cImhzbCgnK2UrJylcIiBzdG9wLW9wYWNpdHk9XCInKyhzfHwxKSsnXCIvPicpfSk7dmFyIGk9TWF0aC5mbG9vcigxMDAvKG4tMSkpO3Iuc3ZnX3N0b3BzLmZvckVhY2goZnVuY3Rpb24odCxlKXsvb2Zmc2V0PVwiZmFsc2VcIi8udGVzdCh0KSYmKHIuc3ZnX3N0b3BzW2VdPXQucmVwbGFjZSgvb2Zmc2V0PVwiZmFsc2VcIi8sJ29mZnNldD1cIicraSplKyclXCInKSl9KSxyLnN2Z19zdG9wcy5zb3J0KGZ1bmN0aW9uKHQsZSl7aWYodD10Lm1hdGNoKC9vZmZzZXQ9XCIoXFxkKyklXCIvKSxlPWUubWF0Y2goL29mZnNldD1cIihcXGQrKSVcIi8pLDI9PXQubGVuZ3RoJiYyPT1lLmxlbmd0aClyZXR1cm4gdFsxXS1lWzFdfSkscy5wdXNoKHIpfSk7dmFyIGk9W10sbz1zLmV2ZXJ5KGZ1bmN0aW9uKHQpe2Zvcih2YXIgZSBpbiB0KWlmKDA9PXRbZV18fDA9PXRbZV0ubGVuZ3RoKXJldHVybiExO3JldHVybiEwfSk7aWYoIW8pcmV0dXJuIDgxMjE5OTE7cy5mb3JFYWNoKGZ1bmN0aW9uKHQsZSl7XCJsaW5lYXJcIiE9dC5zdmdfdHlwZSYmXCJyYWRpYWxcIiE9dC5zdmdfdHlwZXx8KGlbZV09bi54bWwrbi5zdmdfc3RhcnQpLFwibGluZWFyXCI9PXQuc3ZnX3R5cGU/KGlbZV0rPW4ubGluZWFyX2dyYWRpZW50X3N0YXJ0K1wiIFwiK3Quc3ZnX2RpcmVjdGlvbitcIj5cIix0LnN2Z19zdG9wcy5mb3JFYWNoKGZ1bmN0aW9uKHQpe2lbZV0rPXR9KSxpW2VdKz1uLmxpbmVhcl9ncmFkaWVudF9lbmQsaVtlXSs9bi5yZWN0X2xpbmVhcixpW2VdKz1uLnN2Z19lbmQpOlwicmFkaWFsXCI9PXQuc3ZnX3R5cGU/KGlbZV0rPW4ucmFkaWFsX2dyYWRpZW50X3N0YXJ0K1wiIFwiK3Quc3ZnX2RpcmVjdGlvbitcIj5cIix0LnN2Z19zdG9wcy5mb3JFYWNoKGZ1bmN0aW9uKHQpe2lbZV0rPXR9KSxpW2VdKz1uLnJhZGlhbF9ncmFkaWVudF9lbmQsaVtlXSs9bi5yZWN0X3JhZGlhbCxpW2VdKz1uLnN2Z19lbmQpOlwidXJsXCI9PXQuc3ZnX3R5cGUmJihpW2VdPXQudXJsKX0pLGkuZm9yRWFjaChmdW5jdGlvbih0LHIpey88XFw/eG1sIHZlcnNpb249XCIxLjBcIiBcXD8+L2cudGVzdCh0KSYmKGlbcl09bi51cmlfZGF0YStlKHQpK1wiKVwiKX0pLHQ9aS5qb2luKFwiLFwiKX1yZXR1cm4gdH0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICBAcHJvY2Vzc193ZWJraXQ6IH5gKGZ1bmN0aW9uKGUpe2lmKGU9ZXx8ODEyMTk5MSw4MTIxOTkxPT1lKXJldHVybiBlO3ZhciByPXtcInRvIGJvdHRvbVwiOlwidG9wXCIsXCJ0byBsZWZ0XCI6XCJyaWdodFwiLFwidG8gdG9wXCI6XCJib3R0b21cIixcInRvIHJpZ2h0XCI6XCJsZWZ0XCIsXCJlbGxpcHNlIGF0IGNlbnRlclwiOlwiY2VudGVyLCBlbGxpcHNlIGNvdmVyXCIsXCJjaXJjbGUgY2xvc2VzdC1zaWRlXCI6XCJjZW50ZXIgY2VudGVyLCBjaXJjbGUgY29udGFpblwiLFwiY2lyY2xlIGZhcnRoZXN0LWNvcm5lclwiOlwiY2VudGVyIGNlbnRlciwgY2lyY2xlIGNvdmVyXCIsXCJjaXJjbGUgZmFydGhlc3Qtc2lkZVwiOlwiY2VudGVyIGNlbnRlciwgY2lyY2xlIGNvdmVyXCIsXCJlbGxpcHNlIGNsb3Nlc3Qtc2lkZVwiOlwiY2VudGVyIGNlbnRlciwgZWxsaXBzZSBjb250YWluXCIsXCJlbGxpcHNlIGZhcnRoZXN0LWNvcm5lclwiOlwiY2VudGVyIGNlbnRlciwgZWxsaXBzZSBjb3ZlclwiLFwiZWxsaXBzZSBmYXJ0aGVzdC1zaWRlXCI6XCJjZW50ZXIgY2VudGVyLCBlbGxpcHNlIGNvdmVyXCJ9LHQ9LyhyYWRpYWwtZ3JhZGllbnRcXCgpKFthLXotIF0rKWF0XFxzKyhcXHcrJT8pXFxzKihcXHcqJT8pL2csYz1PYmplY3Qua2V5cyhyKTtyZXR1cm4gYy5zb21lKGZ1bmN0aW9uKGMpe3JldHVybiBlLmluZGV4T2YoYyk+PTA/KGU9ZS5yZXBsYWNlKG5ldyBSZWdFeHAoYytcIig/IVsgYS16MC05XSlcIixcImdcIikscltjXSksITApOnZvaWQodC50ZXN0KGUpJiYoZT1lLnJlcGxhY2UodCxmdW5jdGlvbihlLHIsdCxjLGkpe3JldHVybiByLnRyaW0oKStjLnRyaW0oKStcIiBcIitpLnRyaW0oKStcIixcIit0LnJlcGxhY2UoL2Nsb3Nlc3Qtc2lkZS9nLFwiY29udGFpblwiKS5yZXBsYWNlKC9mYXJ0aGVzdC1jb3JuZXIvZyxcImNvdmVyXCIpLnRyaW0oKX0pKSl9KSxlPWUucmVwbGFjZSgvKFxcZCspXFxzKmRlZy9nLGZ1bmN0aW9uKGUscil7cmV0dXJuIDkwLXIrXCJkZWdcIn0pLnJlcGxhY2UoLyhsaW5lYXJ8cmFkaWFsKS1ncmFkaWVudC9nLFwiLXdlYmtpdC0kMS1ncmFkaWVudFwiKX0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICBAcHJvY2Vzc19tb3o6IH5gKGZ1bmN0aW9uKGUpe2lmKGU9ZXx8ODEyMTk5MSw4MTIxOTkxPT1lKXJldHVybiBlO3ZhciByPXtcInRvIGJvdHRvbVwiOlwidG9wXCIsXCJ0byBsZWZ0XCI6XCJyaWdodFwiLFwidG8gdG9wXCI6XCJib3R0b21cIixcInRvIHJpZ2h0XCI6XCJsZWZ0XCIsXCJlbGxpcHNlIGF0IGNlbnRlclwiOlwiY2VudGVyLCBlbGxpcHNlIGNvdmVyXCIsXCJjaXJjbGUgY2xvc2VzdC1zaWRlXCI6XCJjZW50ZXIgY2VudGVyLCBjaXJjbGUgY29udGFpblwiLFwiY2lyY2xlIGZhcnRoZXN0LWNvcm5lclwiOlwiY2VudGVyIGNlbnRlciwgY2lyY2xlIGNvdmVyXCIsXCJjaXJjbGUgZmFydGhlc3Qtc2lkZVwiOlwiY2VudGVyIGNlbnRlciwgY2lyY2xlIGNvdmVyXCIsXCJlbGxpcHNlIGNsb3Nlc3Qtc2lkZVwiOlwiY2VudGVyIGNlbnRlciwgZWxsaXBzZSBjb250YWluXCIsXCJlbGxpcHNlIGZhcnRoZXN0LWNvcm5lclwiOlwiY2VudGVyIGNlbnRlciwgZWxsaXBzZSBjb3ZlclwiLFwiZWxsaXBzZSBmYXJ0aGVzdC1zaWRlXCI6XCJjZW50ZXIgY2VudGVyLCBlbGxpcHNlIGNvdmVyXCJ9LHQ9LyhyYWRpYWwtZ3JhZGllbnRcXCgpKFthLXotIF0rKWF0XFxzKyhcXHcrJT8pXFxzKihcXHcqJT8pL2csYz1PYmplY3Qua2V5cyhyKTtyZXR1cm4gYy5zb21lKGZ1bmN0aW9uKGMpe3JldHVybiBlLmluZGV4T2YoYyk+PTA/KGU9ZS5yZXBsYWNlKG5ldyBSZWdFeHAoYytcIig/IVsgYS16MC05XSlcIixcImdcIikscltjXSksITApOnZvaWQodC50ZXN0KGUpJiYoZT1lLnJlcGxhY2UodCxmdW5jdGlvbihlLHIsdCxjLG4pe3JldHVybiByLnRyaW0oKStjLnRyaW0oKStcIiBcIituLnRyaW0oKStcIixcIit0LnJlcGxhY2UoL2Nsb3Nlc3Qtc2lkZS9nLFwiY29udGFpblwiKS5yZXBsYWNlKC9mYXJ0aGVzdC1jb3JuZXIvZyxcImNvdmVyXCIpLnRyaW0oKX0pKSl9KSxlPWUucmVwbGFjZSgvKFxcZCspXFxzKmRlZy9nLGZ1bmN0aW9uKGUscil7cmV0dXJuIDkwLXIrXCJkZWdcIn0pLnJlcGxhY2UoLyhsaW5lYXJ8cmFkaWFsKS1ncmFkaWVudC9nLFwiLW1vei0kMS1ncmFkaWVudFwiKX0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICBAcHJvY2Vzc19vcGVyYTogfmAoZnVuY3Rpb24oZSl7aWYoZT1lfHw4MTIxOTkxLDgxMjE5OTE9PWUpcmV0dXJuIGU7dmFyIHI9e1widG8gYm90dG9tXCI6XCJ0b3BcIixcInRvIGxlZnRcIjpcInJpZ2h0XCIsXCJ0byB0b3BcIjpcImJvdHRvbVwiLFwidG8gcmlnaHRcIjpcImxlZnRcIixcImVsbGlwc2UgYXQgY2VudGVyXCI6XCJjZW50ZXIsIGVsbGlwc2UgY292ZXJcIixcImNpcmNsZSBjbG9zZXN0LXNpZGVcIjpcImNlbnRlciBjZW50ZXIsIGNpcmNsZSBjb250YWluXCIsXCJjaXJjbGUgZmFydGhlc3QtY29ybmVyXCI6XCJjZW50ZXIgY2VudGVyLCBjaXJjbGUgY292ZXJcIixcImNpcmNsZSBmYXJ0aGVzdC1zaWRlXCI6XCJjZW50ZXIgY2VudGVyLCBjaXJjbGUgY292ZXJcIixcImVsbGlwc2UgY2xvc2VzdC1zaWRlXCI6XCJjZW50ZXIgY2VudGVyLCBlbGxpcHNlIGNvbnRhaW5cIixcImVsbGlwc2UgZmFydGhlc3QtY29ybmVyXCI6XCJjZW50ZXIgY2VudGVyLCBlbGxpcHNlIGNvdmVyXCIsXCJlbGxpcHNlIGZhcnRoZXN0LXNpZGVcIjpcImNlbnRlciBjZW50ZXIsIGVsbGlwc2UgY292ZXJcIn0sdD0vKHJhZGlhbC1ncmFkaWVudFxcKCkoW2Etei0gXSspYXRcXHMrKFxcdyslPylcXHMqKFxcdyolPykvZyxjPU9iamVjdC5rZXlzKHIpO3JldHVybiBjLnNvbWUoZnVuY3Rpb24oYyl7cmV0dXJuIGUuaW5kZXhPZihjKT49MD8oZT1lLnJlcGxhY2UobmV3IFJlZ0V4cChjK1wiKD8hWyBhLXowLTldKVwiLFwiZ1wiKSxyW2NdKSwhMCk6dm9pZCh0LnRlc3QoZSkmJihlPWUucmVwbGFjZSh0LGZ1bmN0aW9uKGUscix0LGMsbil7cmV0dXJuIHIudHJpbSgpK2MudHJpbSgpK1wiIFwiK24udHJpbSgpK1wiLFwiK3QucmVwbGFjZSgvY2xvc2VzdC1zaWRlL2csXCJjb250YWluXCIpLnJlcGxhY2UoL2ZhcnRoZXN0LWNvcm5lci9nLFwiY292ZXJcIikudHJpbSgpfSkpKX0pLGU9ZS5yZXBsYWNlKC8oXFxkKylcXHMqZGVnL2csZnVuY3Rpb24oZSxyKXtyZXR1cm4gOTAtcitcImRlZ1wifSkucmVwbGFjZSgvKGxpbmVhcnxyYWRpYWwpLWdyYWRpZW50L2csXCItby0kMS1ncmFkaWVudFwiKX0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24odCl7aWYodD10fHw4MTIxOTkxLDgxMjE5OTE9PXQpcmV0dXJuIHQ7dmFyIGU9e3RvcDpcInRvIGJvdHRvbVwiLHJpZ2h0OlwidG8gbGVmdFwiLGJvdHRvbTpcInRvIHRvcFwiLGxlZnQ6XCJ0byByaWdodFwifSxvPU9iamVjdC5rZXlzKGUpO3JldHVybiBvLnNvbWUoZnVuY3Rpb24obyl7aWYodC5pbmRleE9mKG8pPj0wJiYhbmV3IFJlZ0V4cChcInRvXFxcXHMrXCIrbytcInxhdFxcXFxzK1wiK28sXCJnXCIpLnRlc3QodCkpcmV0dXJuIHQ9dC5yZXBsYWNlKG5ldyBSZWdFeHAobyksZVtvXSksITB9KSx0fSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IEBwcm9jZXNzX21zO1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IEBwcm9jZXNzX3dlYmtpdDtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiBAcHJvY2Vzc19tb3o7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogQHByb2Nlc3Nfb3BlcmE7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogQHByb2Nlc3M7XHJcbn1cclxuXHJcbi5iYWNrZ3JvdW5kLW9yaWdpbiguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24obil7cmV0dXJuIG58fFwicGFkZGluZy1ib3hcIn0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICAtd2Via2l0LWJhY2tncm91bmQtb3JpZ2luOiBAcHJvY2VzcztcclxuICAtbW96LWJhY2tncm91bmQtb3JpZ2luOiBAcHJvY2VzcztcclxuICBiYWNrZ3JvdW5kLW9yaWdpbjogQHByb2Nlc3M7XHJcbn1cclxuXHJcbi5iYWNrZ3JvdW5kLXNpemUoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKHQpe3Q9dHx8XCJhdXRvIGF1dG9cIjt2YXIgZT0vXFxkL2dpLHI9Lyg/Olxcc3xeKShcXC4/XFxkK1xcLj9cXGQqKSg/IVteKF0qXFwpfFxcd3wlfFxcLikvZ2k7cmV0dXJuL15bXiwgXSosLy50ZXN0KHQpJiYodD10LnJlcGxhY2UoLyg/OiwpKD8hW14oXSpcXCkpL2csXCJcIikpLGUudGVzdCh0KSYmKHQ9dC5yZXBsYWNlKHIsZnVuY3Rpb24odCl7cmV0dXJuIDA9PXQmJnR8fHQrXCJweFwifSkpLHR9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC1iYWNrZ3JvdW5kLXNpemU6IEBwcm9jZXNzO1xyXG4gIC1tb3otYmFja2dyb3VuZC1zaXplOiBAcHJvY2VzcztcclxuICBiYWNrZ3JvdW5kLXNpemU6IEBwcm9jZXNzO1xyXG59XHJcblxyXG4uYmx1ciguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24obil7bj1ufHxcIjBcIjt2YXIgcj0vXFxkL2dpLHQ9Lyg/Olxcc3xeKShcXC4/XFxkK1xcLj9cXGQqKSg/IVteKF0qXFwpfFxcd3wlfFxcLikvZ2k7cmV0dXJuIHIudGVzdChuKSYmKG49bi5yZXBsYWNlKHQsZnVuY3Rpb24obil7cmV0dXJuIDA9PW4mJm58fG4rXCJweFwifSkpLG59KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC1maWx0ZXI6IGJsdXIoQHByb2Nlc3MpO1xyXG4gIC1tb3otZmlsdGVyOiBibHVyKEBwcm9jZXNzKTtcclxuICAtbXMtZmlsdGVyOiBibHVyKEBwcm9jZXNzKTtcclxuICBmaWx0ZXI6IGJsdXIoQHByb2Nlc3MpO1xyXG59XHJcblxyXG4uYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1cyguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24oZSl7ZT1lfHxcIjBcIjt2YXIgdD0vXFxkL2dpLHI9Lyg/Olxcc3xeKShcXC4/XFxkK1xcLj9cXGQqKSg/IVteKF0qXFwpfFxcd3wlfFxcLikvZ2k7cmV0dXJuL15bXiwgXSosLy50ZXN0KGUpJiYoZT1lLnJlcGxhY2UoLyg/OiwpKD8hW14oXSpcXCkpL2csXCJcIikpLHQudGVzdChlKSYmKGU9ZS5yZXBsYWNlKHIsZnVuY3Rpb24oZSl7cmV0dXJuIDA9PWUmJmV8fGUrXCJweFwifSkpLGV9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC1ib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiBAcHJvY2VzczsgLXdlYmtpdC1iYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94OyBcclxuICAtbW96LWJvcmRlci1yYWRpdXMtYm90dG9tbGVmdDogQHByb2Nlc3M7IC1tb3otYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nOyBcclxuICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiBAcHJvY2VzczsgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDsgXHJcbn1cclxuXHJcbi5ib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1cyguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24oZSl7ZT1lfHxcIjBcIjt2YXIgdD0vXFxkL2dpLHI9Lyg/Olxcc3xeKShcXC4/XFxkK1xcLj9cXGQqKSg/IVteKF0qXFwpfFxcd3wlfFxcLikvZ2k7cmV0dXJuL15bXiwgXSosLy50ZXN0KGUpJiYoZT1lLnJlcGxhY2UoLyg/OiwpKD8hW14oXSpcXCkpL2csXCJcIikpLHQudGVzdChlKSYmKGU9ZS5yZXBsYWNlKHIsZnVuY3Rpb24oZSl7cmV0dXJuIDA9PWUmJmV8fGUrXCJweFwifSkpLGV9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC1ib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogQHByb2Nlc3M7IC13ZWJraXQtYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDsgXHJcbiAgLW1vei1ib3JkZXItcmFkaXVzLWJvdHRvbXJpZ2h0OiBAcHJvY2VzczsgLW1vei1iYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmc7IFxyXG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiBAcHJvY2VzczsgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDsgXHJcbn1cclxuXHJcbi5ib3JkZXItaW1hZ2UoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKGUpe3JldHVybiBlPWV8fDgxMjE5OTEsL15bXiwgXSosLy50ZXN0KGUpJiYoZT1lLnJlcGxhY2UoLyg/OiwpKD8hW14oXSpcXCkpL2csXCJcIikpLGV9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC1ib3JkZXItaW1hZ2U6IEBwcm9jZXNzO1xyXG4gIC1tb3otYm9yZGVyLWltYWdlOiBAcHJvY2VzcztcclxuICAtby1ib3JkZXItaW1hZ2U6IEBwcm9jZXNzO1xyXG4gIGJvcmRlci1pbWFnZTogQHByb2Nlc3M7XHJcbn1cclxuXHJcbi5ib3JkZXItcmFkaXVzKC4uLikge1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbihlKXtlPWV8fFwiMFwiO3ZhciB0PS9cXGQvZ2kscj0vKD86XFxzfF4pKFxcLj9cXGQrXFwuP1xcZCopKD8hW14oXSpcXCl8XFx3fCV8XFwuKS9naTtyZXR1cm4vXlteLCBdKiwvLnRlc3QoZSkmJihlPWUucmVwbGFjZSgvKD86LCkoPyFbXihdKlxcKSkvZyxcIlwiKSksdC50ZXN0KGUpJiYoZT1lLnJlcGxhY2UocixmdW5jdGlvbihlKXtyZXR1cm4gMD09ZSYmZXx8ZStcInB4XCJ9KSksZX0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IEBwcm9jZXNzOyAtd2Via2l0LWJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7IFxyXG4gIC1tb3otYm9yZGVyLXJhZGl1czogQHByb2Nlc3M7IC1tb3otYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nOyBcclxuICBib3JkZXItcmFkaXVzOiBAcHJvY2VzczsgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDsgXHJcbn1cclxuXHJcbi5ib3JkZXItdG9wLWxlZnQtcmFkaXVzKC4uLikge1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbihlKXtlPWV8fFwiMFwiO3ZhciB0PS9cXGQvZ2kscj0vKD86XFxzfF4pKFxcLj9cXGQrXFwuP1xcZCopKD8hW14oXSpcXCl8XFx3fCV8XFwuKS9naTtyZXR1cm4vXlteLCBdKiwvLnRlc3QoZSkmJihlPWUucmVwbGFjZSgvKD86LCkoPyFbXihdKlxcKSkvZyxcIlwiKSksdC50ZXN0KGUpJiYoZT1lLnJlcGxhY2UocixmdW5jdGlvbihlKXtyZXR1cm4gMD09ZSYmZXx8ZStcInB4XCJ9KSksZX0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICAtd2Via2l0LWJvcmRlci10b3AtbGVmdC1yYWRpdXM6IEBwcm9jZXNzOyAtd2Via2l0LWJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7IFxyXG4gIC1tb3otYm9yZGVyLXJhZGl1cy10b3BsZWZ0OiBAcHJvY2VzczsgLW1vei1iYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmc7IFxyXG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IEBwcm9jZXNzOyBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94OyBcclxufVxyXG5cclxuLmJvcmRlci10b3AtcmlnaHQtcmFkaXVzKC4uLikge1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbihlKXtlPWV8fFwiMFwiO3ZhciB0PS9cXGQvZ2kscj0vKD86XFxzfF4pKFxcLj9cXGQrXFwuP1xcZCopKD8hW14oXSpcXCl8XFx3fCV8XFwuKS9naTtyZXR1cm4vXlteLCBdKiwvLnRlc3QoZSkmJihlPWUucmVwbGFjZSgvKD86LCkoPyFbXihdKlxcKSkvZyxcIlwiKSksdC50ZXN0KGUpJiYoZT1lLnJlcGxhY2UocixmdW5jdGlvbihlKXtyZXR1cm4gMD09ZSYmZXx8ZStcInB4XCJ9KSksZX0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICAtd2Via2l0LWJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiBAcHJvY2VzczsgLXdlYmtpdC1iYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94OyBcclxuICAtbW96LWJvcmRlci1yYWRpdXMtdG9wcmlnaHQ6IEBwcm9jZXNzOyAtbW96LWJhY2tncm91bmQtY2xpcDogcGFkZGluZzsgXHJcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IEBwcm9jZXNzOyBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94OyBcclxufVxyXG5cclxuLmJveC1zaGFkb3coLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKGUpe2U9ZXx8XCIwXCI7dmFyIHQ9L1xcZC9naSxyPS8oPzpcXHN8XikoXFwuP1xcZCtcXC4/XFxkKikoPyFbXihdKlxcKXxcXHd8JXxcXC4pL2dpO3JldHVybi9eW14sIF0qLC8udGVzdChlKSYmKGU9ZS5yZXBsYWNlKC8oPzosKSg/IVteKF0qXFwpKS9nLFwiXCIpKSx0LnRlc3QoZSkmJihlPWUucmVwbGFjZShyLGZ1bmN0aW9uKGUpe3JldHVybiAwPT1lJiZlfHxlK1wicHhcIn0pKSxlfSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtYm94LXNoYWRvdzogQHByb2Nlc3M7XHJcbiAgLW1vei1ib3gtc2hhZG93OiBAcHJvY2VzcztcclxuICBib3gtc2hhZG93OiBAcHJvY2VzcztcclxufVxyXG5cclxuLmJveC1zaXppbmcoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKG4pe3JldHVybiBuPW58fFwiY29udGVudC1ib3hcIn0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICAtd2Via2l0LWJveC1zaXppbmc6IEBwcm9jZXNzO1xyXG4gIC1tb3otYm94LXNpemluZzogQHByb2Nlc3M7XHJcbiAgYm94LXNpemluZzogQHByb2Nlc3M7XHJcbn1cclxuXHJcbi5icmlnaHRuZXNzKC4uLikge1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbihuKXtyZXR1cm4gbj1ufHxcIjFcIn0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICAtd2Via2l0LWZpbHRlcjogYnJpZ2h0bmVzcyhAcHJvY2Vzcyk7XHJcbiAgLW1vei1maWx0ZXI6IGJyaWdodG5lc3MoQHByb2Nlc3MpO1xyXG4gIC1tcy1maWx0ZXI6IGJyaWdodG5lc3MoQHByb2Nlc3MpO1xyXG4gIGZpbHRlcjogYnJpZ2h0bmVzcyhAcHJvY2Vzcyk7XHJcbn1cclxuXHJcbi5jYWxjKC4uLikge1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbihhKXtmdW5jdGlvbiBjKGMsdCl7dmFyIHI9XCIpO1xcblwiLHM9ZS5zcGxpdChcIixcIiksbD1zWzBdK1wiOlwiK2MrXCIoXCIrKHNbMV0udHJpbSgpfHwwKStyO1wic3RhcnRcIj09dD9hPVwiMDtcXG5cIitsOmErPWx9YT1hfHw4MTIxOTkxO3ZhciB0PVwiQHtzdGF0ZX1cIixlPWE7aWYoODEyMTk5MT09YSlyZXR1cm4gYTtzd2l0Y2godCl7Y2FzZVwiMVwiOmMoXCItd2Via2l0LWNhbGNcIixcInN0YXJ0XCIpLGMoXCItbW96LWNhbGNcIiksYyhcImNhbGNcIik7YnJlYWs7Y2FzZVwiMlwiOmMoXCItd2Via2l0LWNhbGNcIixcInN0YXJ0XCIpLGMoXCItbW96LWNhbGNcIik7YnJlYWs7Y2FzZVwiM1wiOmMoXCItd2Via2l0LWNhbGNcIixcInN0YXJ0XCIpLGMoXCJjYWxjXCIpO2JyZWFrO2Nhc2VcIjRcIjpjKFwiLXdlYmtpdC1jYWxjXCIsXCJzdGFydFwiKTticmVhaztjYXNlXCI1XCI6YyhcIi1tb3otY2FsY1wiLFwic3RhcnRcIiksYyhcImNhbGNcIik7YnJlYWs7Y2FzZVwiNlwiOmMoXCItbW96LWNhbGNcIixcInN0YXJ0XCIpO2JyZWFrO2Nhc2VcIjdcIjpjKFwiY2FsY1wiLFwic3RhcnRcIil9cmV0dXJuIGE9YS5yZXBsYWNlKC87JC9nLFwiXCIpfSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIEBzdGF0ZTogMTsgLWxoLXByb3BlcnR5OiBAcHJvY2VzcztcclxuXHJcbn1cclxuXHJcbi5jb2x1bW4tY291bnQoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKG4pe3JldHVybiBuPW58fFwiYXV0b1wifSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtY29sdW1uLWNvdW50OiBAcHJvY2VzcztcclxuICAtbW96LWNvbHVtbi1jb3VudDogQHByb2Nlc3M7XHJcbiAgY29sdW1uLWNvdW50OiBAcHJvY2VzcztcclxufVxyXG5cclxuLmNvbHVtbi1nYXAoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKG4pe249bnx8XCJub3JtYWxcIjt2YXIgcj0vXFxkL2dpLHQ9Lyg/Olxcc3xeKShcXC4/XFxkK1xcLj9cXGQqKSg/IVteKF0qXFwpfFxcd3wlfFxcLikvZ2k7cmV0dXJuIHIudGVzdChuKSYmKG49bi5yZXBsYWNlKHQsZnVuY3Rpb24obil7cmV0dXJuIDA9PW4mJm58fG4rXCJweFwifSkpLG59KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC1jb2x1bW4tZ2FwOiBAcHJvY2VzcztcclxuICAtbW96LWNvbHVtbi1nYXA6IEBwcm9jZXNzO1xyXG4gIGNvbHVtbi1nYXA6IEBwcm9jZXNzO1xyXG59XHJcblxyXG4uY29sdW1uLXJ1bGUoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKGUpe2U9ZXx8XCJtZWRpdW0gbm9uZSBibGFja1wiO3ZhciBuPS9cXGQvZ2ksdD0vKD86XFxzfF4pKFxcLj9cXGQrXFwuP1xcZCopKD8hW14oXSpcXCl8XFx3fCV8XFwuKS9naTtyZXR1cm4vXlteLCBdKiwvLnRlc3QoZSkmJihlPWUucmVwbGFjZSgvKD86LCkoPyFbXihdKlxcKSkvZyxcIlwiKSksbi50ZXN0KGUpJiYoZT1lLnJlcGxhY2UodCxmdW5jdGlvbihlKXtyZXR1cm4gMD09ZSYmZXx8ZStcInB4XCJ9KSksZX0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICAtd2Via2l0LWNvbHVtbi1ydWxlOiBAcHJvY2VzcztcclxuICAtbW96LWNvbHVtbi1ydWxlOiBAcHJvY2VzcztcclxuICBjb2x1bW4tcnVsZTogQHByb2Nlc3M7XHJcbn1cclxuXHJcbi5jb2x1bW4td2lkdGgoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKHQpe3Q9dHx8XCJhdXRvXCI7dmFyIG49L1xcZC9naSxyPS8oPzpcXHN8XikoXFwuP1xcZCtcXC4/XFxkKikoPyFbXihdKlxcKXxcXHd8JXxcXC4pL2dpO3JldHVybiBuLnRlc3QodCkmJih0PXQucmVwbGFjZShyLGZ1bmN0aW9uKHQpe3JldHVybiAwPT10JiZ0fHx0K1wicHhcIn0pKSx0fSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtY29sdW1uLXdpZHRoOiBAcHJvY2VzcztcclxuICAtbW96LWNvbHVtbi13aWR0aDogQHByb2Nlc3M7XHJcbiAgY29sdW1uLXdpZHRoOiBAcHJvY2VzcztcclxufVxyXG5cclxuLmNvbHVtbnMoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKHQpe3Q9dHx8XCJhdXRvIGF1dG9cIjt2YXIgZT0vXlxcZCskLztyZXR1cm4vXlteLCBdKiwvLnRlc3QodCkmJih0PXQucmVwbGFjZSgvKD86LCkoPyFbXihdKlxcKSkvZyxcIlwiKSx0PXQuc3BsaXQoXCIgXCIpKSxlLnRlc3QodFswXSkmJih0WzBdPXRbMF0rXCJweFwiKSx0LmpvaW4oXCIgXCIpfSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtY29sdW1uczogQHByb2Nlc3M7XHJcbiAgLW1vei1jb2x1bW5zOiBAcHJvY2VzcztcclxuICBjb2x1bW5zOiBAcHJvY2VzcztcclxufVxyXG5cclxuLmNvbnRyYXN0KC4uLikge1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbihuKXtuPW58fFwiMTAwJVwiO3ZhciByPS9cXGQvZ2ksdD0vKD86XFxzfF4pKFxcLj9cXGQrXFwuP1xcZCopKD8hW14oXSpcXCl8XFx3fCV8XFwuKS9naTtyZXR1cm4gci50ZXN0KG4pJiYobj1uLnJlcGxhY2UodCxmdW5jdGlvbihuKXtyZXR1cm4gMD09biYmbnx8bitcIiVcIn0pKSxufSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtZmlsdGVyOiB+XCJjb250cmFzdChAe3Byb2Nlc3N9KVwiO1xyXG4gIC1tb3otZmlsdGVyOiB+XCJjb250cmFzdChAe3Byb2Nlc3N9KVwiO1xyXG4gIC1tcy1maWx0ZXI6IH5cImNvbnRyYXN0KEB7cHJvY2Vzc30pXCI7XHJcbiAgZmlsdGVyOiB+XCJjb250cmFzdChAe3Byb2Nlc3N9KVwiO1xyXG59XHJcblxyXG4uZGlzcGxheSguLi4pIHtcclxuICBAcHJvY2Vzc19vbGR3ZWJraXQ6IH5gKGZ1bmN0aW9uKGUpe3JldHVybiBlPVwiZmxleFwiPT1lfHxcImlubGluZS1mbGV4XCI9PWU/XCItd2Via2l0LWJveFwiOjgxMjE5OTF9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgQHByb2Nlc3NfbW96OiB+YChmdW5jdGlvbihuKXtyZXR1cm4gbj1cImZsZXhcIj09bnx8XCJpbmxpbmUtZmxleFwiPT1uP1wiLW1vei1ib3hcIjo4MTIxOTkxfSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIEBwcm9jZXNzX3dlYmtpdDogfmAoZnVuY3Rpb24oZSl7cmV0dXJuIGU9XCJmbGV4XCI9PWV8fFwiaW5saW5lLWZsZXhcIj09ZT9cIi13ZWJraXQtXCIrZTo4MTIxOTkxfSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIEBwcm9jZXNzX21zOiB+YChmdW5jdGlvbihlKXtyZXR1cm4gZT1cImZsZXhcIj09ZT9cIi1tcy1mbGV4Ym94XCI6XCJpbmxpbmUtZmxleFwiPT1lP1wiLW1zLWlubGluZS1mbGV4Ym94XCI6ODEyMTk5MX0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24obil7cmV0dXJuXCJmbGV4XCIhPW4mJlwiaW5saW5lLWZsZXhcIiE9biYmKG49ODEyMTk5MSksbn0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICBkaXNwbGF5OiBAcHJvY2Vzc19vbGR3ZWJraXQ7XHJcbiAgZGlzcGxheTogQHByb2Nlc3NfbW96O1xyXG4gIGRpc3BsYXk6IEBwcm9jZXNzX3dlYmtpdDtcclxuICBkaXNwbGF5OiBAcHJvY2Vzc19tcztcclxuICBkaXNwbGF5OiBAcHJvY2VzcztcclxufVxyXG5cclxuLmRyb3Atc2hhZG93KC4uLikge1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbihlKXtpZihlPWV8fDgxMjE5OTEsODEyMTk5MT09ZSlyZXR1cm4gZTt2YXIgcj0vXFxkL2dpLHQ9Lyg/Olxcc3xeKShcXC4/XFxkK1xcLj9cXGQqKSg/IVteKF0qXFwpfFxcd3wlfFxcLikvZ2k7cmV0dXJuL15bXiwgXSosLy50ZXN0KGUpJiYoZT1lLnJlcGxhY2UoLyg/OiwpKD8hW14oXSpcXCkpL2csXCJcIikpLHIudGVzdChlKSYmKGU9ZS5yZXBsYWNlKHQsZnVuY3Rpb24oZSl7cmV0dXJuIDA9PWUmJmV8fGUrXCJweFwifSkpLGV9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC1maWx0ZXI6IGRyb3Atc2hhZG93KEBwcm9jZXNzKTtcclxuICAtbW96LWZpbHRlcjogZHJvcC1zaGFkb3coQHByb2Nlc3MpO1xyXG4gIC1tcy1maWx0ZXI6IGRyb3Atc2hhZG93KEBwcm9jZXNzKTtcclxuICBmaWx0ZXI6IGRyb3Atc2hhZG93KEBwcm9jZXNzKTtcclxufVxyXG5cclxuLmZpbHRlciguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24oZSl7cmV0dXJuIGU9ZXx8XCJub25lXCIsL15bXiwgXSosLy50ZXN0KGUpJiYoZT1lLnJlcGxhY2UoLyg/OiwpKD8hW14oXSpcXCkpL2csXCJcIikpLGV9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC1maWx0ZXI6IEBwcm9jZXNzO1xyXG4gIC1tb3otZmlsdGVyOiBAcHJvY2VzcztcclxuICAtbXMtZmlsdGVyOiBAcHJvY2VzcztcclxuICBmaWx0ZXI6IEBwcm9jZXNzO1xyXG59XHJcblxyXG4uZmxleCguLi4pIHtcclxuICBAcHJvY2Vzc19vbGRlcndlYmtpdDogfmAoZnVuY3Rpb24odCl7cmV0dXJuL15cXGQrLy50ZXN0KHQpP3Q9dC5tYXRjaCgvXlxcZCsvKVswXTpcIlwiPT10JiYodD1cIjBcIiksdH0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICBAcHJvY2Vzc19tb3o6IH5gKGZ1bmN0aW9uKHQpe3JldHVybi9eXFxkKy8udGVzdCh0KT90PXQubWF0Y2goL15cXGQrLylbMF06XCJcIj09dCYmKHQ9XCIwXCIpLHR9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKHQpe3JldHVybiB0PXR8fFwiMCAxIGF1dG9cIiwvXlteLCBdKiwvLnRlc3QodCkmJih0PXQucmVwbGFjZSgvKD86LCkoPyFbXihdKlxcKSkvZyxcIlwiKSksdH0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICAtd2Via2l0LWJveC1mbGV4OiBAcHJvY2Vzc19vbGRlcndlYmtpdDtcclxuICAtbW96LWJveC1mbGV4OiBAcHJvY2Vzc19tb3o7XHJcbiAgLXdlYmtpdC1mbGV4OiBAcHJvY2VzcztcclxuICAtbXMtZmxleDogQHByb2Nlc3M7XHJcbiAgZmxleDogQHByb2Nlc3M7XHJcbn1cclxuXHJcbi5mbGV4LWJhc2lzKC4uLikge1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbih0KXt0PXR8fFwiYXV0b1wiO3ZhciBuPS9cXGQvZ2kscj0vKD86XFxzfF4pKFxcLj9cXGQrXFwuP1xcZCopKD8hW14oXSpcXCl8XFx3fCV8XFwuKS9naTtyZXR1cm4gbi50ZXN0KHQpJiYodD10LnJlcGxhY2UocixmdW5jdGlvbih0KXtyZXR1cm4gMD09dCYmdHx8dCtcInB4XCJ9KSksdH0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICAtd2Via2l0LWZsZXgtYmFzaXM6IEBwcm9jZXNzO1xyXG4gIGZsZXgtYmFzaXM6IEBwcm9jZXNzO1xyXG59XHJcblxyXG4uZmxleC1kaXJlY3Rpb24oLi4uKSB7XHJcbiAgQHByb2Nlc3Nfb2xkZXN0d2Via2l0OiB+YChmdW5jdGlvbihyKXtyZXR1cm4gcj1cInJvd1wiPT1yfHxcImNvbHVtblwiPT1yP1wibm9ybWFsXCI6XCJyb3ctcmV2ZXJzZVwiPT1yfHxcImNvbHVtbi1yZXZlcnNlXCI9PXI/XCJyZXZlcnNlXCI6ODEyMTk5MX0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICBAcHJvY2Vzc19vbGRlcm1vejogfmAoZnVuY3Rpb24ocil7cmV0dXJuIHI9XCJyb3dcIj09cnx8XCJjb2x1bW5cIj09cj9cIm5vcm1hbFwiOlwicm93LXJldmVyc2VcIj09cnx8XCJjb2x1bW4tcmV2ZXJzZVwiPT1yP1wicmV2ZXJzZVwiOjgxMjE5OTF9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgQHByb2Nlc3Nfb2xkZXJ3ZWJraXQ6IH5gKGZ1bmN0aW9uKHIpe3JldHVybiByPVwicm93XCI9PXJ8fFwicm93LXJldmVyc2VcIj09cj9cImhvcml6b250YWxcIjpcImNvbHVtblwiPT1yfHxcImNvbHVtbi1yZXZlcnNlXCI9PXI/XCJ2ZXJ0aWNhbFwiOjgxMjE5OTF9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgQHByb2Nlc3NfbW96OiB+YChmdW5jdGlvbihyKXtyZXR1cm4gcj1cInJvd1wiPT1yfHxcInJvdy1yZXZlcnNlXCI9PXI/XCJob3Jpem9udGFsXCI6XCJjb2x1bW5cIj09cnx8XCJjb2x1bW4tcmV2ZXJzZVwiPT1yP1widmVydGljYWxcIjo4MTIxOTkxfSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbihuKXtyZXR1cm4gbj1ufHxcInJvd1wifSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtYm94LWRpcmVjdGlvbjogQHByb2Nlc3Nfb2xkZXN0d2Via2l0O1xyXG4gIC1tb3otYm94LWRpcmVjdGlvbjogQHByb2Nlc3Nfb2xkZXJtb3o7XHJcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiBAcHJvY2Vzc19vbGRlcndlYmtpdDtcclxuICAtbW96LWJveC1vcmllbnQ6IEBwcm9jZXNzX21vejtcclxuICAtd2Via2l0LWZsZXgtZGlyZWN0aW9uOiBAcHJvY2VzcztcclxuICAtbXMtZmxleC1kaXJlY3Rpb246IEBwcm9jZXNzO1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBAcHJvY2VzcztcclxufVxyXG5cclxuLmZsZXgtZ3JvdyguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24obil7cmV0dXJuIG49bnx8XCIwXCJ9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC1mbGV4LWdyb3c6IEBwcm9jZXNzO1xyXG4gIGZsZXgtZ3JvdzogQHByb2Nlc3M7XHJcbn1cclxuXHJcbi5mbGV4LXNocmluayguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24obil7cmV0dXJuIG49bnx8XCIxXCJ9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC1mbGV4LXNocmluazogQHByb2Nlc3M7XHJcbiAgZmxleC1zaHJpbms6IEBwcm9jZXNzO1xyXG59XHJcblxyXG4uZmxleC13cmFwKC4uLikge1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbihuKXtyZXR1cm4gbj1ufHxcIm5vd3JhcFwifSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtZmxleC13cmFwOiBAcHJvY2VzcztcclxuICAtbXMtZmxleC13cmFwOiBAcHJvY2VzcztcclxuICBmbGV4LXdyYXA6IEBwcm9jZXNzO1xyXG59XHJcblxyXG5cclxuLmdyYXlzY2FsZSguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24obil7bj1ufHxcIjBcIjt2YXIgcj0vXFxkL2dpLHQ9Lyg/Olxcc3xeKShcXC4/XFxkK1xcLj9cXGQqKSg/IVteKF0qXFwpfFxcd3wlfFxcLikvZ2k7cmV0dXJuIHIudGVzdChuKSYmKG49bi5yZXBsYWNlKHQsZnVuY3Rpb24obil7cmV0dXJuIDA9PW4mJm58fG4rXCIlXCJ9KSksbn0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICAtd2Via2l0LWZpbHRlcjogZ3JheXNjYWxlKEBwcm9jZXNzKTtcclxuICAtbW96LWZpbHRlcjogZ3JheXNjYWxlKEBwcm9jZXNzKTtcclxuICAtbXMtZmlsdGVyOiBncmF5c2NhbGUoQHByb2Nlc3MpO1xyXG4gIGZpbHRlcjogZ3JheXNjYWxlKEBwcm9jZXNzKTtcclxufVxyXG5cclxuLmh1ZS1yb3RhdGUoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKGUpe2U9ZXx8XCIwXCI7dmFyIG49L1xcZC9naSxyPS8oPzpcXHN8XikoXFwuP1xcZCtcXC4/XFxkKikoPyFbXihdKlxcKXxcXHd8JXxcXC4pL2dpO3JldHVybiBuLnRlc3QoZSkmJihlPWUucmVwbGFjZShyLGZ1bmN0aW9uKGUpe3JldHVybiAwPT1lJiZlfHxlK1wiZGVnXCJ9KSksZX0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICAtd2Via2l0LWZpbHRlcjogaHVlLXJvdGF0ZShAcHJvY2Vzcyk7XHJcbiAgLW1vei1maWx0ZXI6IGh1ZS1yb3RhdGUoQHByb2Nlc3MpO1xyXG4gIC1tcy1maWx0ZXI6IGh1ZS1yb3RhdGUoQHByb2Nlc3MpO1xyXG4gIGZpbHRlcjogaHVlLXJvdGF0ZShAcHJvY2Vzcyk7XHJcbn1cclxuXHJcbi5oeXBoZW5zKC4uLikge1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbihuKXtyZXR1cm4gbj1ufHxcIm1hbnVhbFwifSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtaHlwaGVuczogQHByb2Nlc3M7XHJcbiAgLW1vei1oeXBoZW5zOiBAcHJvY2VzcztcclxuICAtbXMtaHlwaGVuczogQHByb2Nlc3M7XHJcbiAgaHlwaGVuczogQHByb2Nlc3M7XHJcbn1cclxuXHJcbi5pbnZlcnQoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKG4pe249bnx8XCIxMDAlXCI7dmFyIHI9L1xcZC9naSx0PS8oPzpcXHN8XikoXFwuP1xcZCtcXC4/XFxkKikoPyFbXihdKlxcKXxcXHd8JXxcXC4pL2dpO3JldHVybiByLnRlc3QobikmJihuPW4ucmVwbGFjZSh0LGZ1bmN0aW9uKG4pe3JldHVybiAwPT1uJiZufHxuK1wiJVwifSkpLG59KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC1maWx0ZXI6IGludmVydChAcHJvY2Vzcyk7XHJcbiAgLW1vei1maWx0ZXI6IGludmVydChAcHJvY2Vzcyk7XHJcbiAgLW1zLWZpbHRlcjogaW52ZXJ0KEBwcm9jZXNzKTtcclxuICBmaWx0ZXI6IGludmVydChAcHJvY2Vzcyk7XHJcbn1cclxuXHJcbi5qdXN0aWZ5LWNvbnRlbnQoLi4uKSB7XHJcbiAgQHByb2Nlc3Nfb2xkZXN0V2Via2l0OiB+YChmdW5jdGlvbihlKXtyZXR1cm4gZT1lfHxcInN0YXJ0XCIsXCJmbGV4LXN0YXJ0XCI9PWU/ZT1cInN0YXJ0XCI6XCJmbGV4LWVuZFwiPT1lP2U9XCJlbmRcIjpcInNwYWNlLWJldHdlZW5cIiE9ZSYmXCJzcGFjZS1hcm91bmRcIiE9ZXx8KGU9XCJqdXN0aWZ5XCIpLGV9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgQHByb2Nlc3NfbW96OiB+YChmdW5jdGlvbihlKXtyZXR1cm4gZT1lfHxcInN0YXJ0XCIsXCJmbGV4LXN0YXJ0XCI9PWU/ZT1cInN0YXJ0XCI6XCJmbGV4LWVuZFwiPT1lP2U9XCJlbmRcIjpcInNwYWNlLWJldHdlZW5cIiE9ZSYmXCJzcGFjZS1hcm91bmRcIiE9ZXx8KGU9XCJqdXN0aWZ5XCIpLGV9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgQHByb2Nlc3NfbXM6IH5gKGZ1bmN0aW9uKHQpe3JldHVybiB0PXR8fFwic3RhcnRcIixcImZsZXgtc3RhcnRcIj09dD90PVwic3RhcnRcIjpcImZsZXgtZW5kXCI9PXQ/dD1cImVuZFwiOlwic3BhY2UtYmV0d2VlblwiPT10P3Q9XCJqdXN0aWZ5XCI6XCJzcGFjZS1hcm91bmRcIj09dCYmKHQ9XCJkaXN0cmlidXRlXCIpLHR9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKHQpe3JldHVybiB0PXR8fFwiZmxleC1zdGFydFwifSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtYm94LXBhY2s6IEBwcm9jZXNzX29sZGVzdFdlYmtpdDtcclxuICAtbW96LWJveC1wYWNrOiBAcHJvY2Vzc19tb3o7XHJcbiAgLW1zLWZsZXgtcGFjazogQHByb2Nlc3NfbXM7XHJcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IEBwcm9jZXNzO1xyXG4gIGp1c3RpZnktY29udGVudDogQHByb2Nlc3M7XHJcbn1cclxuXHJcbi5rZXlmcmFtZXMoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKGUpe2Z1bmN0aW9uIGEoYSxyLGspe3ZhciBuPVwifVxcblwiLG09dC5zcGxpdCgvKF5bYS16QS1aMC05LV0rKSwvZyksbz1yK1wiIFwiK21bMV0rXCJ7XCIsZj1bXCItd2Via2l0LVwiLFwiLW1vei1cIixcIi1tcy1cIixcIlwiXTtrP3MuZm9yRWFjaChmdW5jdGlvbihhLHIpe2UuaW5kZXhPZihhKSE9PS0xJiYobVsyXT1tWzJdLnJlcGxhY2UobmV3IFJlZ0V4cChhLFwiZ1wiKSxmdW5jdGlvbihlKXtyZXR1cm4gaytlfSkpfSk6bVsyXT1tWzJdLnJlcGxhY2UoL3soW159XSspfS9nLGZ1bmN0aW9uKGUsYSl7dmFyIHI9YS5zcGxpdChcIjtcIik7ci5mb3JFYWNoKGZ1bmN0aW9uKGUsYSl7cy5mb3JFYWNoKGZ1bmN0aW9uKHQpe2UuaW5kZXhPZih0KSE9PS0xJiYoclthXT1cIlwiLGYuZm9yRWFjaChmdW5jdGlvbihzKXtyW2FdKz1lLnRyaW0oKS5yZXBsYWNlKG5ldyBSZWdFeHAodCxcImdcIiksZnVuY3Rpb24oZSl7cmV0dXJuIHMrZX0pK1wiO1wifSkpfSl9KTt2YXIgdD1yLmpvaW4oXCI7XCIpLnJlcGxhY2UoLzs7L2csXCI7XCIpO3JldHVybiBlLnJlcGxhY2UoYSx0KX0pLG8rPW1bMl0rbixcInN0YXJ0XCI9PWE/ZT1cIjA7IH0gXFxuXCIrbzpcInN0YXJ0ZW5kXCI9PWE/ZT1cIjA7IH0gXFxuXCIrby5yZXBsYWNlKG4sXCJcIik6ZSs9XCJlbmRcIj09YT9vLnJlcGxhY2UobixcIlwiKTpvfWU9ZXx8ODEyMTk5MTt2YXIgcj1cIkB7c3RhdGV9XCIsdD1lO2lmKDgxMjE5OTE9PWUpcmV0dXJuIGU7dmFyIHM9W1wiYW5pbWF0aW9uXCIsXCJ0cmFuc2Zvcm1cIixcImZpbHRlclwiXTtzd2l0Y2gocil7Y2FzZVwiMVwiOmEoXCJzdGFydFwiLFwiQC13ZWJraXQta2V5ZnJhbWVzXCIsXCItd2Via2l0LVwiKSxhKG51bGwsXCJALW1vei1rZXlmcmFtZXNcIixcIi1tb3otXCIpLGEobnVsbCxcIkAtby1rZXlmcmFtZXNcIixcIi1vLVwiKSxhKFwiZW5kXCIsXCJAa2V5ZnJhbWVzXCIpO2JyZWFrO2Nhc2VcIjJcIjphKFwic3RhcnRcIixcIkAtd2Via2l0LWtleWZyYW1lc1wiLFwiLXdlYmtpdC1cIiksYShudWxsLFwiQC1tb3ota2V5ZnJhbWVzXCIsXCItbW96LVwiKSxhKFwiZW5kXCIsXCJAa2V5ZnJhbWVzXCIpO2JyZWFrO2Nhc2VcIjNcIjphKFwic3RhcnRcIixcIkAtd2Via2l0LWtleWZyYW1lc1wiLFwiLXdlYmtpdC1cIiksYShudWxsLFwiQC1tb3ota2V5ZnJhbWVzXCIsXCItbW96LVwiKSxhKFwiZW5kXCIsXCJALW8ta2V5ZnJhbWVzXCIsXCItby1cIik7YnJlYWs7Y2FzZVwiNFwiOmEoXCJzdGFydFwiLFwiQC13ZWJraXQta2V5ZnJhbWVzXCIsXCItd2Via2l0LVwiKSxhKG51bGwsXCJALW8ta2V5ZnJhbWVzXCIsXCItby1cIiksYShcImVuZFwiLFwiQGtleWZyYW1lc1wiKTticmVhaztjYXNlXCI1XCI6YShcInN0YXJ0XCIsXCJALXdlYmtpdC1rZXlmcmFtZXNcIixcIi13ZWJraXQtXCIpLGEoXCJlbmRcIixcIkAtbW96LWtleWZyYW1lc1wiLFwiLW1vei1cIik7YnJlYWs7Y2FzZVwiNlwiOmEoXCJzdGFydFwiLFwiQC13ZWJraXQta2V5ZnJhbWVzXCIsXCItd2Via2l0LVwiKSxhKFwiZW5kXCIsXCJALW8ta2V5ZnJhbWVzXCIsXCItby1cIik7YnJlYWs7Y2FzZVwiN1wiOmEoXCJzdGFydFwiLFwiQC13ZWJraXQta2V5ZnJhbWVzXCIsXCItd2Via2l0LVwiKSxhKFwiZW5kXCIsXCJAa2V5ZnJhbWVzXCIpO2JyZWFrO2Nhc2VcIjhcIjphKFwic3RhcnRlbmRcIixcIkAtd2Via2l0LWtleWZyYW1lc1wiLFwiLXdlYmtpdC1cIik7YnJlYWs7Y2FzZVwiOVwiOmEoXCJzdGFydFwiLFwiQC1tb3ota2V5ZnJhbWVzXCIsXCItbW96LVwiKSxhKG51bGwsXCJALW8ta2V5ZnJhbWVzXCIsXCItby1cIiksYShcImVuZFwiLFwiQGtleWZyYW1lc1wiKTticmVhaztjYXNlXCIxMFwiOmEoXCJzdGFydFwiLFwiQC1tb3ota2V5ZnJhbWVzXCIsXCItbW96LVwiKSxhKFwiZW5kXCIsXCJALW8ta2V5ZnJhbWVzXCIsXCItby1cIik7YnJlYWs7Y2FzZVwiMTFcIjphKFwic3RhcnRcIixcIkAtbW96LWtleWZyYW1lc1wiLFwiLW1vei1cIiksYShcImVuZFwiLFwiQGtleWZyYW1lc1wiKTticmVhaztjYXNlXCIxMlwiOmEoXCJzdGFydGVuZFwiLFwiQC1tb3ota2V5ZnJhbWVzXCIsXCItbW96LVwiKTticmVhaztjYXNlXCIxM1wiOmEoXCJzdGFydFwiLFwiQC1vLWtleWZyYW1lc1wiLFwiLW8tXCIpLGEoXCJlbmRcIixcIkBrZXlmcmFtZXNcIik7YnJlYWs7Y2FzZVwiMTRcIjphKFwic3RhcnRlbmRcIixcIkAtby1rZXlmcmFtZXNcIixcIi1vLVwiKTticmVhaztjYXNlXCIxNVwiOmEoXCJzdGFydGVuZFwiLFwiQGtleWZyYW1lc1wiKX1yZXR1cm4gZStcIn1cXG5bbm90LWV4aXN0aW5nXSB7XFxuICB6b29tOiAxXCJ9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgQHN0YXRlOiAxOyBsZXNzaGF0LXNlbGVjdG9yIHsgLWxoLXByb3BlcnR5OiBAcHJvY2VzczsgfVxyXG5cclxuXHJcblxyXG59XHJcblxyXG4ub3BhY2l0eSguLi4pIHtcclxuICBAcHJvY2Vzc19tczogfmAoZnVuY3Rpb24oYSl7cmV0dXJuIGE9YXx8XCJmaWx0ZXI6IGFscGhhKG9wYWNpdHk9MTAwKVwiLFwiYWxwaGEob3BhY2l0eT1cIitNYXRoLmZsb29yKDEwMCphKStcIilcIn0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24obil7cmV0dXJuIG49bnx8XCIxXCJ9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgIHpvb206IDE7IGZpbHRlcjogQHByb2Nlc3NfbXM7XHJcbiAgLXdlYmtpdC1vcGFjaXR5OiBAcHJvY2VzcztcclxuICAtbW96LW9wYWNpdHk6IEBwcm9jZXNzO1xyXG4gIG9wYWNpdHk6IEBwcm9jZXNzO1xyXG59XHJcblxyXG4ub3JkZXIoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKG4pe3JldHVybiBuPW58fFwiMFwifSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtYm94LW9yZGluYWwtZ3JvdXA6IEBwcm9jZXNzO1xyXG4gIC1tb3otYm94LW9yZGluYWwtZ3JvdXA6IEBwcm9jZXNzO1xyXG4gIC1tcy1mbGV4LW9yZGVyOiBAcHJvY2VzcztcclxuICAtd2Via2l0LW9yZGVyOiBAcHJvY2VzcztcclxuICBvcmRlcjogQHByb2Nlc3M7XHJcbn1cclxuXHJcbi5wZXJzcGVjdGl2ZSguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24obil7bj1ufHxcIm5vbmVcIjt2YXIgZT0vXFxkL2dpLHI9Lyg/Olxcc3xeKShcXC4/XFxkK1xcLj9cXGQqKSg/IVteKF0qXFwpfFxcd3wlfFxcLikvZ2k7cmV0dXJuIGUudGVzdChuKSYmKG49bi5yZXBsYWNlKHIsZnVuY3Rpb24obil7cmV0dXJuIDA9PW4mJm58fG4rXCJweFwifSkpLG59KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC1wZXJzcGVjdGl2ZTogQHByb2Nlc3M7XHJcbiAgLW1vei1wZXJzcGVjdGl2ZTogQHByb2Nlc3M7XHJcbiAgcGVyc3BlY3RpdmU6IEBwcm9jZXNzO1xyXG59XHJcblxyXG4ucGVyc3BlY3RpdmUtb3JpZ2luKC4uLikge1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbihlKXtlPWV8fFwiNTAlIDUwJVwiO3ZhciB0PS9cXGQvZ2kscj0vKD86XFxzfF4pKFxcLj9cXGQrXFwuP1xcZCopKD8hW14oXSpcXCl8XFx3fCV8XFwuKS9naTtyZXR1cm4vXlteLCBdKiwvLnRlc3QoZSkmJihlPWUucmVwbGFjZSgvKD86LCkoPyFbXihdKlxcKSkvZyxcIlwiKSksdC50ZXN0KGUpJiYoZT1lLnJlcGxhY2UocixmdW5jdGlvbihlKXtyZXR1cm4gMD09ZSYmZXx8ZStcIiVcIn0pKSxlfSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtcGVyc3BlY3RpdmUtb3JpZ2luOiBAcHJvY2VzcztcclxuICAtbW96LXBlcnNwZWN0aXZlLW9yaWdpbjogQHByb2Nlc3M7XHJcbiAgcGVyc3BlY3RpdmUtb3JpZ2luOiBAcHJvY2VzcztcclxufVxyXG5cclxuLnBsYWNlaG9sZGVyKEBjb2xvcjojYWFhLCBAZWxlbWVudDogMDgxMjE5OTEpIHtcclxuICAuaW5jZXB0aW9uIChAYXJndW1lbnRzKSB3aGVuIG5vdCAoQGVsZW1lbnQgPSAwODEyMTk5MSkge1xyXG4gICAgQHtlbGVtZW50fTo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XHJcbiAgICAgICBjb2xvcjogQGNvbG9yO1xyXG4gICAgfVxyXG4gICAgQHtlbGVtZW50fTotbW96LXBsYWNlaG9sZGVyIHtcclxuICAgICAgIGNvbG9yOiBAY29sb3I7XHJcbiAgICB9XHJcbiAgICBAe2VsZW1lbnR9OjotbW96LXBsYWNlaG9sZGVyIHtcclxuICAgICAgIGNvbG9yOiBAY29sb3I7XHJcbiAgICB9XHJcbiAgICBAe2VsZW1lbnR9Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XHJcbiAgICAgICBjb2xvcjogQGNvbG9yO1xyXG4gICAgfVxyXG4gIH1cclxuICAuaW5jZXB0aW9uIChAYXJndW1lbnRzKSB3aGVuIChAZWxlbWVudCA9IDA4MTIxOTkxKSB7XHJcbiAgICAmOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcclxuICAgICAgIGNvbG9yOiBAY29sb3I7XHJcbiAgICB9XHJcbiAgICAmOi1tb3otcGxhY2Vob2xkZXIge1xyXG4gICAgICAgY29sb3I6IEBjb2xvcjtcclxuICAgIH1cclxuICAgICY6Oi1tb3otcGxhY2Vob2xkZXIge1xyXG4gICAgICAgY29sb3I6IEBjb2xvcjtcclxuICAgIH1cclxuICAgICY6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcclxuICAgICAgIGNvbG9yOiBAY29sb3I7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC5pbmNlcHRpb24oQGFyZ3VtZW50cyk7XHJcbn1cclxuXHJcbi5yb3RhdGUoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKGUpe2U9ZXx8XCIwXCI7dmFyIG49L1xcZC9naSxyPS8oPzpcXHN8XikoXFwuP1xcZCtcXC4/XFxkKikoPyFbXihdKlxcKXxcXHd8JXxcXC4pL2dpO3JldHVybiBuLnRlc3QoZSkmJihlPWUucmVwbGFjZShyLGZ1bmN0aW9uKGUpe3JldHVybiAwPT1lJiZlfHxlK1wiZGVnXCJ9KSksZX0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKEBwcm9jZXNzKTtcclxuICAtbW96LXRyYW5zZm9ybTogcm90YXRlKEBwcm9jZXNzKTtcclxuICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoQHByb2Nlc3MpO1xyXG4gIC1vLXRyYW5zZm9ybTogcm90YXRlKEBwcm9jZXNzKTtcclxuICB0cmFuc2Zvcm06IHJvdGF0ZShAcHJvY2Vzcyk7XHJcbn1cclxuXHJcbi5yb3RhdGUzZCguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24obil7cmV0dXJuIG49bnx8XCIwLCAwLCAwLCAwXCIsbj1uLnJlcGxhY2UoLyxcXHMqXFxkKyQvLGZ1bmN0aW9uKG4pe3JldHVybiBuK1wiZGVnXCJ9KX0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlM2QoQHByb2Nlc3MpO1xyXG4gIC1tb3otdHJhbnNmb3JtOiByb3RhdGUzZChAcHJvY2Vzcyk7XHJcbiAgLW1zLXRyYW5zZm9ybTogcm90YXRlM2QoQHByb2Nlc3MpO1xyXG4gIC1vLXRyYW5zZm9ybTogcm90YXRlM2QoQHByb2Nlc3MpO1xyXG4gIHRyYW5zZm9ybTogcm90YXRlM2QoQHByb2Nlc3MpO1xyXG59XHJcblxyXG4ucm90YXRlWCguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24oZSl7ZT1lfHxcIjBcIjt2YXIgbj0vXFxkL2dpLHI9Lyg/Olxcc3xeKShcXC4/XFxkK1xcLj9cXGQqKSg/IVteKF0qXFwpfFxcd3wlfFxcLikvZ2k7cmV0dXJuIG4udGVzdChlKSYmKGU9ZS5yZXBsYWNlKHIsZnVuY3Rpb24oZSl7cmV0dXJuIDA9PWUmJmV8fGUrXCJkZWdcIn0pKSxlfSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGVYKEBwcm9jZXNzKTtcclxuICAtbW96LXRyYW5zZm9ybTogcm90YXRlWChAcHJvY2Vzcyk7XHJcbiAgLW1zLXRyYW5zZm9ybTogcm90YXRlWChAcHJvY2Vzcyk7XHJcbiAgLW8tdHJhbnNmb3JtOiByb3RhdGVYKEBwcm9jZXNzKTtcclxuICB0cmFuc2Zvcm06IHJvdGF0ZVgoQHByb2Nlc3MpO1xyXG59XHJcblxyXG4ucm90YXRlWSguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24oZSl7ZT1lfHxcIjBcIjt2YXIgbj0vXFxkL2dpLHI9Lyg/Olxcc3xeKShcXC4/XFxkK1xcLj9cXGQqKSg/IVteKF0qXFwpfFxcd3wlfFxcLikvZ2k7cmV0dXJuIG4udGVzdChlKSYmKGU9ZS5yZXBsYWNlKHIsZnVuY3Rpb24oZSl7cmV0dXJuIDA9PWUmJmV8fGUrXCJkZWdcIn0pKSxlfSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGVZKEBwcm9jZXNzKTtcclxuICAtbW96LXRyYW5zZm9ybTogcm90YXRlWShAcHJvY2Vzcyk7XHJcbiAgLW1zLXRyYW5zZm9ybTogcm90YXRlWShAcHJvY2Vzcyk7XHJcbiAgLW8tdHJhbnNmb3JtOiByb3RhdGVZKEBwcm9jZXNzKTtcclxuICB0cmFuc2Zvcm06IHJvdGF0ZVkoQHByb2Nlc3MpO1xyXG59XHJcblxyXG4ucm90YXRlWiguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24oZSl7ZT1lfHxcIjBcIjt2YXIgbj0vXFxkL2dpLHI9Lyg/Olxcc3xeKShcXC4/XFxkK1xcLj9cXGQqKSg/IVteKF0qXFwpfFxcd3wlfFxcLikvZ2k7cmV0dXJuIG4udGVzdChlKSYmKGU9ZS5yZXBsYWNlKHIsZnVuY3Rpb24oZSl7cmV0dXJuIDA9PWUmJmV8fGUrXCJkZWdcIn0pKSxlfSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGVaKEBwcm9jZXNzKTtcclxuICAtbW96LXRyYW5zZm9ybTogcm90YXRlWihAcHJvY2Vzcyk7XHJcbiAgLW1zLXRyYW5zZm9ybTogcm90YXRlWihAcHJvY2Vzcyk7XHJcbiAgLW8tdHJhbnNmb3JtOiByb3RhdGVaKEBwcm9jZXNzKTtcclxuICB0cmFuc2Zvcm06IHJvdGF0ZVooQHByb2Nlc3MpO1xyXG59XHJcblxyXG4uc2F0dXJhdGUoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKG4pe249bnx8XCIxMDAlXCI7dmFyIHI9L1xcZC9naSx0PS8oPzpcXHN8XikoXFwuP1xcZCtcXC4/XFxkKikoPyFbXihdKlxcKXxcXHd8JXxcXC4pL2dpO3JldHVybiByLnRlc3QobikmJihuPW4ucmVwbGFjZSh0LGZ1bmN0aW9uKG4pe3JldHVybiAwPT1uJiZufHxuK1wiJVwifSkpLG59KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC1maWx0ZXI6IH5cInNhdHVyYXRlKEB7cHJvY2Vzc30pXCI7XHJcbiAgLW1vei1maWx0ZXI6IH5cInNhdHVyYXRlKEB7cHJvY2Vzc30pXCI7XHJcbiAgLW1zLWZpbHRlcjogflwic2F0dXJhdGUoQHtwcm9jZXNzfSlcIjtcclxuICBmaWx0ZXI6IH5cInNhdHVyYXRlKEB7cHJvY2Vzc30pXCI7XHJcbn1cclxuXHJcbi5zY2FsZSguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24obil7cmV0dXJuIG49bnx8XCIxXCJ9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKEBwcm9jZXNzKTtcclxuICAtbW96LXRyYW5zZm9ybTogc2NhbGUoQHByb2Nlc3MpO1xyXG4gIC1tcy10cmFuc2Zvcm06IHNjYWxlKEBwcm9jZXNzKTtcclxuICAtby10cmFuc2Zvcm06IHNjYWxlKEBwcm9jZXNzKTtcclxuICB0cmFuc2Zvcm06IHNjYWxlKEBwcm9jZXNzKTtcclxufVxyXG5cclxuLnNjYWxlM2QoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKG4pe3JldHVybiBuPW58fFwiMSwgMSwgMVwifSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKEBwcm9jZXNzKTtcclxuICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZChAcHJvY2Vzcyk7XHJcbiAgLW1zLXRyYW5zZm9ybTogc2NhbGUzZChAcHJvY2Vzcyk7XHJcbiAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKEBwcm9jZXNzKTtcclxuICB0cmFuc2Zvcm06IHNjYWxlM2QoQHByb2Nlc3MpO1xyXG59XHJcblxyXG4uc2NhbGVYKC4uLikge1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbihuKXtyZXR1cm4gbj1ufHxcIjFcIn0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGVYKEBwcm9jZXNzKTtcclxuICAtbW96LXRyYW5zZm9ybTogc2NhbGVYKEBwcm9jZXNzKTtcclxuICAtbXMtdHJhbnNmb3JtOiBzY2FsZVgoQHByb2Nlc3MpO1xyXG4gIC1vLXRyYW5zZm9ybTogc2NhbGVYKEBwcm9jZXNzKTtcclxuICB0cmFuc2Zvcm06IHNjYWxlWChAcHJvY2Vzcyk7XHJcbn1cclxuXHJcbi5zY2FsZVkoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKG4pe3JldHVybiBuPW58fFwiMVwifSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZVkoQHByb2Nlc3MpO1xyXG4gIC1tb3otdHJhbnNmb3JtOiBzY2FsZVkoQHByb2Nlc3MpO1xyXG4gIC1tcy10cmFuc2Zvcm06IHNjYWxlWShAcHJvY2Vzcyk7XHJcbiAgLW8tdHJhbnNmb3JtOiBzY2FsZVkoQHByb2Nlc3MpO1xyXG4gIHRyYW5zZm9ybTogc2NhbGVZKEBwcm9jZXNzKTtcclxufVxyXG5cclxuLnNjYWxlWiguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24obil7cmV0dXJuIG49bnx8XCIxXCJ9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlWihAcHJvY2Vzcyk7XHJcbiAgLW1vei10cmFuc2Zvcm06IHNjYWxlWihAcHJvY2Vzcyk7XHJcbiAgLW1zLXRyYW5zZm9ybTogc2NhbGVaKEBwcm9jZXNzKTtcclxuICAtby10cmFuc2Zvcm06IHNjYWxlWihAcHJvY2Vzcyk7XHJcbiAgdHJhbnNmb3JtOiBzY2FsZVooQHByb2Nlc3MpO1xyXG59XHJcblxyXG4uc2VsZWN0aW9uKC4uLikge1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbihlKXtmdW5jdGlvbiB0KHQsbil7dmFyIHI9XCJ9XFxuXCIscz1hLnNwbGl0KFwiLFwiKSxjPShzWzFdfHxcIlwiKStuK1wie1wiK3NbMF0rcjtcInN0YXJ0XCI9PXQ/ZT1cIjA7IH0gXFxuXCIrYzpcInN0YXJ0ZW5kXCI9PXQ/ZT1cIjA7IH0gXFxuXCIrYy5yZXBsYWNlKHIsXCJcIik6ZSs9XCJlbmRcIj09dD9jLnJlcGxhY2UocixcIlwiKTpjfWU9ZXx8ODEyMTk5MTt2YXIgbj1cIkB7c3RhdGV9XCIsYT1lO2lmKDgxMjE5OTE9PWUpcmV0dXJuIGU7c3dpdGNoKG4pe2Nhc2VcIjFcIjp0KFwic3RhcnRcIixcIjo6c2VsZWN0aW9uXCIpLHQoXCJlbmRcIixcIjo6LW1vei1zZWxlY3Rpb25cIik7YnJlYWs7Y2FzZVwiMlwiOnQoXCJzdGFydGVuZFwiLFwiOjpzZWxlY3Rpb25cIik7YnJlYWs7Y2FzZVwiM1wiOnQoXCJzdGFydGVuZFwiLFwiOjotbW96LXNlbGVjdGlvblwiKX1yZXR1cm4gZT1lLnJlcGxhY2UoLzskL2csXCJcIil9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgQHN0YXRlOiAxOyBsZXNzaGF0LXNlbGVjdG9yIHsgLWxoLXByb3BlcnR5OiBAcHJvY2VzczsgfVxyXG5cclxufVxyXG5cclxuLnNlcGlhKC4uLikge1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbihuKXtuPW58fFwiMTAwJVwiO3ZhciByPS9cXGQvZ2ksdD0vKD86XFxzfF4pKFxcLj9cXGQrXFwuP1xcZCopKD8hW14oXSpcXCl8XFx3fCV8XFwuKS9naTtyZXR1cm4gci50ZXN0KG4pJiYobj1uLnJlcGxhY2UodCxmdW5jdGlvbihuKXtyZXR1cm4gMD09biYmbnx8bitcIiVcIn0pKSxufSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtZmlsdGVyOiBzZXBpYShAcHJvY2Vzcyk7XHJcbiAgLW1vei1maWx0ZXI6IHNlcGlhKEBwcm9jZXNzKTtcclxuICAtbXMtZmlsdGVyOiBzZXBpYShAcHJvY2Vzcyk7XHJcbiAgZmlsdGVyOiBzZXBpYShAcHJvY2Vzcyk7XHJcbn1cclxuXHJcbi5zaXplKEBzcXVhcmUpIHtcclxuICBAdW5pdDogJ3B4JztcclxuICAucHJvY2VzcyhAc3F1YXJlKSB3aGVuIChpc3BpeGVsKEBzcXVhcmUpKSwgKGlzZW0oQHNxdWFyZSkpLCAoaXNwZXJjZW50YWdlKEBzcXVhcmUpKSwgKGlza2V5d29yZChAc3F1YXJlKSkge1xyXG4gICAgd2lkdGg6IEBzcXVhcmU7XHJcbiAgICBoZWlnaHQ6IEBzcXVhcmU7XHJcbiAgfVxyXG5cclxuICAucHJvY2VzcyhAc3F1YXJlKSB3aGVuIG5vdCAoaXNwaXhlbChAc3F1YXJlKSkgYW5kIG5vdCAoaXNlbShAc3F1YXJlKSkgYW5kIG5vdCAoaXNwZXJjZW50YWdlKEBzcXVhcmUpKSBhbmQgbm90IChpc3N0cmluZyhAc3F1YXJlKSkgYW5kIG5vdCAoaXNrZXl3b3JkKEBzcXVhcmUpKSB7XHJcbiAgICB3aWR0aDogfmBAe3NxdWFyZX0gKyBAe3VuaXR9YDtcclxuICAgIGhlaWdodDogfmBAe3NxdWFyZX0gKyBAe3VuaXR9YDtcclxuICB9XHJcblxyXG4gIC5wcm9jZXNzKEBzcXVhcmUpO1xyXG5cclxufVxyXG5cclxuLnNpemUoQHdpZHRoLCBAaGVpZ2h0KSB7XHJcbiAgQHVuaXQ6ICdweCc7XHJcbiAgLnByb2Nlc3MoQHdpZHRoLCBAaGVpZ2h0KSB3aGVuIChpc3BpeGVsKEB3aWR0aCkpLCAoaXNlbShAd2lkdGgpKSwgKGlzcGVyY2VudGFnZShAd2lkdGgpKSwgKGlza2V5d29yZChAd2lkdGgpKSB7XHJcbiAgICAua2l0dGVucyhAaGVpZ2h0KSB3aGVuIChpc3BpeGVsKEBoZWlnaHQpKSwgKGlzZW0oQGhlaWdodCkpLCAoaXNwZXJjZW50YWdlKEBoZWlnaHQpKSwgKGlza2V5d29yZChAaGVpZ2h0KSkge1xyXG4gICAgICB3aWR0aDogQHdpZHRoO1xyXG4gICAgICBoZWlnaHQ6IEBoZWlnaHQ7XHJcbiAgICB9XHJcbiAgICAua2l0dGVucyhAaGVpZ2h0KSB3aGVuIG5vdCAoaXNwaXhlbChAaGVpZ2h0KSkgYW5kIG5vdCAoaXNlbShAaGVpZ2h0KSkgYW5kIG5vdCAoaXNwZXJjZW50YWdlKEBoZWlnaHQpKSBhbmQgbm90IChpc2tleXdvcmQoQGhlaWdodCkpIHtcclxuICAgICAgd2lkdGg6IEB3aWR0aDtcclxuICAgICAgaGVpZ2h0OiB+YEB7aGVpZ2h0fSArIEB7dW5pdH1gO1xyXG4gICAgfVxyXG4gICAgLmtpdHRlbnMoQGhlaWdodCk7XHJcbiAgfVxyXG5cclxuICAucHJvY2VzcyhAd2lkdGgsIEBoZWlnaHQpIHdoZW4gKGlzcGl4ZWwoQGhlaWdodCkpLCAoaXNlbShAaGVpZ2h0KSksIChpc3BlcmNlbnRhZ2UoQGhlaWdodCkpLCAoaXNrZXl3b3JkKEBoZWlnaHQpKSB7XHJcbiAgICAua2l0dGVucyhAd2lkdGgpIHdoZW4gKGlzcGl4ZWwoQHdpZHRoKSksIChpc2VtKEB3aWR0aCkpLCAoaXNwZXJjZW50YWdlKEB3aWR0aCkpLCAoaXNrZXl3b3JkKEB3aWR0aCkpIHt9XHJcbiAgICAua2l0dGVucyhAd2lkdGgpIHdoZW4gbm90IChpc3BpeGVsKEB3aWR0aCkpIGFuZCBub3QgKGlzZW0oQHdpZHRoKSkgYW5kIG5vdCAoaXNwZXJjZW50YWdlKEB3aWR0aCkpIGFuZCBub3QgKGlza2V5d29yZChAd2lkdGgpKSB7XHJcbiAgICAgIHdpZHRoOiB+YEB7d2lkdGh9ICsgQHt1bml0fWA7XHJcbiAgICAgIGhlaWdodDogQGhlaWdodDtcclxuICAgIH1cclxuICAgIC5raXR0ZW5zKEB3aWR0aCk7XHJcbiAgfVxyXG5cclxuICAucHJvY2VzcyhAd2lkdGgsIEBoZWlnaHQpIHdoZW4gbm90IChpc3BpeGVsKEB3aWR0aCkpIGFuZCBub3QgKGlzZW0oQHdpZHRoKSkgYW5kIG5vdCAoaXNwZXJjZW50YWdlKEB3aWR0aCkpIGFuZCBub3QgKGlza2V5d29yZChAd2lkdGgpKSBhbmQgbm90IChpc3BpeGVsKEBoZWlnaHQpKSBhbmQgbm90IChpc2VtKEBoZWlnaHQpKSBhbmQgbm90IChpc3BlcmNlbnRhZ2UoQGhlaWdodCkpIGFuZCBub3QgKGlza2V5d29yZChAaGVpZ2h0KSkgIHtcclxuICAgIHdpZHRoOiB+YEB7d2lkdGh9ICsgQHt1bml0fWA7XHJcbiAgICBoZWlnaHQ6IH5gQHtoZWlnaHR9ICsgQHt1bml0fWA7XHJcbiAgfVxyXG5cclxuICAucHJvY2VzcyhAd2lkdGgsIEBoZWlnaHQpO1xyXG5cclxufVxyXG5cclxuLnNrZXcoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKGUpe2U9ZXx8XCIwXCI7dmFyIG49L1xcZC9naSxyPS8oPzpcXHN8XikoXFwuP1xcZCtcXC4/XFxkKikoPyFbXihdKlxcKXxcXHd8JXxcXC4pL2dpO3JldHVybiBuLnRlc3QoZSkmJihlPWUucmVwbGFjZShyLGZ1bmN0aW9uKGUpe3JldHVybiAwPT1lJiZlfHxlK1wiZGVnXCJ9KSksZX0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICAtd2Via2l0LXRyYW5zZm9ybTogc2tldyhAcHJvY2Vzcyk7XHJcbiAgLW1vei10cmFuc2Zvcm06IHNrZXcoQHByb2Nlc3MpO1xyXG4gIC1tcy10cmFuc2Zvcm06IHNrZXcoQHByb2Nlc3MpO1xyXG4gIC1vLXRyYW5zZm9ybTogc2tldyhAcHJvY2Vzcyk7XHJcbiAgdHJhbnNmb3JtOiBza2V3KEBwcm9jZXNzKTtcclxufVxyXG5cclxuLnNrZXdYKC4uLikge1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbihlKXtlPWV8fFwiMFwiO3ZhciBuPS9cXGQvZ2kscj0vKD86XFxzfF4pKFxcLj9cXGQrXFwuP1xcZCopKD8hW14oXSpcXCl8XFx3fCV8XFwuKS9naTtyZXR1cm4gbi50ZXN0KGUpJiYoZT1lLnJlcGxhY2UocixmdW5jdGlvbihlKXtyZXR1cm4gMD09ZSYmZXx8ZStcImRlZ1wifSkpLGV9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNrZXdYKEBwcm9jZXNzKTtcclxuICAtbW96LXRyYW5zZm9ybTogc2tld1goQHByb2Nlc3MpO1xyXG4gIC1tcy10cmFuc2Zvcm06IHNrZXdYKEBwcm9jZXNzKTtcclxuICAtby10cmFuc2Zvcm06IHNrZXdYKEBwcm9jZXNzKTtcclxuICB0cmFuc2Zvcm06IHNrZXdYKEBwcm9jZXNzKTtcclxufVxyXG5cclxuLnNrZXdZKC4uLikge1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbihlKXtlPWV8fFwiMFwiO3ZhciBuPS9cXGQvZ2kscj0vKD86XFxzfF4pKFxcLj9cXGQrXFwuP1xcZCopKD8hW14oXSpcXCl8XFx3fCV8XFwuKS9naTtyZXR1cm4gbi50ZXN0KGUpJiYoZT1lLnJlcGxhY2UocixmdW5jdGlvbihlKXtyZXR1cm4gMD09ZSYmZXx8ZStcImRlZ1wifSkpLGV9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNrZXdZKEBwcm9jZXNzKTtcclxuICAtbW96LXRyYW5zZm9ybTogc2tld1koQHByb2Nlc3MpO1xyXG4gIC1tcy10cmFuc2Zvcm06IHNrZXdZKEBwcm9jZXNzKTtcclxuICAtby10cmFuc2Zvcm06IHNrZXdZKEBwcm9jZXNzKTtcclxuICB0cmFuc2Zvcm06IHNrZXdZKEBwcm9jZXNzKTtcclxufVxyXG5cclxuLnRyYW5zZm9ybSguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24oZSl7ZT1lfHxcIm5vbmVcIjt2YXIgcj17dHJhbnNsYXRlOlwicHhcIixyb3RhdGU6XCJkZWdcIixyb3RhdGUzZDpcImRlZ1wiLHNrZXc6XCJkZWdcIn07L15cXHcqXFwoP1thLXowLTkuXSpcXCk/Ly50ZXN0KGUpJiYoZT1lLnJlcGxhY2UoLyg/OiwpKD8hW14oXSpcXCkpL2csXCJcIikpO2Zvcih2YXIgdCBpbiByKWUuaW5kZXhPZih0KT49MCYmKGU9ZS5yZXBsYWNlKG5ldyBSZWdFeHAodCtcIltcXFxcd10/XFxcXChbYS16MC05LCAlXSpcXFxcKVwiKSxmdW5jdGlvbihlKXt2YXIgbj0vKFxcZCtcXC4/XFxkKikoPyFcXHd8JSkvZztyZXR1cm5cInJvdGF0ZTNkXCI9PXQmJihuPS8sXFxzKlxcZCskLyksZS5yZXBsYWNlKG4sZnVuY3Rpb24oZSl7cmV0dXJuIGUrclt0XX0pfSkpO3JldHVybiBlfSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtOiBAcHJvY2VzcztcclxuICAtbW96LXRyYW5zZm9ybTogQHByb2Nlc3M7XHJcbiAgLW1zLXRyYW5zZm9ybTogQHByb2Nlc3M7XHJcbiAgLW8tdHJhbnNmb3JtOiBAcHJvY2VzcztcclxuICB0cmFuc2Zvcm06IEBwcm9jZXNzO1xyXG59XHJcblxyXG4udHJhbnNmb3JtLW9yaWdpbiguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24oZSl7ZT1lfHxcIjUwJSA1MCUgMFwiO3ZhciB0PS9cXGQvZ2kscj0vKD86XFxzfF4pKFxcLj9cXGQrXFwuP1xcZCopKD8hW14oXSpcXCl8XFx3fCV8XFwuKS9naTtyZXR1cm4vXlteLCBdKiwvLnRlc3QoZSkmJihlPWUucmVwbGFjZSgvKD86LCkoPyFbXihdKlxcKSkvZyxcIlwiKSksdC50ZXN0KGUpJiYoZT1lLnJlcGxhY2UocixmdW5jdGlvbihlKXtyZXR1cm4gMD09ZSYmZXx8ZStcIiVcIn0pKSxlfSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogQHByb2Nlc3M7XHJcbiAgLW1vei10cmFuc2Zvcm0tb3JpZ2luOiBAcHJvY2VzcztcclxuICAtbXMtdHJhbnNmb3JtLW9yaWdpbjogQHByb2Nlc3M7XHJcbiAgLW8tdHJhbnNmb3JtLW9yaWdpbjogQHByb2Nlc3M7XHJcbiAgdHJhbnNmb3JtLW9yaWdpbjogQHByb2Nlc3M7XHJcbn1cclxuXHJcbi50cmFuc2Zvcm0tc3R5bGUoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKG4pe3JldHVybiBuPW58fFwiZmxhdFwifSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtLXN0eWxlOiBAcHJvY2VzcztcclxuICAtbW96LXRyYW5zZm9ybS1zdHlsZTogQHByb2Nlc3M7XHJcbiAgLW1zLXRyYW5zZm9ybS1zdHlsZTogQHByb2Nlc3M7XHJcbiAgLW8tdHJhbnNmb3JtLXN0eWxlOiBAcHJvY2VzcztcclxuICB0cmFuc2Zvcm0tc3R5bGU6IEBwcm9jZXNzO1xyXG59XHJcblxyXG4udHJhbnNpdGlvbiguLi4pIHtcclxuICBAcHJvY2Vzc193ZWJraXQ6IH5gKGZ1bmN0aW9uKHIpe3I9cnx8XCJhbGwgMCBlYXNlIDBcIjt2YXIgZT1bXCJiYWNrZ3JvdW5kLXNpemVcIixcImJvcmRlci1yYWRpdXNcIixcImJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXNcIixcImJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzXCIsXCJib3JkZXItdG9wLWxlZnQtcmFkaXVzXCIsXCJib3JkZXItdG9wLXJpZ2h0LXJhZGl1c1wiLFwiYm94LXNoYWRvd1wiLFwiY29sdW1uXCIsXCJ0cmFuc2Zvcm1cIixcImZpbHRlclwiXSx0PVwiLXdlYmtpdC1cIixvPS8oPzpcXGQpKD86bXN8cykvZ2ksYT0vKD86XFxzfF4pKFxcLj9cXGQrXFwuP1xcZCopKD8hW14oXSpcXCl8XFx3fCUpL2dpO3JldHVybi9eW14sIF0qLC8udGVzdChyKSYmKHI9ci5yZXBsYWNlKC8oPzosKSg/IVteKF0qXFwpKS9nLFwiXCIpKSxlLmZvckVhY2goZnVuY3Rpb24oZSxvKXtyLmluZGV4T2YoZSkhPT0tMSYmKHI9ci5yZXBsYWNlKG5ldyBSZWdFeHAoZSxcImdcIiksZnVuY3Rpb24ocil7cmV0dXJuIHQrcn0pKX0pLG8udGVzdChyKXx8XCIwXCI9PT1yfHwocj1yLnJlcGxhY2UoYSxmdW5jdGlvbihyKXtyZXR1cm4gcis9cGFyc2VGbG9hdChyLDEwKT4xMD9cIm1zXCI6XCJzXCJ9KSkscn0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICBAcHJvY2Vzc19tb3o6IH5gKGZ1bmN0aW9uKGUpe2U9ZXx8XCJhbGwgMCBlYXNlIDBcIjt2YXIgbj1bXCJiYWNrZ3JvdW5kLXNpemVcIixcImJveC1zaGFkb3dcIixcImNvbHVtblwiLFwidHJhbnNmb3JtXCIsXCJmaWx0ZXJcIl0scj1cIi1tb3otXCIsdD0vKD86XFxkKSg/Om1zfHMpL2dpLGE9Lyg/Olxcc3xeKShcXC4/XFxkK1xcLj9cXGQqKSg/IVteKF0qXFwpfFxcd3wlKS9naTtyZXR1cm4vXlteLCBdKiwvLnRlc3QoZSkmJihlPWUucmVwbGFjZSgvKD86LCkoPyFbXihdKlxcKSkvZyxcIlwiKSksbi5mb3JFYWNoKGZ1bmN0aW9uKG4sdCl7ZS5pbmRleE9mKG4pIT09LTEmJihlPWUucmVwbGFjZShuZXcgUmVnRXhwKG4sXCJnXCIpLGZ1bmN0aW9uKGUpe3JldHVybiByK2V9KSl9KSx0LnRlc3QoZSl8fFwiMFwiPT09ZXx8KGU9ZS5yZXBsYWNlKGEsZnVuY3Rpb24oZSl7cmV0dXJuIGUrPXBhcnNlRmxvYXQoZSwxMCk+MTA/XCJtc1wiOlwic1wifSkpLGV9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgQHByb2Nlc3Nfb3BlcmE6IH5gKGZ1bmN0aW9uKGUpe2U9ZXx8XCJhbGwgMCBlYXNlIDBcIjt2YXIgbj1bXCJ0cmFuc2Zvcm1cIl0scj1cIi1vLVwiLHQ9Lyg/OlxcZCkoPzptc3xzKS9naSxhPS8oPzpcXHN8XikoXFwuP1xcZCtcXC4/XFxkKikoPyFbXihdKlxcKXxcXHd8JSkvZ2k7cmV0dXJuL15bXiwgXSosLy50ZXN0KGUpJiYoZT1lLnJlcGxhY2UoLyg/OiwpKD8hW14oXSpcXCkpL2csXCJcIikpLG4uZm9yRWFjaChmdW5jdGlvbihuLHQpe2UuaW5kZXhPZihuKSE9PS0xJiYoZT1lLnJlcGxhY2UobmV3IFJlZ0V4cChuLFwiZ1wiKSxmdW5jdGlvbihlKXtyZXR1cm4gcitlfSkpfSksdC50ZXN0KGUpfHxcIjBcIj09PWV8fChlPWUucmVwbGFjZShhLGZ1bmN0aW9uKGUpe3JldHVybiBlKz1wYXJzZUZsb2F0KGUsMTApPjEwP1wibXNcIjpcInNcIn0pKSxlfSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbihuKXtuPW58fFwiYWxsIDAgZWFzZSAwXCI7dmFyIGU9W1wiLXdlYmtpdC1cIixcIi1tb3otXCIsXCItby1cIixcIlwiXSx0PVtcImNvbHVtblwiLFwidHJhbnNmb3JtXCIsXCJmaWx0ZXJcIl0scj0vKD86XFxkKSg/Om1zfHMpL2dpLG89Lyg/Olxcc3xeKShcXC4/XFxkK1xcLj9cXGQqKSg/IVteKF0qXFwpfFxcd3wlKS9naTsvXlteLCBdKiwvLnRlc3QobikmJihuPW4ucmVwbGFjZSgvKD86LCkoPyFbXihdKlxcKSkvZyxcIlwiKSk7dmFyIGk9bi5zcGxpdCgvKD86LCkoPyFbXihdKlxcKSkvZyk7cmV0dXJuIGkuZm9yRWFjaChmdW5jdGlvbihuLHIpe3QuZm9yRWFjaChmdW5jdGlvbih0KXtuLmluZGV4T2YodCkhPT0tMSYmKGlbcl09XCJcIixlLmZvckVhY2goZnVuY3Rpb24obyxhKXtpW3JdKz1uLnRyaW0oKS5yZXBsYWNlKG5ldyBSZWdFeHAodCxcImdcIiksZnVuY3Rpb24obil7cmV0dXJuIG8rbn0pLGE8ZS5sZW5ndGgtMSYmKGlbcl0rPVwiLFwiKX0pKX0pfSksbj1pLmpvaW4oXCIsXCIpLHIudGVzdChuKXx8XCIwXCI9PT1ufHwobj1uLnJlcGxhY2UobyxmdW5jdGlvbihuKXtyZXR1cm4gbis9cGFyc2VGbG9hdChuLDEwKT4xMD9cIm1zXCI6XCJzXCJ9KSksbn0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICAtd2Via2l0LXRyYW5zaXRpb246IEBwcm9jZXNzX3dlYmtpdDtcclxuICAtbW96LXRyYW5zaXRpb246IEBwcm9jZXNzX21vejtcclxuICAtby10cmFuc2l0aW9uOiBAcHJvY2Vzc19vcGVyYTtcclxuICB0cmFuc2l0aW9uOiBAcHJvY2VzcztcclxufVxyXG5cclxuLnRyYW5zaXRpb24tZGVsYXkoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKHIpe3I9cnx8XCIwXCI7dmFyIHM9Lyg/OlxcZCkoPzptc3xzKS9naSx0PS8oPzpcXHN8XikoXFwuP1xcZCtcXC4/XFxkKikoPyFbXihdKlxcKXxcXHd8JXxcXC4pL2dpO3JldHVybiBzLnRlc3Qocil8fFwiMFwiPT09cnx8KHI9ci5yZXBsYWNlKHQsZnVuY3Rpb24ocil7cmV0dXJuIHIrPXBhcnNlRmxvYXQociwxMCk+MTA/XCJtc1wiOlwic1wifSkpLHJ9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC10cmFuc2l0aW9uLWRlbGF5OiBAcHJvY2VzcztcclxuICAtbW96LXRyYW5zaXRpb24tZGVsYXk6IEBwcm9jZXNzO1xyXG4gIC1vLXRyYW5zaXRpb24tZGVsYXk6IEBwcm9jZXNzO1xyXG4gIHRyYW5zaXRpb24tZGVsYXk6IEBwcm9jZXNzO1xyXG59XHJcblxyXG4udHJhbnNpdGlvbi1kdXJhdGlvbiguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24ocil7cj1yfHxcIjBcIjt2YXIgcz0vbXN8cy9naSx0PS8oPzpcXHN8XikoXFwuP1xcZCtcXC4/XFxkKikoPyFbXihdKlxcKXxcXHd8JXxcXC4pL2dpO3JldHVybiBzLnRlc3Qocil8fFwiMFwiPT09cnx8KHI9ci5yZXBsYWNlKHQsZnVuY3Rpb24ocil7cmV0dXJuIHIrPXBhcnNlRmxvYXQociwxMCk+MTA/XCJtc1wiOlwic1wifSkpLHJ9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC10cmFuc2l0aW9uLWR1cmF0aW9uOiBAcHJvY2VzcztcclxuICAtbW96LXRyYW5zaXRpb24tZHVyYXRpb246IEBwcm9jZXNzO1xyXG4gIC1vLXRyYW5zaXRpb24tZHVyYXRpb246IEBwcm9jZXNzO1xyXG4gIHRyYW5zaXRpb24tZHVyYXRpb246IEBwcm9jZXNzO1xyXG59XHJcblxyXG4udHJhbnNpdGlvbi1wcm9wZXJ0eSguLi4pIHtcclxuICBAcHJvY2Vzc193ZWJraXQ6IH5gKGZ1bmN0aW9uKHIpe3I9cnx8XCJhbGxcIjt2YXIgbz1bXCJiYWNrZ3JvdW5kLXNpemVcIixcImJvcmRlci1yYWRpdXNcIixcImJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXNcIixcImJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzXCIsXCJib3JkZXItdG9wLWxlZnQtcmFkaXVzXCIsXCJib3JkZXItdG9wLXJpZ2h0LXJhZGl1c1wiLFwiYm94LXNoYWRvd1wiLFwiY29sdW1uXCIsXCJ0cmFuc2Zvcm1cIixcImZpbHRlclwiXSx0PVwiLXdlYmtpdC1cIjtyZXR1cm4gby5mb3JFYWNoKGZ1bmN0aW9uKG8sZSl7ci5pbmRleE9mKG8pIT09LTEmJihyPXIucmVwbGFjZShuZXcgUmVnRXhwKG8sXCJnXCIpLGZ1bmN0aW9uKHIpe3JldHVybiB0K3J9KSl9KSxyfSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIEBwcm9jZXNzX21vejogfmAoZnVuY3Rpb24obil7bj1ufHxcImFsbFwiO3ZhciByPVtcImJhY2tncm91bmQtc2l6ZVwiLFwiYm94LXNoYWRvd1wiLFwiY29sdW1uXCIsXCJ0cmFuc2Zvcm1cIixcImZpbHRlclwiXSxvPVwiLW1vei1cIjtyZXR1cm4gci5mb3JFYWNoKGZ1bmN0aW9uKHIsZSl7bi5pbmRleE9mKHIpIT09LTEmJihuPW4ucmVwbGFjZShuZXcgUmVnRXhwKHIsXCJnXCIpLGZ1bmN0aW9uKG4pe3JldHVybiBvK259KSl9KSxufSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIEBwcm9jZXNzX29wZXJhOiB+YChmdW5jdGlvbihuKXtuPW58fFwiYWxsXCI7dmFyIHI9W1widHJhbnNmb3JtXCJdLGU9XCItby1cIjtyZXR1cm4gci5mb3JFYWNoKGZ1bmN0aW9uKHIsZil7bi5pbmRleE9mKHIpIT09LTEmJihuPW4ucmVwbGFjZShuZXcgUmVnRXhwKHIsXCJnXCIpLGZ1bmN0aW9uKG4pe3JldHVybiBlK259KSl9KSxufSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbihuKXtuPW58fFwiYWxsXCI7dmFyIG89W1wiLXdlYmtpdC1cIixcIi1tb3otXCIsXCItby1cIixcIlwiXSxyPVtcImNvbHVtblwiLFwidHJhbnNmb3JtXCIsXCJmaWx0ZXJcIl0sdD1uLnNwbGl0KC8oPzosKSg/IVteKF0qXFwpKS9nKTtyZXR1cm4gdC5mb3JFYWNoKGZ1bmN0aW9uKG4sZil7ci5mb3JFYWNoKGZ1bmN0aW9uKHIpe24uaW5kZXhPZihyKSE9PS0xJiYodFtmXT1cIlwiLG8uZm9yRWFjaChmdW5jdGlvbihpLGMpe3RbZl0rPW4udHJpbSgpLnJlcGxhY2UobmV3IFJlZ0V4cChyLFwiZ1wiKSxmdW5jdGlvbihuKXtyZXR1cm4gaStufSksYzxvLmxlbmd0aC0xJiYodFtmXSs9XCIsXCIpfSkpfSl9KSxuPXQuam9pbihcIixcIil9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC10cmFuc2l0aW9uLXByb3BlcnR5OiBAcHJvY2Vzc193ZWJraXQ7XHJcbiAgLW1vei10cmFuc2l0aW9uLXByb3BlcnR5OiBAcHJvY2Vzc19tb3o7XHJcbiAgLW8tdHJhbnNpdGlvbi1wcm9wZXJ0eTogQHByb2Nlc3Nfb3BlcmE7XHJcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogQHByb2Nlc3M7XHJcbn1cclxuXHJcbi50cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbiguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24oZSl7cmV0dXJuIGU9ZXx8XCJlYXNlXCJ9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC10cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogQHByb2Nlc3M7XHJcbiAgLW1vei10cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogQHByb2Nlc3M7XHJcbiAgLW8tdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IEBwcm9jZXNzO1xyXG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBAcHJvY2VzcztcclxufVxyXG5cclxuLnRyYW5zbGF0ZSguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24obil7bj1ufHxcIjBcIjt2YXIgcj0vXFxkL2dpLHQ9Lyg/Olxcc3xeKShcXC4/XFxkK1xcLj9cXGQqKSg/IVteKF0qXFwpfFxcd3wlfFxcLikvZ2k7cmV0dXJuIHIudGVzdChuKSYmKG49bi5yZXBsYWNlKHQsZnVuY3Rpb24obil7cmV0dXJuIDA9PW4mJm58fG4rXCJweFwifSkpLG59KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZShAcHJvY2Vzcyk7XHJcbiAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZShAcHJvY2Vzcyk7XHJcbiAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlKEBwcm9jZXNzKTtcclxuICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZShAcHJvY2Vzcyk7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoQHByb2Nlc3MpO1xyXG59XHJcblxyXG4udHJhbnNsYXRlM2QoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKG4pe249bnx8XCIwLCAwLCAwXCI7dmFyIHI9L1xcZC9naSx0PS8oPzpcXHN8XikoXFwuP1xcZCtcXC4/XFxkKikoPyFbXihdKlxcKXxcXHd8JXxcXC4pL2dpO3JldHVybiByLnRlc3QobikmJihuPW4ucmVwbGFjZSh0LGZ1bmN0aW9uKG4pe3JldHVybiAwPT1uJiZufHxuK1wicHhcIn0pKSxufSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZChAcHJvY2Vzcyk7XHJcbiAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKEBwcm9jZXNzKTtcclxuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZChAcHJvY2Vzcyk7XHJcbiAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGUzZChAcHJvY2Vzcyk7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZChAcHJvY2Vzcyk7XHJcbn1cclxuXHJcbi50cmFuc2xhdGVYKC4uLikge1xyXG4gIEBwcm9jZXNzOiB+YChmdW5jdGlvbihuKXtuPW58fFwiMFwiO3ZhciByPS9cXGQvZ2ksdD0vKD86XFxzfF4pKFxcLj9cXGQrXFwuP1xcZCopKD8hW14oXSpcXCl8XFx3fCV8XFwuKS9naTtyZXR1cm4gci50ZXN0KG4pJiYobj1uLnJlcGxhY2UodCxmdW5jdGlvbihuKXtyZXR1cm4gMD09biYmbnx8bitcInB4XCJ9KSksbn0pKChmdW5jdGlvbigpe3ZhciByPVwiQHthcmd1bWVudHN9XCI7cmV0dXJuIHI9ci5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKX0pKCkpYDtcclxuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWChAcHJvY2Vzcyk7XHJcbiAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoQHByb2Nlc3MpO1xyXG4gIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoQHByb2Nlc3MpO1xyXG4gIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWChAcHJvY2Vzcyk7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKEBwcm9jZXNzKTtcclxufVxyXG5cclxuLnRyYW5zbGF0ZVkoLi4uKSB7XHJcbiAgQHByb2Nlc3M6IH5gKGZ1bmN0aW9uKG4pe249bnx8XCIwXCI7dmFyIHI9L1xcZC9naSx0PS8oPzpcXHN8XikoXFwuP1xcZCtcXC4/XFxkKikoPyFbXihdKlxcKXxcXHd8JXxcXC4pL2dpO3JldHVybiByLnRlc3QobikmJihuPW4ucmVwbGFjZSh0LGZ1bmN0aW9uKG4pe3JldHVybiAwPT1uJiZufHxuK1wicHhcIn0pKSxufSkoKGZ1bmN0aW9uKCl7dmFyIHI9XCJAe2FyZ3VtZW50c31cIjtyZXR1cm4gcj1yLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfSkoKSlgO1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKEBwcm9jZXNzKTtcclxuICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWShAcHJvY2Vzcyk7XHJcbiAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWShAcHJvY2Vzcyk7XHJcbiAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKEBwcm9jZXNzKTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoQHByb2Nlc3MpO1xyXG59XHJcblxyXG4udHJhbnNsYXRlWiguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24obil7bj1ufHxcIjBcIjt2YXIgcj0vXFxkL2dpLHQ9Lyg/Olxcc3xeKShcXC4/XFxkK1xcLj9cXGQqKSg/IVteKF0qXFwpfFxcd3wlfFxcLikvZ2k7cmV0dXJuIHIudGVzdChuKSYmKG49bi5yZXBsYWNlKHQsZnVuY3Rpb24obil7cmV0dXJuIDA9PW4mJm58fG4rXCJweFwifSkpLG59KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVooQHByb2Nlc3MpO1xyXG4gIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVaKEBwcm9jZXNzKTtcclxuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVaKEBwcm9jZXNzKTtcclxuICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVooQHByb2Nlc3MpO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWihAcHJvY2Vzcyk7XHJcbn1cclxuXHJcbi51c2VyLXNlbGVjdCguLi4pIHtcclxuICBAcHJvY2VzczogfmAoZnVuY3Rpb24obil7cmV0dXJuIG49bnx8XCJhdXRvXCJ9KSgoZnVuY3Rpb24oKXt2YXIgcj1cIkB7YXJndW1lbnRzfVwiO3JldHVybiByPXIucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIil9KSgpKWA7XHJcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogQHByb2Nlc3M7XHJcbiAgLW1vei11c2VyLXNlbGVjdDogQHByb2Nlc3M7XHJcbiAgLW1zLXVzZXItc2VsZWN0OiBAcHJvY2VzcztcclxuICB1c2VyLXNlbGVjdDogQHByb2Nlc3M7XHJcbn1cclxuXHJcblxyXG4iLCIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgTEVTUyBFbGVtZW50cyAwLjlcclxuICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgIEEgc2V0IG9mIHVzZWZ1bCBMRVNTIG1peGluc1xyXG4gICAgTW9yZSBpbmZvIGF0OiBodHRwOi8vbGVzc2VsZW1lbnRzLmNvbVxyXG4gIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcblxyXG4vKlxyXG5cclxuICDQn9C+0LTQutC70Y7Rh9C40YLRjCDRjdGC0L7RgiDRhNCw0LnQuyDQsiDQvdCw0YfQsNC70L4gQ1NTL0xFU1Mg0YTQsNC50LvQsFxyXG4gIFxyXG4gINCS0L7RgiDRgtCw0Lo6XHJcbiAgXHJcbiAgQGltcG9ydCBcImxlc3NlbGVtZW50cy5sZXNzXCI7XHJcblxyXG4qL1xyXG5cclxuLmdyYWRpZW50KEBjb2xvcjogI0Y1RjVGNSwgQHN0YXJ0OiAjRUVFLCBAc3RvcDogI0ZGRikge1xyXG4gIGJhY2tncm91bmQ6IEBjb2xvcjtcclxuICBiYWNrZ3JvdW5kOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQgYm90dG9tLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdCB0b3AsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvci1zdG9wKDAsIEBzdGFydCksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvci1zdG9wKDEsIEBzdG9wKSk7XHJcbiAgYmFja2dyb3VuZDogLW1zLWxpbmVhci1ncmFkaWVudChib3R0b20sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAc3RhcnQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAc3RvcCk7XHJcbiAgYmFja2dyb3VuZDogLW1vei1saW5lYXItZ3JhZGllbnQoY2VudGVyIGJvdHRvbSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAc3RhcnQgMCUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQHN0b3AgMTAwJSk7XHJcbiAgYmFja2dyb3VuZDogLW8tbGluZWFyLWdyYWRpZW50KEBzdG9wLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAc3RhcnQpO1xyXG4gIGZpbHRlcjogZSglKFwicHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KHN0YXJ0Q29sb3JzdHI9JyVkJywgZW5kQ29sb3JzdHI9JyVkJywgR3JhZGllbnRUeXBlPTApXCIsQHN0b3AsQHN0YXJ0KSk7XHJcbn1cclxuLmJ3LWdyYWRpZW50KEBjb2xvcjogI0Y1RjVGNSwgQHN0YXJ0OiAwLCBAc3RvcDogMjU1KSB7XHJcbiAgYmFja2dyb3VuZDogQGNvbG9yO1xyXG4gIGJhY2tncm91bmQ6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdCBib3R0b20sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWZ0IHRvcCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yLXN0b3AoMCwgcmdiKEBzdGFydCxAc3RhcnQsQHN0YXJ0KSksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvci1zdG9wKDEsIHJnYihAc3RvcCxAc3RvcCxAc3RvcCkpKTtcclxuICBiYWNrZ3JvdW5kOiAtbXMtbGluZWFyLWdyYWRpZW50KGJvdHRvbSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJnYihAc3RhcnQsQHN0YXJ0LEBzdGFydCkgMCUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZ2IoQHN0b3AsQHN0b3AsQHN0b3ApIDEwMCUpO1xyXG4gIGJhY2tncm91bmQ6IC1tb3otbGluZWFyLWdyYWRpZW50KGNlbnRlciBib3R0b20sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmdiKEBzdGFydCxAc3RhcnQsQHN0YXJ0KSAwJSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZ2IoQHN0b3AsQHN0b3AsQHN0b3ApIDEwMCUpO1xyXG4gIGJhY2tncm91bmQ6IC1vLWxpbmVhci1ncmFkaWVudChyZ2IoQHN0b3AsQHN0b3AsQHN0b3ApLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZ2IoQHN0YXJ0LEBzdGFydCxAc3RhcnQpKTtcclxuICBmaWx0ZXI6IGUoJShcInByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChzdGFydENvbG9yc3RyPSclZCcsIGVuZENvbG9yc3RyPSclZCcsIEdyYWRpZW50VHlwZT0wKVwiLHJnYihAc3RvcCxAc3RvcCxAc3RvcCkscmdiKEBzdGFydCxAc3RhcnQsQHN0YXJ0KSkpO1xyXG59XHJcbi5ib3JkZXJlZChAdG9wLWNvbG9yOiAjRUVFLCBAcmlnaHQtY29sb3I6ICNFRUUsIEBib3R0b20tY29sb3I6ICNFRUUsIEBsZWZ0LWNvbG9yOiAjRUVFKSB7XHJcbiAgYm9yZGVyLXRvcDogc29saWQgMXB4IEB0b3AtY29sb3I7XHJcbiAgYm9yZGVyLWxlZnQ6IHNvbGlkIDFweCBAbGVmdC1jb2xvcjtcclxuICBib3JkZXItcmlnaHQ6IHNvbGlkIDFweCBAcmlnaHQtY29sb3I7XHJcbiAgYm9yZGVyLWJvdHRvbTogc29saWQgMXB4IEBib3R0b20tY29sb3I7XHJcbn1cclxuLmRyb3Atc2hhZG93KEB4LWF4aXM6IDAsIEB5LWF4aXM6IDFweCwgQGJsdXI6IDJweCwgQGFscGhhOiAwLjEpIHtcclxuICAtd2Via2l0LWJveC1zaGFkb3c6IEB4LWF4aXMgQHktYXhpcyBAYmx1ciByZ2JhKDAsIDAsIDAsIEBhbHBoYSk7XHJcbiAgLW1vei1ib3gtc2hhZG93OiBAeC1heGlzIEB5LWF4aXMgQGJsdXIgcmdiYSgwLCAwLCAwLCBAYWxwaGEpO1xyXG4gIGJveC1zaGFkb3c6IEB4LWF4aXMgQHktYXhpcyBAYmx1ciByZ2JhKDAsIDAsIDAsIEBhbHBoYSk7XHJcbn1cclxuLnJvdW5kZWQoQHJhZGl1czogMnB4KSB7XHJcbiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiBAcmFkaXVzO1xyXG4gIC1tb3otYm9yZGVyLXJhZGl1czogQHJhZGl1cztcclxuICBib3JkZXItcmFkaXVzOiBAcmFkaXVzO1xyXG59XHJcbi5ib3JkZXItcmFkaXVzKEB0b3ByaWdodDogMCwgQGJvdHRvbXJpZ2h0OiAwLCBAYm90dG9tbGVmdDogMCwgQHRvcGxlZnQ6IDApIHtcclxuICAtd2Via2l0LWJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiBAdG9wcmlnaHQ7XHJcbiAgLXdlYmtpdC1ib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogQGJvdHRvbXJpZ2h0O1xyXG4gIC13ZWJraXQtYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogQGJvdHRvbWxlZnQ7XHJcbiAgLXdlYmtpdC1ib3JkZXItdG9wLWxlZnQtcmFkaXVzOiBAdG9wbGVmdDtcclxuICAtbW96LWJvcmRlci1yYWRpdXMtdG9wcmlnaHQ6IEB0b3ByaWdodDtcclxuICAtbW96LWJvcmRlci1yYWRpdXMtYm90dG9tcmlnaHQ6IEBib3R0b21yaWdodDtcclxuICAtbW96LWJvcmRlci1yYWRpdXMtYm90dG9tbGVmdDogQGJvdHRvbWxlZnQ7XHJcbiAgLW1vei1ib3JkZXItcmFkaXVzLXRvcGxlZnQ6IEB0b3BsZWZ0O1xyXG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiBAdG9wcmlnaHQ7XHJcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IEBib3R0b21yaWdodDtcclxuICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiBAYm90dG9tbGVmdDtcclxuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiBAdG9wbGVmdDtcclxuICAuYmFja2dyb3VuZC1jbGlwKHBhZGRpbmctYm94KTtcclxufVxyXG4ub3BhY2l0eShAb3BhY2l0eTogMC41KSB7XHJcbiAgLW1vei1vcGFjaXR5OiBAb3BhY2l0eTtcclxuICAta2h0bWwtb3BhY2l0eTogQG9wYWNpdHk7XHJcbiAgLXdlYmtpdC1vcGFjaXR5OiBAb3BhY2l0eTtcclxuICBvcGFjaXR5OiBAb3BhY2l0eTtcclxuICBAb3BwZXJjOiBAb3BhY2l0eSAqIDEwMDtcclxuICAtbXMtZmlsdGVyOiB+XCJwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQWxwaGEob3BhY2l0eT1Ae29wcGVyY30pXCI7XHJcbiAgZmlsdGVyOiB+XCJhbHBoYShvcGFjaXR5PUB7b3BwZXJjfSlcIjtcclxufVxyXG4udHJhbnNpdGlvbi1kdXJhdGlvbihAZHVyYXRpb246IDAuMnMpIHtcclxuICAtbW96LXRyYW5zaXRpb24tZHVyYXRpb246IEBkdXJhdGlvbjtcclxuICAtd2Via2l0LXRyYW5zaXRpb24tZHVyYXRpb246IEBkdXJhdGlvbjtcclxuICAtby10cmFuc2l0aW9uLWR1cmF0aW9uOiBAZHVyYXRpb247XHJcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogQGR1cmF0aW9uO1xyXG59XHJcbi50cmFuc2Zvcm0oLi4uKSB7XHJcbiAgLXdlYmtpdC10cmFuc2Zvcm06IEBhcmd1bWVudHM7XHJcbiAgLW1vei10cmFuc2Zvcm06IEBhcmd1bWVudHM7XHJcbiAgLW8tdHJhbnNmb3JtOiBAYXJndW1lbnRzO1xyXG4gIC1tcy10cmFuc2Zvcm06IEBhcmd1bWVudHM7XHJcbiAgdHJhbnNmb3JtOiBAYXJndW1lbnRzO1xyXG59XHJcbi5yb3RhdGlvbihAZGVnOjVkZWcpe1xyXG4gIC50cmFuc2Zvcm0ocm90YXRlKEBkZWcpKTtcclxufVxyXG4uc2NhbGUoQHJhdGlvOjEuNSl7XHJcbiAgLnRyYW5zZm9ybShzY2FsZShAcmF0aW8pKTtcclxufVxyXG4udHJhbnNpdGlvbihAZHVyYXRpb246MC4ycywgQGVhc2U6ZWFzZS1vdXQpIHtcclxuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCBAZHVyYXRpb24gQGVhc2U7XHJcbiAgLW1vei10cmFuc2l0aW9uOiBhbGwgQGR1cmF0aW9uIEBlYXNlO1xyXG4gIC1vLXRyYW5zaXRpb246IGFsbCBAZHVyYXRpb24gQGVhc2U7XHJcbiAgdHJhbnNpdGlvbjogYWxsIEBkdXJhdGlvbiBAZWFzZTtcclxufVxyXG4uaW5uZXItc2hhZG93KEBob3Jpem9udGFsOjAsIEB2ZXJ0aWNhbDoxcHgsIEBibHVyOjJweCwgQGFscGhhOiAwLjQpIHtcclxuICAtd2Via2l0LWJveC1zaGFkb3c6IGluc2V0IEBob3Jpem9udGFsIEB2ZXJ0aWNhbCBAYmx1ciByZ2JhKDAsIDAsIDAsIEBhbHBoYSk7XHJcbiAgLW1vei1ib3gtc2hhZG93OiBpbnNldCBAaG9yaXpvbnRhbCBAdmVydGljYWwgQGJsdXIgcmdiYSgwLCAwLCAwLCBAYWxwaGEpO1xyXG4gIGJveC1zaGFkb3c6IGluc2V0IEBob3Jpem9udGFsIEB2ZXJ0aWNhbCBAYmx1ciByZ2JhKDAsIDAsIDAsIEBhbHBoYSk7XHJcbn1cclxuLmJveC1zaGFkb3coQGFyZ3VtZW50cykge1xyXG4gIC13ZWJraXQtYm94LXNoYWRvdzogQGFyZ3VtZW50cztcclxuICAtbW96LWJveC1zaGFkb3c6IEBhcmd1bWVudHM7XHJcbiAgYm94LXNoYWRvdzogQGFyZ3VtZW50cztcclxufVxyXG4uYm94LXNpemluZyhAc2l6aW5nOiBib3JkZXItYm94KSB7XHJcbiAgLW1zLWJveC1zaXppbmc6IEBzaXppbmc7XHJcbiAgLW1vei1ib3gtc2l6aW5nOiBAc2l6aW5nO1xyXG4gIC13ZWJraXQtYm94LXNpemluZzogQHNpemluZztcclxuICBib3gtc2l6aW5nOiBAc2l6aW5nO1xyXG59XHJcbi51c2VyLXNlbGVjdChAYXJndW1lbnQ6IG5vbmUpIHtcclxuICAtd2Via2l0LXVzZXItc2VsZWN0OiBAYXJndW1lbnQ7XHJcbiAgLW1vei11c2VyLXNlbGVjdDogQGFyZ3VtZW50O1xyXG4gIC1tcy11c2VyLXNlbGVjdDogQGFyZ3VtZW50O1xyXG4gIHVzZXItc2VsZWN0OiBAYXJndW1lbnQ7XHJcbn1cclxuLmNvbHVtbnMoQGNvbHdpZHRoOiAyNTBweCxcclxuICAgICAgICBAY29sY291bnQ6IDAsXHJcbiAgICAgICAgQGNvbGdhcDogNTBweCxcclxuICAgICAgICBAY29sdW1uUnVsZUNvbG9yOiAjRUVFLFxyXG4gICAgICAgIEBjb2x1bW5SdWxlU3R5bGU6IHNvbGlkLFxyXG4gICAgICAgIEBjb2x1bW5SdWxlV2lkdGg6IDFweCkge1xyXG4gIC1tb3otY29sdW1uLXdpZHRoOiBAY29sd2lkdGg7XHJcbiAgLW1vei1jb2x1bW4tY291bnQ6IEBjb2xjb3VudDtcclxuICAtbW96LWNvbHVtbi1nYXA6IEBjb2xnYXA7XHJcbiAgLW1vei1jb2x1bW4tcnVsZS1jb2xvcjogQGNvbHVtblJ1bGVDb2xvcjtcclxuICAtbW96LWNvbHVtbi1ydWxlLXN0eWxlOiBAY29sdW1uUnVsZVN0eWxlO1xyXG4gIC1tb3otY29sdW1uLXJ1bGUtd2lkdGg6IEBjb2x1bW5SdWxlV2lkdGg7XHJcbiAgLXdlYmtpdC1jb2x1bW4td2lkdGg6IEBjb2x3aWR0aDtcclxuICAtd2Via2l0LWNvbHVtbi1jb3VudDogQGNvbGNvdW50O1xyXG4gIC13ZWJraXQtY29sdW1uLWdhcDogQGNvbGdhcDtcclxuICAtd2Via2l0LWNvbHVtbi1ydWxlLWNvbG9yOiBAY29sdW1uUnVsZUNvbG9yO1xyXG4gIC13ZWJraXQtY29sdW1uLXJ1bGUtc3R5bGU6IEBjb2x1bW5SdWxlU3R5bGU7XHJcbiAgLXdlYmtpdC1jb2x1bW4tcnVsZS13aWR0aDogQGNvbHVtblJ1bGVXaWR0aDtcclxuICBjb2x1bW4td2lkdGg6IEBjb2x3aWR0aDtcclxuICBjb2x1bW4tY291bnQ6IEBjb2xjb3VudDtcclxuICBjb2x1bW4tZ2FwOiBAY29sZ2FwO1xyXG4gIGNvbHVtbi1ydWxlLWNvbG9yOiBAY29sdW1uUnVsZUNvbG9yO1xyXG4gIGNvbHVtbi1ydWxlLXN0eWxlOiBAY29sdW1uUnVsZVN0eWxlO1xyXG4gIGNvbHVtbi1ydWxlLXdpZHRoOiBAY29sdW1uUnVsZVdpZHRoO1xyXG59XHJcbi50cmFuc2xhdGUoQHg6MCwgQHk6MCkge1xyXG4gIC50cmFuc2Zvcm0odHJhbnNsYXRlKEB4LCBAeSkpO1xyXG59XHJcbi5iYWNrZ3JvdW5kLWNsaXAoQGFyZ3VtZW50OiBwYWRkaW5nLWJveCkge1xyXG4gIC1tb3otYmFja2dyb3VuZC1jbGlwOiBAYXJndW1lbnQ7XHJcbiAgLXdlYmtpdC1iYWNrZ3JvdW5kLWNsaXA6IEBhcmd1bWVudDtcclxuICBiYWNrZ3JvdW5kLWNsaXA6IEBhcmd1bWVudDtcclxufVxyXG5cclxuXHJcblxyXG4vKiBNWSBNSVhJTlMgKi9cclxuXHJcblxyXG4uYmctaW1hZ2UgKFxyXG4gIEBjb2xvcjogIzAwMCwgXHJcbiAgQGltZ3VybDogdXJsKCcuLi9pbWFnZXMvYmcuanBnJyksXHJcbiAgQHJlcGVhdDogbm8tcmVwZWF0LCBcclxuICBAbGVmdDogbGVmdCxcclxuICBAdG9wOiB0b3ApIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBAY29sb3I7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogQGltZ3VybDtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogQHJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBAbGVmdCBAdG9wO1xyXG59XHJcblxyXG5cclxuLnRleHRzaGFkb3cgKCBAaG9yLXZlcnQtcmFkLWNvbG9yOiAwcHggMXB4IDBweCBibHVlICkge1xyXG4gIHRleHQtc2hhZG93OiBAaG9yLXZlcnQtcmFkLWNvbG9yO1xyXG59XHJcblxyXG4uY292ZXIge1xyXG4gIC13ZWJraXQtYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgICAgIC1vLWJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG59XHJcblxyXG5cclxuXHJcbiJdfQ== */
